// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=.js"
// @generated from file execution.proto (package n8nwork.execution.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CancelExecutionRequest, CancelExecutionResponse, GetExecutionStatusRequest, GetExecutionStatusResponse, HealthRequest, HealthResponse, StepExecRequest, StepExecResponse } from "./execution_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Core execution service for workflow steps
 *
 * @generated from service n8nwork.execution.v1.ExecutionService
 */
export const ExecutionService = {
  typeName: "n8nwork.execution.v1.ExecutionService",
  methods: {
    /**
     * Execute a single workflow step
     *
     * @generated from rpc n8nwork.execution.v1.ExecutionService.ExecuteStep
     */
    executeStep: {
      name: "ExecuteStep",
      I: StepExecRequest,
      O: StepExecResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get execution status
     *
     * @generated from rpc n8nwork.execution.v1.ExecutionService.GetExecutionStatus
     */
    getExecutionStatus: {
      name: "GetExecutionStatus",
      I: GetExecutionStatusRequest,
      O: GetExecutionStatusResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Cancel execution
     *
     * @generated from rpc n8nwork.execution.v1.ExecutionService.CancelExecution
     */
    cancelExecution: {
      name: "CancelExecution",
      I: CancelExecutionRequest,
      O: CancelExecutionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Health check
     *
     * @generated from rpc n8nwork.execution.v1.ExecutionService.Health
     */
    health: {
      name: "Health",
      I: HealthRequest,
      O: HealthResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

