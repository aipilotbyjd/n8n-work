// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: health.proto

package healthv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Serving status enum
type ServingStatus int32

const (
	ServingStatus_UNKNOWN         ServingStatus = 0
	ServingStatus_SERVING         ServingStatus = 1
	ServingStatus_NOT_SERVING     ServingStatus = 2
	ServingStatus_SERVICE_UNKNOWN ServingStatus = 3
)

// Enum value maps for ServingStatus.
var (
	ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
		3: "SERVICE_UNKNOWN",
	}
	ServingStatus_value = map[string]int32{
		"UNKNOWN":         0,
		"SERVING":         1,
		"NOT_SERVING":     2,
		"SERVICE_UNKNOWN": 3,
	}
)

func (x ServingStatus) Enum() *ServingStatus {
	p := new(ServingStatus)
	*p = x
	return p
}

func (x ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_health_proto_enumTypes[0].Descriptor()
}

func (ServingStatus) Type() protoreflect.EnumType {
	return &file_health_proto_enumTypes[0]
}

func (x ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServingStatus.Descriptor instead.
func (ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{0}
}

// Health check request
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_health_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// Health check response
type HealthCheckResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Status    ServingStatus          `protobuf:"varint,1,opt,name=status,proto3,enum=n8nwork.health.v1.ServingStatus" json:"status,omitempty"`
	Message   string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Additional service info
	ServiceInfo *ServiceInfo `protobuf:"bytes,4,opt,name=service_info,json=serviceInfo,proto3" json:"service_info,omitempty"`
	// Health details
	Details       []*HealthDetail `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_health_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetStatus() ServingStatus {
	if x != nil {
		return x.Status
	}
	return ServingStatus_UNKNOWN
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HealthCheckResponse) GetServiceInfo() *ServiceInfo {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

func (x *HealthCheckResponse) GetDetails() []*HealthDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

// Service information
type ServiceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Build         string                 `protobuf:"bytes,3,opt,name=build,proto3" json:"build,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceInfo) Reset() {
	*x = ServiceInfo{}
	mi := &file_health_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfo) ProtoMessage() {}

func (x *ServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfo.ProtoReflect.Descriptor instead.
func (*ServiceInfo) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServiceInfo) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *ServiceInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ServiceInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Individual health check detail
type HealthDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Component     string                 `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	Status        ServingStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=n8nwork.health.v1.ServingStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Metrics       map[string]string      `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LastCheck     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_check,json=lastCheck,proto3" json:"last_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthDetail) Reset() {
	*x = HealthDetail{}
	mi := &file_health_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthDetail) ProtoMessage() {}

func (x *HealthDetail) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthDetail.ProtoReflect.Descriptor instead.
func (*HealthDetail) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{3}
}

func (x *HealthDetail) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *HealthDetail) GetStatus() ServingStatus {
	if x != nil {
		return x.Status
	}
	return ServingStatus_UNKNOWN
}

func (x *HealthDetail) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthDetail) GetMetrics() map[string]string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *HealthDetail) GetLastCheck() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheck
	}
	return nil
}

// Readiness check request
type ReadinessCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadinessCheckRequest) Reset() {
	*x = ReadinessCheckRequest{}
	mi := &file_health_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadinessCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessCheckRequest) ProtoMessage() {}

func (x *ReadinessCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessCheckRequest.ProtoReflect.Descriptor instead.
func (*ReadinessCheckRequest) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{4}
}

func (x *ReadinessCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// Readiness check response
type ReadinessCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ready         bool                   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Dependencies  []*DependencyStatus    `protobuf:"bytes,3,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadinessCheckResponse) Reset() {
	*x = ReadinessCheckResponse{}
	mi := &file_health_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadinessCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessCheckResponse) ProtoMessage() {}

func (x *ReadinessCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessCheckResponse.ProtoReflect.Descriptor instead.
func (*ReadinessCheckResponse) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{5}
}

func (x *ReadinessCheckResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *ReadinessCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReadinessCheckResponse) GetDependencies() []*DependencyStatus {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

// Dependency status
type DependencyStatus struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type           string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // "database", "message_queue", "cache", "external_api"
	Healthy        bool                   `protobuf:"varint,3,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Message        string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	ResponseTimeMs int64                  `protobuf:"varint,5,opt,name=response_time_ms,json=responseTimeMs,proto3" json:"response_time_ms,omitempty"`
	LastCheck      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_check,json=lastCheck,proto3" json:"last_check,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DependencyStatus) Reset() {
	*x = DependencyStatus{}
	mi := &file_health_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DependencyStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyStatus) ProtoMessage() {}

func (x *DependencyStatus) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyStatus.ProtoReflect.Descriptor instead.
func (*DependencyStatus) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{6}
}

func (x *DependencyStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DependencyStatus) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DependencyStatus) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *DependencyStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DependencyStatus) GetResponseTimeMs() int64 {
	if x != nil {
		return x.ResponseTimeMs
	}
	return 0
}

func (x *DependencyStatus) GetLastCheck() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheck
	}
	return nil
}

// Liveness check request
type LivenessCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LivenessCheckRequest) Reset() {
	*x = LivenessCheckRequest{}
	mi := &file_health_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LivenessCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessCheckRequest) ProtoMessage() {}

func (x *LivenessCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessCheckRequest.ProtoReflect.Descriptor instead.
func (*LivenessCheckRequest) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{7}
}

func (x *LivenessCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// Liveness check response
type LivenessCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alive         bool                   `protobuf:"varint,1,opt,name=alive,proto3" json:"alive,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LivenessCheckResponse) Reset() {
	*x = LivenessCheckResponse{}
	mi := &file_health_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LivenessCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessCheckResponse) ProtoMessage() {}

func (x *LivenessCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_health_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessCheckResponse.ProtoReflect.Descriptor instead.
func (*LivenessCheckResponse) Descriptor() ([]byte, []int) {
	return file_health_proto_rawDescGZIP(), []int{8}
}

func (x *LivenessCheckResponse) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

func (x *LivenessCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LivenessCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_health_proto protoreflect.FileDescriptor

const file_health_proto_rawDesc = "" +
	"\n" +
	"\fhealth.proto\x12\x11n8nwork.health.v1\x1a\x1fgoogle/protobuf/timestamp.proto\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\xa1\x02\n" +
	"\x13HealthCheckResponse\x128\n" +
	"\x06status\x18\x01 \x01(\x0e2 .n8nwork.health.v1.ServingStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12A\n" +
	"\fservice_info\x18\x04 \x01(\v2\x1e.n8nwork.health.v1.ServiceInfoR\vserviceInfo\x129\n" +
	"\adetails\x18\x05 \x03(\v2\x1f.n8nwork.health.v1.HealthDetailR\adetails\"\x93\x02\n" +
	"\vServiceInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x14\n" +
	"\x05build\x18\x03 \x01(\tR\x05build\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12H\n" +
	"\bmetadata\x18\x05 \x03(\v2,.n8nwork.health.v1.ServiceInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbf\x02\n" +
	"\fHealthDetail\x12\x1c\n" +
	"\tcomponent\x18\x01 \x01(\tR\tcomponent\x128\n" +
	"\x06status\x18\x02 \x01(\x0e2 .n8nwork.health.v1.ServingStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12F\n" +
	"\ametrics\x18\x04 \x03(\v2,.n8nwork.health.v1.HealthDetail.MetricsEntryR\ametrics\x129\n" +
	"\n" +
	"last_check\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tlastCheck\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"1\n" +
	"\x15ReadinessCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\x91\x01\n" +
	"\x16ReadinessCheckResponse\x12\x14\n" +
	"\x05ready\x18\x01 \x01(\bR\x05ready\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12G\n" +
	"\fdependencies\x18\x03 \x03(\v2#.n8nwork.health.v1.DependencyStatusR\fdependencies\"\xd3\x01\n" +
	"\x10DependencyStatus\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x18\n" +
	"\ahealthy\x18\x03 \x01(\bR\ahealthy\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12(\n" +
	"\x10response_time_ms\x18\x05 \x01(\x03R\x0eresponseTimeMs\x129\n" +
	"\n" +
	"last_check\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tlastCheck\"0\n" +
	"\x14LivenessCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\x81\x01\n" +
	"\x15LivenessCheckResponse\x12\x14\n" +
	"\x05alive\x18\x01 \x01(\bR\x05alive\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp*O\n" +
	"\rServingStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x02\x12\x13\n" +
	"\x0fSERVICE_UNKNOWN\x10\x032\xfa\x02\n" +
	"\rHealthService\x12V\n" +
	"\x05Check\x12%.n8nwork.health.v1.HealthCheckRequest\x1a&.n8nwork.health.v1.HealthCheckResponse\x12X\n" +
	"\x05Watch\x12%.n8nwork.health.v1.HealthCheckRequest\x1a&.n8nwork.health.v1.HealthCheckResponse0\x01\x12\\\n" +
	"\x05Ready\x12(.n8nwork.health.v1.ReadinessCheckRequest\x1a).n8nwork.health.v1.ReadinessCheckResponse\x12Y\n" +
	"\x04Live\x12'.n8nwork.health.v1.LivenessCheckRequest\x1a(.n8nwork.health.v1.LivenessCheckResponseB?Z=github.com/n8n-work/proto-contracts/gen/go/health/v1;healthv1b\x06proto3"

var (
	file_health_proto_rawDescOnce sync.Once
	file_health_proto_rawDescData []byte
)

func file_health_proto_rawDescGZIP() []byte {
	file_health_proto_rawDescOnce.Do(func() {
		file_health_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_health_proto_rawDesc), len(file_health_proto_rawDesc)))
	})
	return file_health_proto_rawDescData
}

var file_health_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_health_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_health_proto_goTypes = []any{
	(ServingStatus)(0),             // 0: n8nwork.health.v1.ServingStatus
	(*HealthCheckRequest)(nil),     // 1: n8nwork.health.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),    // 2: n8nwork.health.v1.HealthCheckResponse
	(*ServiceInfo)(nil),            // 3: n8nwork.health.v1.ServiceInfo
	(*HealthDetail)(nil),           // 4: n8nwork.health.v1.HealthDetail
	(*ReadinessCheckRequest)(nil),  // 5: n8nwork.health.v1.ReadinessCheckRequest
	(*ReadinessCheckResponse)(nil), // 6: n8nwork.health.v1.ReadinessCheckResponse
	(*DependencyStatus)(nil),       // 7: n8nwork.health.v1.DependencyStatus
	(*LivenessCheckRequest)(nil),   // 8: n8nwork.health.v1.LivenessCheckRequest
	(*LivenessCheckResponse)(nil),  // 9: n8nwork.health.v1.LivenessCheckResponse
	nil,                            // 10: n8nwork.health.v1.ServiceInfo.MetadataEntry
	nil,                            // 11: n8nwork.health.v1.HealthDetail.MetricsEntry
	(*timestamppb.Timestamp)(nil),  // 12: google.protobuf.Timestamp
}
var file_health_proto_depIdxs = []int32{
	0,  // 0: n8nwork.health.v1.HealthCheckResponse.status:type_name -> n8nwork.health.v1.ServingStatus
	12, // 1: n8nwork.health.v1.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 2: n8nwork.health.v1.HealthCheckResponse.service_info:type_name -> n8nwork.health.v1.ServiceInfo
	4,  // 3: n8nwork.health.v1.HealthCheckResponse.details:type_name -> n8nwork.health.v1.HealthDetail
	12, // 4: n8nwork.health.v1.ServiceInfo.start_time:type_name -> google.protobuf.Timestamp
	10, // 5: n8nwork.health.v1.ServiceInfo.metadata:type_name -> n8nwork.health.v1.ServiceInfo.MetadataEntry
	0,  // 6: n8nwork.health.v1.HealthDetail.status:type_name -> n8nwork.health.v1.ServingStatus
	11, // 7: n8nwork.health.v1.HealthDetail.metrics:type_name -> n8nwork.health.v1.HealthDetail.MetricsEntry
	12, // 8: n8nwork.health.v1.HealthDetail.last_check:type_name -> google.protobuf.Timestamp
	7,  // 9: n8nwork.health.v1.ReadinessCheckResponse.dependencies:type_name -> n8nwork.health.v1.DependencyStatus
	12, // 10: n8nwork.health.v1.DependencyStatus.last_check:type_name -> google.protobuf.Timestamp
	12, // 11: n8nwork.health.v1.LivenessCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 12: n8nwork.health.v1.HealthService.Check:input_type -> n8nwork.health.v1.HealthCheckRequest
	1,  // 13: n8nwork.health.v1.HealthService.Watch:input_type -> n8nwork.health.v1.HealthCheckRequest
	5,  // 14: n8nwork.health.v1.HealthService.Ready:input_type -> n8nwork.health.v1.ReadinessCheckRequest
	8,  // 15: n8nwork.health.v1.HealthService.Live:input_type -> n8nwork.health.v1.LivenessCheckRequest
	2,  // 16: n8nwork.health.v1.HealthService.Check:output_type -> n8nwork.health.v1.HealthCheckResponse
	2,  // 17: n8nwork.health.v1.HealthService.Watch:output_type -> n8nwork.health.v1.HealthCheckResponse
	6,  // 18: n8nwork.health.v1.HealthService.Ready:output_type -> n8nwork.health.v1.ReadinessCheckResponse
	9,  // 19: n8nwork.health.v1.HealthService.Live:output_type -> n8nwork.health.v1.LivenessCheckResponse
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_health_proto_init() }
func file_health_proto_init() {
	if File_health_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_health_proto_rawDesc), len(file_health_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_health_proto_goTypes,
		DependencyIndexes: file_health_proto_depIdxs,
		EnumInfos:         file_health_proto_enumTypes,
		MessageInfos:      file_health_proto_msgTypes,
	}.Build()
	File_health_proto = out.File
	file_health_proto_goTypes = nil
	file_health_proto_depIdxs = nil
}
