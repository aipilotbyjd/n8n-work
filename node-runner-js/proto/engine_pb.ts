// @generated by protoc-gen-es v2.7.0 with parameter "target=ts,import_extension=.js"
// @generated from file engine.proto (package engine, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { ExecutionStatus, NodePolicy, StepExecution, StepStatus, Workflow } from "./orchestrator_pb.js";
import { file_orchestrator } from "./orchestrator_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file engine.proto.
 */
export const file_engine: GenFile = /*@__PURE__*/
  fileDesc("CgxlbmdpbmUucHJvdG8SBmVuZ2luZSKQAgoSUnVuV29ya2Zsb3dSZXF1ZXN0EhQKDGV4ZWN1dGlvbl9pZBgBIAEoCRIoCgh3b3JrZmxvdxgCIAEoCzIWLm9yY2hlc3RyYXRvci5Xb3JrZmxvdxI4Cgdjb250ZXh0GAMgAygLMicuZW5naW5lLlJ1bldvcmtmbG93UmVxdWVzdC5Db250ZXh0RW50cnkSFAoMdHJpZ2dlcl9kYXRhGAQgASgJEhEKCXRlbmFudF9pZBgFIAEoCRInCgZjb25maWcYBiABKAsyFy5lbmdpbmUuRXhlY3V0aW9uQ29uZmlnGi4KDENvbnRleHRFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIqICCg9FeGVjdXRpb25Db25maWcSFwoPdGltZW91dF9zZWNvbmRzGAEgASgFEhMKC21heF9yZXRyaWVzGAIgASgFEiEKGWVuYWJsZV9wYXJhbGxlbF9leGVjdXRpb24YAyABKAgSUAoVZW52aXJvbm1lbnRfdmFyaWFibGVzGAQgAygLMjEuZW5naW5lLkV4ZWN1dGlvbkNvbmZpZy5FbnZpcm9ubWVudFZhcmlhYmxlc0VudHJ5Ei8KD3Jlc291cmNlX2xpbWl0cxgFIAEoCzIWLmVuZ2luZS5SZXNvdXJjZUxpbWl0cxo7ChlFbnZpcm9ubWVudFZhcmlhYmxlc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiiAEKDlJlc291cmNlTGltaXRzEhgKEG1heF9tZW1vcnlfYnl0ZXMYASABKAMSGgoSbWF4X2NwdV9taWxsaWNvcmVzGAIgASgFEiIKGm1heF9leGVjdXRpb25fdGltZV9zZWNvbmRzGAMgASgFEhwKFG1heF9uZXR3b3JrX3JlcXVlc3RzGAQgASgFImwKE1J1bldvcmtmbG93UmVzcG9uc2USFAoMZXhlY3V0aW9uX2lkGAEgASgJEg8KB3N1Y2Nlc3MYAiABKAgSFQoNZXJyb3JfbWVzc2FnZRgDIAEoCRIXCg9zY2hlZHVsZWRfc3RlcHMYBCADKAkinQIKD1N0ZXBFeGVjUmVxdWVzdBIUCgxleGVjdXRpb25faWQYASABKAkSDwoHc3RlcF9pZBgCIAEoCRIPCgdub2RlX2lkGAMgASgJEhEKCW5vZGVfdHlwZRgEIAEoCRI7CgpwYXJhbWV0ZXJzGAUgAygLMicuZW5naW5lLlN0ZXBFeGVjUmVxdWVzdC5QYXJhbWV0ZXJzRW50cnkSEgoKaW5wdXRfZGF0YRgGIAEoCRIoCgZwb2xpY3kYByABKAsyGC5vcmNoZXN0cmF0b3IuTm9kZVBvbGljeRIRCgl0ZW5hbnRfaWQYCCABKAkaMQoPUGFyYW1ldGVyc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiUwoQU3RlcEV4ZWNSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEhUKDWVycm9yX21lc3NhZ2UYAiABKAkSFwoPYXNzaWduZWRfcnVubmVyGAMgASgJIs4BCg9TdGVwRG9uZVJlcXVlc3QSFAoMZXhlY3V0aW9uX2lkGAEgASgJEg8KB3N0ZXBfaWQYAiABKAkSKAoGc3RhdHVzGAMgASgOMhgub3JjaGVzdHJhdG9yLlN0ZXBTdGF0dXMSEwoLb3V0cHV0X2RhdGEYBCABKAkSFQoNZXJyb3JfbWVzc2FnZRgFIAEoCRITCgtyZXRyeV9jb3VudBgGIAEoBRIpCgdtZXRyaWNzGAcgASgLMhguZW5naW5lLkV4ZWN1dGlvbk1ldHJpY3MipAEKEEV4ZWN1dGlvbk1ldHJpY3MSGQoRZXhlY3V0aW9uX3RpbWVfbXMYASABKAMSGQoRbWVtb3J5X3VzZWRfYnl0ZXMYAiABKAMSHgoWbmV0d29ya19yZXF1ZXN0c19jb3VudBgDIAEoBRIaChJuZXR3b3JrX2J5dGVzX3NlbnQYBCABKAMSHgoWbmV0d29ya19ieXRlc19yZWNlaXZlZBgFIAEoAyJOChBTdGVwRG9uZVJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSFQoNZXJyb3JfbWVzc2FnZRgCIAEoCRISCgpuZXh0X3N0ZXBzGAMgAygJIlEKFkNhbmNlbEV4ZWN1dGlvblJlcXVlc3QSFAoMZXhlY3V0aW9uX2lkGAEgASgJEg4KBnJlYXNvbhgCIAEoCRIRCgl0ZW5hbnRfaWQYAyABKAkiWgoXQ2FuY2VsRXhlY3V0aW9uUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIVCg1lcnJvcl9tZXNzYWdlGAIgASgJEhcKD2NhbmNlbGxlZF9zdGVwcxgDIAMoCSJEChlHZXRFeGVjdXRpb25TdGF0dXNSZXF1ZXN0EhQKDGV4ZWN1dGlvbl9pZBgBIAEoCRIRCgl0ZW5hbnRfaWQYAiABKAkizAEKGkdldEV4ZWN1dGlvblN0YXR1c1Jlc3BvbnNlEi0KBnN0YXR1cxgBIAEoDjIdLm9yY2hlc3RyYXRvci5FeGVjdXRpb25TdGF0dXMSKgoFc3RlcHMYAiADKAsyGy5vcmNoZXN0cmF0b3IuU3RlcEV4ZWN1dGlvbhIrCghwcm9ncmVzcxgDIAEoCzIZLmVuZ2luZS5FeGVjdXRpb25Qcm9ncmVzcxIPCgdzdWNjZXNzGAQgASgIEhUKDWVycm9yX21lc3NhZ2UYBSABKAkipAEKEUV4ZWN1dGlvblByb2dyZXNzEhMKC3RvdGFsX3N0ZXBzGAEgASgFEhcKD2NvbXBsZXRlZF9zdGVwcxgCIAEoBRIUCgxmYWlsZWRfc3RlcHMYAyABKAUSFQoNcnVubmluZ19zdGVwcxgEIAEoBRIVCg1wZW5kaW5nX3N0ZXBzGAUgASgFEh0KFWNvbXBsZXRpb25fcGVyY2VudGFnZRgGIAEoASJXChtMaXN0QWN0aXZlRXhlY3V0aW9uc1JlcXVlc3QSEQoJdGVuYW50X2lkGAEgASgJEhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJIowBChxMaXN0QWN0aXZlRXhlY3V0aW9uc1Jlc3BvbnNlEisKCmV4ZWN1dGlvbnMYASADKAsyFy5lbmdpbmUuQWN0aXZlRXhlY3V0aW9uEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCRIPCgdzdWNjZXNzGAMgASgIEhUKDWVycm9yX21lc3NhZ2UYBCABKAki2wEKD0FjdGl2ZUV4ZWN1dGlvbhIUCgxleGVjdXRpb25faWQYASABKAkSEwoLd29ya2Zsb3dfaWQYAiABKAkSLQoGc3RhdHVzGAMgASgOMh0ub3JjaGVzdHJhdG9yLkV4ZWN1dGlvblN0YXR1cxISCgpzdGFydGVkX2F0GAQgASgJEisKCHByb2dyZXNzGAUgASgLMhkuZW5naW5lLkV4ZWN1dGlvblByb2dyZXNzEi0KDnJlc291cmNlX3VzYWdlGAYgASgLMhUuZW5naW5lLlJlc291cmNlVXNhZ2UiQgoXR2V0UmVzb3VyY2VVc2FnZVJlcXVlc3QSEQoJdGVuYW50X2lkGAEgASgJEhQKDGV4ZWN1dGlvbl9pZBgCIAEoCSJoChhHZXRSZXNvdXJjZVVzYWdlUmVzcG9uc2USJAoFdXNhZ2UYASABKAsyFS5lbmdpbmUuUmVzb3VyY2VVc2FnZRIPCgdzdWNjZXNzGAIgASgIEhUKDWVycm9yX21lc3NhZ2UYAyABKAkivAEKDVJlc291cmNlVXNhZ2USGQoRbWVtb3J5X3VzZWRfYnl0ZXMYASABKAMSGwoTY3B1X3VzZWRfbWlsbGljb3JlcxgCIAEoBRIZChFhY3RpdmVfZXhlY3V0aW9ucxgDIAEoBRIZChFxdWV1ZWRfZXhlY3V0aW9ucxgEIAEoBRIgChhuZXR3b3JrX2J5dGVzX3Blcl9taW51dGUYBSABKAMSGwoTcmVxdWVzdHNfcGVyX21pbnV0ZRgGIAEoBSJQChdVcGRhdGVSYXRlTGltaXRzUmVxdWVzdBIRCgl0ZW5hbnRfaWQYASABKAkSIgoGbGltaXRzGAIgASgLMhIuZW5naW5lLlJhdGVMaW1pdHMimwEKClJhdGVMaW1pdHMSIQoZbWF4X2V4ZWN1dGlvbnNfcGVyX21pbnV0ZRgBIAEoBRIhChltYXhfY29uY3VycmVudF9leGVjdXRpb25zGAIgASgFEh8KF21heF9yZXF1ZXN0c19wZXJfbWludXRlGAMgASgFEiYKHm1heF9iYW5kd2lkdGhfYnl0ZXNfcGVyX21pbnV0ZRgEIAEoAyJCChhVcGRhdGVSYXRlTGltaXRzUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIVCg1lcnJvcl9tZXNzYWdlGAIgASgJIg8KDUhlYWx0aFJlcXVlc3QihgEKDkhlYWx0aFJlc3BvbnNlEg4KBnN0YXR1cxgBIAEoCRI0CgdkZXRhaWxzGAIgAygLMiMuZW5naW5lLkhlYWx0aFJlc3BvbnNlLkRldGFpbHNFbnRyeRouCgxEZXRhaWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ATLQBQoNRW5naW5lU2VydmljZRJGCgtSdW5Xb3JrZmxvdxIaLmVuZ2luZS5SdW5Xb3JrZmxvd1JlcXVlc3QaGy5lbmdpbmUuUnVuV29ya2Zsb3dSZXNwb25zZRI9CghTdGVwRXhlYxIXLmVuZ2luZS5TdGVwRXhlY1JlcXVlc3QaGC5lbmdpbmUuU3RlcEV4ZWNSZXNwb25zZRI9CghTdGVwRG9uZRIXLmVuZ2luZS5TdGVwRG9uZVJlcXVlc3QaGC5lbmdpbmUuU3RlcERvbmVSZXNwb25zZRJSCg9DYW5jZWxFeGVjdXRpb24SHi5lbmdpbmUuQ2FuY2VsRXhlY3V0aW9uUmVxdWVzdBofLmVuZ2luZS5DYW5jZWxFeGVjdXRpb25SZXNwb25zZRJbChJHZXRFeGVjdXRpb25TdGF0dXMSIS5lbmdpbmUuR2V0RXhlY3V0aW9uU3RhdHVzUmVxdWVzdBoiLmVuZ2luZS5HZXRFeGVjdXRpb25TdGF0dXNSZXNwb25zZRJhChRMaXN0QWN0aXZlRXhlY3V0aW9ucxIjLmVuZ2luZS5MaXN0QWN0aXZlRXhlY3V0aW9uc1JlcXVlc3QaJC5lbmdpbmUuTGlzdEFjdGl2ZUV4ZWN1dGlvbnNSZXNwb25zZRJVChBHZXRSZXNvdXJjZVVzYWdlEh8uZW5naW5lLkdldFJlc291cmNlVXNhZ2VSZXF1ZXN0GiAuZW5naW5lLkdldFJlc291cmNlVXNhZ2VSZXNwb25zZRJVChBVcGRhdGVSYXRlTGltaXRzEh8uZW5naW5lLlVwZGF0ZVJhdGVMaW1pdHNSZXF1ZXN0GiAuZW5naW5lLlVwZGF0ZVJhdGVMaW1pdHNSZXNwb25zZRI3CgZIZWFsdGgSFS5lbmdpbmUuSGVhbHRoUmVxdWVzdBoWLmVuZ2luZS5IZWFsdGhSZXNwb25zZUIQWg4uL3Byb3RvL2VuZ2luZWIGcHJvdG8z", [file_orchestrator]);

/**
 * @generated from message engine.RunWorkflowRequest
 */
export type RunWorkflowRequest = Message<"engine.RunWorkflowRequest"> & {
  /**
   * @generated from field: string execution_id = 1;
   */
  executionId: string;

  /**
   * @generated from field: orchestrator.Workflow workflow = 2;
   */
  workflow?: Workflow;

  /**
   * @generated from field: map<string, string> context = 3;
   */
  context: { [key: string]: string };

  /**
   * @generated from field: string trigger_data = 4;
   */
  triggerData: string;

  /**
   * @generated from field: string tenant_id = 5;
   */
  tenantId: string;

  /**
   * @generated from field: engine.ExecutionConfig config = 6;
   */
  config?: ExecutionConfig;
};

/**
 * Describes the message engine.RunWorkflowRequest.
 * Use `create(RunWorkflowRequestSchema)` to create a new message.
 */
export const RunWorkflowRequestSchema: GenMessage<RunWorkflowRequest> = /*@__PURE__*/
  messageDesc(file_engine, 0);

/**
 * @generated from message engine.ExecutionConfig
 */
export type ExecutionConfig = Message<"engine.ExecutionConfig"> & {
  /**
   * @generated from field: int32 timeout_seconds = 1;
   */
  timeoutSeconds: number;

  /**
   * @generated from field: int32 max_retries = 2;
   */
  maxRetries: number;

  /**
   * @generated from field: bool enable_parallel_execution = 3;
   */
  enableParallelExecution: boolean;

  /**
   * @generated from field: map<string, string> environment_variables = 4;
   */
  environmentVariables: { [key: string]: string };

  /**
   * @generated from field: engine.ResourceLimits resource_limits = 5;
   */
  resourceLimits?: ResourceLimits;
};

/**
 * Describes the message engine.ExecutionConfig.
 * Use `create(ExecutionConfigSchema)` to create a new message.
 */
export const ExecutionConfigSchema: GenMessage<ExecutionConfig> = /*@__PURE__*/
  messageDesc(file_engine, 1);

/**
 * @generated from message engine.ResourceLimits
 */
export type ResourceLimits = Message<"engine.ResourceLimits"> & {
  /**
   * @generated from field: int64 max_memory_bytes = 1;
   */
  maxMemoryBytes: bigint;

  /**
   * @generated from field: int32 max_cpu_millicores = 2;
   */
  maxCpuMillicores: number;

  /**
   * @generated from field: int32 max_execution_time_seconds = 3;
   */
  maxExecutionTimeSeconds: number;

  /**
   * @generated from field: int32 max_network_requests = 4;
   */
  maxNetworkRequests: number;
};

/**
 * Describes the message engine.ResourceLimits.
 * Use `create(ResourceLimitsSchema)` to create a new message.
 */
export const ResourceLimitsSchema: GenMessage<ResourceLimits> = /*@__PURE__*/
  messageDesc(file_engine, 2);

/**
 * @generated from message engine.RunWorkflowResponse
 */
export type RunWorkflowResponse = Message<"engine.RunWorkflowResponse"> & {
  /**
   * @generated from field: string execution_id = 1;
   */
  executionId: string;

  /**
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;

  /**
   * @generated from field: repeated string scheduled_steps = 4;
   */
  scheduledSteps: string[];
};

/**
 * Describes the message engine.RunWorkflowResponse.
 * Use `create(RunWorkflowResponseSchema)` to create a new message.
 */
export const RunWorkflowResponseSchema: GenMessage<RunWorkflowResponse> = /*@__PURE__*/
  messageDesc(file_engine, 3);

/**
 * @generated from message engine.StepExecRequest
 */
export type StepExecRequest = Message<"engine.StepExecRequest"> & {
  /**
   * @generated from field: string execution_id = 1;
   */
  executionId: string;

  /**
   * @generated from field: string step_id = 2;
   */
  stepId: string;

  /**
   * @generated from field: string node_id = 3;
   */
  nodeId: string;

  /**
   * @generated from field: string node_type = 4;
   */
  nodeType: string;

  /**
   * @generated from field: map<string, string> parameters = 5;
   */
  parameters: { [key: string]: string };

  /**
   * @generated from field: string input_data = 6;
   */
  inputData: string;

  /**
   * @generated from field: orchestrator.NodePolicy policy = 7;
   */
  policy?: NodePolicy;

  /**
   * @generated from field: string tenant_id = 8;
   */
  tenantId: string;
};

/**
 * Describes the message engine.StepExecRequest.
 * Use `create(StepExecRequestSchema)` to create a new message.
 */
export const StepExecRequestSchema: GenMessage<StepExecRequest> = /*@__PURE__*/
  messageDesc(file_engine, 4);

/**
 * @generated from message engine.StepExecResponse
 */
export type StepExecResponse = Message<"engine.StepExecResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * @generated from field: string assigned_runner = 3;
   */
  assignedRunner: string;
};

/**
 * Describes the message engine.StepExecResponse.
 * Use `create(StepExecResponseSchema)` to create a new message.
 */
export const StepExecResponseSchema: GenMessage<StepExecResponse> = /*@__PURE__*/
  messageDesc(file_engine, 5);

/**
 * @generated from message engine.StepDoneRequest
 */
export type StepDoneRequest = Message<"engine.StepDoneRequest"> & {
  /**
   * @generated from field: string execution_id = 1;
   */
  executionId: string;

  /**
   * @generated from field: string step_id = 2;
   */
  stepId: string;

  /**
   * @generated from field: orchestrator.StepStatus status = 3;
   */
  status: StepStatus;

  /**
   * @generated from field: string output_data = 4;
   */
  outputData: string;

  /**
   * @generated from field: string error_message = 5;
   */
  errorMessage: string;

  /**
   * @generated from field: int32 retry_count = 6;
   */
  retryCount: number;

  /**
   * @generated from field: engine.ExecutionMetrics metrics = 7;
   */
  metrics?: ExecutionMetrics;
};

/**
 * Describes the message engine.StepDoneRequest.
 * Use `create(StepDoneRequestSchema)` to create a new message.
 */
export const StepDoneRequestSchema: GenMessage<StepDoneRequest> = /*@__PURE__*/
  messageDesc(file_engine, 6);

/**
 * @generated from message engine.ExecutionMetrics
 */
export type ExecutionMetrics = Message<"engine.ExecutionMetrics"> & {
  /**
   * @generated from field: int64 execution_time_ms = 1;
   */
  executionTimeMs: bigint;

  /**
   * @generated from field: int64 memory_used_bytes = 2;
   */
  memoryUsedBytes: bigint;

  /**
   * @generated from field: int32 network_requests_count = 3;
   */
  networkRequestsCount: number;

  /**
   * @generated from field: int64 network_bytes_sent = 4;
   */
  networkBytesSent: bigint;

  /**
   * @generated from field: int64 network_bytes_received = 5;
   */
  networkBytesReceived: bigint;
};

/**
 * Describes the message engine.ExecutionMetrics.
 * Use `create(ExecutionMetricsSchema)` to create a new message.
 */
export const ExecutionMetricsSchema: GenMessage<ExecutionMetrics> = /*@__PURE__*/
  messageDesc(file_engine, 7);

/**
 * @generated from message engine.StepDoneResponse
 */
export type StepDoneResponse = Message<"engine.StepDoneResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * @generated from field: repeated string next_steps = 3;
   */
  nextSteps: string[];
};

/**
 * Describes the message engine.StepDoneResponse.
 * Use `create(StepDoneResponseSchema)` to create a new message.
 */
export const StepDoneResponseSchema: GenMessage<StepDoneResponse> = /*@__PURE__*/
  messageDesc(file_engine, 8);

/**
 * @generated from message engine.CancelExecutionRequest
 */
export type CancelExecutionRequest = Message<"engine.CancelExecutionRequest"> & {
  /**
   * @generated from field: string execution_id = 1;
   */
  executionId: string;

  /**
   * @generated from field: string reason = 2;
   */
  reason: string;

  /**
   * @generated from field: string tenant_id = 3;
   */
  tenantId: string;
};

/**
 * Describes the message engine.CancelExecutionRequest.
 * Use `create(CancelExecutionRequestSchema)` to create a new message.
 */
export const CancelExecutionRequestSchema: GenMessage<CancelExecutionRequest> = /*@__PURE__*/
  messageDesc(file_engine, 9);

/**
 * @generated from message engine.CancelExecutionResponse
 */
export type CancelExecutionResponse = Message<"engine.CancelExecutionResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * @generated from field: repeated string cancelled_steps = 3;
   */
  cancelledSteps: string[];
};

/**
 * Describes the message engine.CancelExecutionResponse.
 * Use `create(CancelExecutionResponseSchema)` to create a new message.
 */
export const CancelExecutionResponseSchema: GenMessage<CancelExecutionResponse> = /*@__PURE__*/
  messageDesc(file_engine, 10);

/**
 * @generated from message engine.GetExecutionStatusRequest
 */
export type GetExecutionStatusRequest = Message<"engine.GetExecutionStatusRequest"> & {
  /**
   * @generated from field: string execution_id = 1;
   */
  executionId: string;

  /**
   * @generated from field: string tenant_id = 2;
   */
  tenantId: string;
};

/**
 * Describes the message engine.GetExecutionStatusRequest.
 * Use `create(GetExecutionStatusRequestSchema)` to create a new message.
 */
export const GetExecutionStatusRequestSchema: GenMessage<GetExecutionStatusRequest> = /*@__PURE__*/
  messageDesc(file_engine, 11);

/**
 * @generated from message engine.GetExecutionStatusResponse
 */
export type GetExecutionStatusResponse = Message<"engine.GetExecutionStatusResponse"> & {
  /**
   * @generated from field: orchestrator.ExecutionStatus status = 1;
   */
  status: ExecutionStatus;

  /**
   * @generated from field: repeated orchestrator.StepExecution steps = 2;
   */
  steps: StepExecution[];

  /**
   * @generated from field: engine.ExecutionProgress progress = 3;
   */
  progress?: ExecutionProgress;

  /**
   * @generated from field: bool success = 4;
   */
  success: boolean;

  /**
   * @generated from field: string error_message = 5;
   */
  errorMessage: string;
};

/**
 * Describes the message engine.GetExecutionStatusResponse.
 * Use `create(GetExecutionStatusResponseSchema)` to create a new message.
 */
export const GetExecutionStatusResponseSchema: GenMessage<GetExecutionStatusResponse> = /*@__PURE__*/
  messageDesc(file_engine, 12);

/**
 * @generated from message engine.ExecutionProgress
 */
export type ExecutionProgress = Message<"engine.ExecutionProgress"> & {
  /**
   * @generated from field: int32 total_steps = 1;
   */
  totalSteps: number;

  /**
   * @generated from field: int32 completed_steps = 2;
   */
  completedSteps: number;

  /**
   * @generated from field: int32 failed_steps = 3;
   */
  failedSteps: number;

  /**
   * @generated from field: int32 running_steps = 4;
   */
  runningSteps: number;

  /**
   * @generated from field: int32 pending_steps = 5;
   */
  pendingSteps: number;

  /**
   * @generated from field: double completion_percentage = 6;
   */
  completionPercentage: number;
};

/**
 * Describes the message engine.ExecutionProgress.
 * Use `create(ExecutionProgressSchema)` to create a new message.
 */
export const ExecutionProgressSchema: GenMessage<ExecutionProgress> = /*@__PURE__*/
  messageDesc(file_engine, 13);

/**
 * @generated from message engine.ListActiveExecutionsRequest
 */
export type ListActiveExecutionsRequest = Message<"engine.ListActiveExecutionsRequest"> & {
  /**
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  /**
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message engine.ListActiveExecutionsRequest.
 * Use `create(ListActiveExecutionsRequestSchema)` to create a new message.
 */
export const ListActiveExecutionsRequestSchema: GenMessage<ListActiveExecutionsRequest> = /*@__PURE__*/
  messageDesc(file_engine, 14);

/**
 * @generated from message engine.ListActiveExecutionsResponse
 */
export type ListActiveExecutionsResponse = Message<"engine.ListActiveExecutionsResponse"> & {
  /**
   * @generated from field: repeated engine.ActiveExecution executions = 1;
   */
  executions: ActiveExecution[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: bool success = 3;
   */
  success: boolean;

  /**
   * @generated from field: string error_message = 4;
   */
  errorMessage: string;
};

/**
 * Describes the message engine.ListActiveExecutionsResponse.
 * Use `create(ListActiveExecutionsResponseSchema)` to create a new message.
 */
export const ListActiveExecutionsResponseSchema: GenMessage<ListActiveExecutionsResponse> = /*@__PURE__*/
  messageDesc(file_engine, 15);

/**
 * @generated from message engine.ActiveExecution
 */
export type ActiveExecution = Message<"engine.ActiveExecution"> & {
  /**
   * @generated from field: string execution_id = 1;
   */
  executionId: string;

  /**
   * @generated from field: string workflow_id = 2;
   */
  workflowId: string;

  /**
   * @generated from field: orchestrator.ExecutionStatus status = 3;
   */
  status: ExecutionStatus;

  /**
   * @generated from field: string started_at = 4;
   */
  startedAt: string;

  /**
   * @generated from field: engine.ExecutionProgress progress = 5;
   */
  progress?: ExecutionProgress;

  /**
   * @generated from field: engine.ResourceUsage resource_usage = 6;
   */
  resourceUsage?: ResourceUsage;
};

/**
 * Describes the message engine.ActiveExecution.
 * Use `create(ActiveExecutionSchema)` to create a new message.
 */
export const ActiveExecutionSchema: GenMessage<ActiveExecution> = /*@__PURE__*/
  messageDesc(file_engine, 16);

/**
 * @generated from message engine.GetResourceUsageRequest
 */
export type GetResourceUsageRequest = Message<"engine.GetResourceUsageRequest"> & {
  /**
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  /**
   * optional, if empty returns tenant-wide usage
   *
   * @generated from field: string execution_id = 2;
   */
  executionId: string;
};

/**
 * Describes the message engine.GetResourceUsageRequest.
 * Use `create(GetResourceUsageRequestSchema)` to create a new message.
 */
export const GetResourceUsageRequestSchema: GenMessage<GetResourceUsageRequest> = /*@__PURE__*/
  messageDesc(file_engine, 17);

/**
 * @generated from message engine.GetResourceUsageResponse
 */
export type GetResourceUsageResponse = Message<"engine.GetResourceUsageResponse"> & {
  /**
   * @generated from field: engine.ResourceUsage usage = 1;
   */
  usage?: ResourceUsage;

  /**
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message engine.GetResourceUsageResponse.
 * Use `create(GetResourceUsageResponseSchema)` to create a new message.
 */
export const GetResourceUsageResponseSchema: GenMessage<GetResourceUsageResponse> = /*@__PURE__*/
  messageDesc(file_engine, 18);

/**
 * @generated from message engine.ResourceUsage
 */
export type ResourceUsage = Message<"engine.ResourceUsage"> & {
  /**
   * @generated from field: int64 memory_used_bytes = 1;
   */
  memoryUsedBytes: bigint;

  /**
   * @generated from field: int32 cpu_used_millicores = 2;
   */
  cpuUsedMillicores: number;

  /**
   * @generated from field: int32 active_executions = 3;
   */
  activeExecutions: number;

  /**
   * @generated from field: int32 queued_executions = 4;
   */
  queuedExecutions: number;

  /**
   * @generated from field: int64 network_bytes_per_minute = 5;
   */
  networkBytesPerMinute: bigint;

  /**
   * @generated from field: int32 requests_per_minute = 6;
   */
  requestsPerMinute: number;
};

/**
 * Describes the message engine.ResourceUsage.
 * Use `create(ResourceUsageSchema)` to create a new message.
 */
export const ResourceUsageSchema: GenMessage<ResourceUsage> = /*@__PURE__*/
  messageDesc(file_engine, 19);

/**
 * @generated from message engine.UpdateRateLimitsRequest
 */
export type UpdateRateLimitsRequest = Message<"engine.UpdateRateLimitsRequest"> & {
  /**
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  /**
   * @generated from field: engine.RateLimits limits = 2;
   */
  limits?: RateLimits;
};

/**
 * Describes the message engine.UpdateRateLimitsRequest.
 * Use `create(UpdateRateLimitsRequestSchema)` to create a new message.
 */
export const UpdateRateLimitsRequestSchema: GenMessage<UpdateRateLimitsRequest> = /*@__PURE__*/
  messageDesc(file_engine, 20);

/**
 * @generated from message engine.RateLimits
 */
export type RateLimits = Message<"engine.RateLimits"> & {
  /**
   * @generated from field: int32 max_executions_per_minute = 1;
   */
  maxExecutionsPerMinute: number;

  /**
   * @generated from field: int32 max_concurrent_executions = 2;
   */
  maxConcurrentExecutions: number;

  /**
   * @generated from field: int32 max_requests_per_minute = 3;
   */
  maxRequestsPerMinute: number;

  /**
   * @generated from field: int64 max_bandwidth_bytes_per_minute = 4;
   */
  maxBandwidthBytesPerMinute: bigint;
};

/**
 * Describes the message engine.RateLimits.
 * Use `create(RateLimitsSchema)` to create a new message.
 */
export const RateLimitsSchema: GenMessage<RateLimits> = /*@__PURE__*/
  messageDesc(file_engine, 21);

/**
 * @generated from message engine.UpdateRateLimitsResponse
 */
export type UpdateRateLimitsResponse = Message<"engine.UpdateRateLimitsResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;
};

/**
 * Describes the message engine.UpdateRateLimitsResponse.
 * Use `create(UpdateRateLimitsResponseSchema)` to create a new message.
 */
export const UpdateRateLimitsResponseSchema: GenMessage<UpdateRateLimitsResponse> = /*@__PURE__*/
  messageDesc(file_engine, 22);

/**
 * @generated from message engine.HealthRequest
 */
export type HealthRequest = Message<"engine.HealthRequest"> & {
};

/**
 * Describes the message engine.HealthRequest.
 * Use `create(HealthRequestSchema)` to create a new message.
 */
export const HealthRequestSchema: GenMessage<HealthRequest> = /*@__PURE__*/
  messageDesc(file_engine, 23);

/**
 * @generated from message engine.HealthResponse
 */
export type HealthResponse = Message<"engine.HealthResponse"> & {
  /**
   * @generated from field: string status = 1;
   */
  status: string;

  /**
   * @generated from field: map<string, string> details = 2;
   */
  details: { [key: string]: string };
};

/**
 * Describes the message engine.HealthResponse.
 * Use `create(HealthResponseSchema)` to create a new message.
 */
export const HealthResponseSchema: GenMessage<HealthResponse> = /*@__PURE__*/
  messageDesc(file_engine, 24);

/**
 * Engine service for workflow execution management
 *
 * @generated from service engine.EngineService
 */
export const EngineService: GenService<{
  /**
   * Execution Management
   *
   * @generated from rpc engine.EngineService.RunWorkflow
   */
  runWorkflow: {
    methodKind: "unary";
    input: typeof RunWorkflowRequestSchema;
    output: typeof RunWorkflowResponseSchema;
  },
  /**
   * @generated from rpc engine.EngineService.StepExec
   */
  stepExec: {
    methodKind: "unary";
    input: typeof StepExecRequestSchema;
    output: typeof StepExecResponseSchema;
  },
  /**
   * @generated from rpc engine.EngineService.StepDone
   */
  stepDone: {
    methodKind: "unary";
    input: typeof StepDoneRequestSchema;
    output: typeof StepDoneResponseSchema;
  },
  /**
   * @generated from rpc engine.EngineService.CancelExecution
   */
  cancelExecution: {
    methodKind: "unary";
    input: typeof CancelExecutionRequestSchema;
    output: typeof CancelExecutionResponseSchema;
  },
  /**
   * Status and Monitoring
   *
   * @generated from rpc engine.EngineService.GetExecutionStatus
   */
  getExecutionStatus: {
    methodKind: "unary";
    input: typeof GetExecutionStatusRequestSchema;
    output: typeof GetExecutionStatusResponseSchema;
  },
  /**
   * @generated from rpc engine.EngineService.ListActiveExecutions
   */
  listActiveExecutions: {
    methodKind: "unary";
    input: typeof ListActiveExecutionsRequestSchema;
    output: typeof ListActiveExecutionsResponseSchema;
  },
  /**
   * Resource Management
   *
   * @generated from rpc engine.EngineService.GetResourceUsage
   */
  getResourceUsage: {
    methodKind: "unary";
    input: typeof GetResourceUsageRequestSchema;
    output: typeof GetResourceUsageResponseSchema;
  },
  /**
   * @generated from rpc engine.EngineService.UpdateRateLimits
   */
  updateRateLimits: {
    methodKind: "unary";
    input: typeof UpdateRateLimitsRequestSchema;
    output: typeof UpdateRateLimitsResponseSchema;
  },
  /**
   * Health Check
   *
   * @generated from rpc engine.EngineService.Health
   */
  health: {
    methodKind: "unary";
    input: typeof HealthRequestSchema;
    output: typeof HealthResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_engine, 0);

