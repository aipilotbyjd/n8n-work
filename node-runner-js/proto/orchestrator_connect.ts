// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=.js"
// @generated from file orchestrator.proto (package orchestrator, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AuthenticateRequest, AuthenticateResponse, CreateWorkflowRequest, CreateWorkflowResponse, DeleteWorkflowRequest, DeleteWorkflowResponse, GetExecutionRequest, GetExecutionResponse, GetTenantQuotasRequest, GetTenantQuotasResponse, GetWorkflowRequest, GetWorkflowResponse, HealthRequest, HealthResponse, ListExecutionsRequest, ListExecutionsResponse, ListWorkflowsRequest, ListWorkflowsResponse, RegisterWebhookRequest, RegisterWebhookResponse, StartExecutionRequest, StartExecutionResponse, StopExecutionRequest, StopExecutionResponse, UnregisterWebhookRequest, UnregisterWebhookResponse, UpdateTenantQuotasRequest, UpdateTenantQuotasResponse, UpdateWorkflowRequest, UpdateWorkflowResponse, ValidateTokenRequest, ValidateTokenResponse } from "./orchestrator_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Orchestrator service for workflow management and coordination
 *
 * @generated from service orchestrator.OrchestratorService
 */
export const OrchestratorService = {
  typeName: "orchestrator.OrchestratorService",
  methods: {
    /**
     * Workflow Management
     *
     * @generated from rpc orchestrator.OrchestratorService.CreateWorkflow
     */
    createWorkflow: {
      name: "CreateWorkflow",
      I: CreateWorkflowRequest,
      O: CreateWorkflowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc orchestrator.OrchestratorService.GetWorkflow
     */
    getWorkflow: {
      name: "GetWorkflow",
      I: GetWorkflowRequest,
      O: GetWorkflowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc orchestrator.OrchestratorService.UpdateWorkflow
     */
    updateWorkflow: {
      name: "UpdateWorkflow",
      I: UpdateWorkflowRequest,
      O: UpdateWorkflowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc orchestrator.OrchestratorService.DeleteWorkflow
     */
    deleteWorkflow: {
      name: "DeleteWorkflow",
      I: DeleteWorkflowRequest,
      O: DeleteWorkflowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc orchestrator.OrchestratorService.ListWorkflows
     */
    listWorkflows: {
      name: "ListWorkflows",
      I: ListWorkflowsRequest,
      O: ListWorkflowsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Execution Management
     *
     * @generated from rpc orchestrator.OrchestratorService.StartExecution
     */
    startExecution: {
      name: "StartExecution",
      I: StartExecutionRequest,
      O: StartExecutionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc orchestrator.OrchestratorService.GetExecution
     */
    getExecution: {
      name: "GetExecution",
      I: GetExecutionRequest,
      O: GetExecutionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc orchestrator.OrchestratorService.StopExecution
     */
    stopExecution: {
      name: "StopExecution",
      I: StopExecutionRequest,
      O: StopExecutionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc orchestrator.OrchestratorService.ListExecutions
     */
    listExecutions: {
      name: "ListExecutions",
      I: ListExecutionsRequest,
      O: ListExecutionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Authentication & Authorization
     *
     * @generated from rpc orchestrator.OrchestratorService.Authenticate
     */
    authenticate: {
      name: "Authenticate",
      I: AuthenticateRequest,
      O: AuthenticateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc orchestrator.OrchestratorService.ValidateToken
     */
    validateToken: {
      name: "ValidateToken",
      I: ValidateTokenRequest,
      O: ValidateTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Tenant & Resource Management
     *
     * @generated from rpc orchestrator.OrchestratorService.GetTenantQuotas
     */
    getTenantQuotas: {
      name: "GetTenantQuotas",
      I: GetTenantQuotasRequest,
      O: GetTenantQuotasResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc orchestrator.OrchestratorService.UpdateTenantQuotas
     */
    updateTenantQuotas: {
      name: "UpdateTenantQuotas",
      I: UpdateTenantQuotasRequest,
      O: UpdateTenantQuotasResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Webhook Management
     *
     * @generated from rpc orchestrator.OrchestratorService.RegisterWebhook
     */
    registerWebhook: {
      name: "RegisterWebhook",
      I: RegisterWebhookRequest,
      O: RegisterWebhookResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc orchestrator.OrchestratorService.UnregisterWebhook
     */
    unregisterWebhook: {
      name: "UnregisterWebhook",
      I: UnregisterWebhookRequest,
      O: UnregisterWebhookResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Health Check
     *
     * @generated from rpc orchestrator.OrchestratorService.Health
     */
    health: {
      name: "Health",
      I: HealthRequest,
      O: HealthResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

