// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=.js"
// @generated from file health.proto (package n8nwork.health.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { HealthCheckRequest, HealthCheckResponse, LivenessCheckRequest, LivenessCheckResponse, ReadinessCheckRequest, ReadinessCheckResponse } from "./health_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Health check service for all components
 *
 * @generated from service n8nwork.health.v1.HealthService
 */
export const HealthService = {
  typeName: "n8nwork.health.v1.HealthService",
  methods: {
    /**
     * Standard health check
     *
     * @generated from rpc n8nwork.health.v1.HealthService.Check
     */
    check: {
      name: "Check",
      I: HealthCheckRequest,
      O: HealthCheckResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Streaming health check
     *
     * @generated from rpc n8nwork.health.v1.HealthService.Watch
     */
    watch: {
      name: "Watch",
      I: HealthCheckRequest,
      O: HealthCheckResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Readiness check (can serve traffic)
     *
     * @generated from rpc n8nwork.health.v1.HealthService.Ready
     */
    ready: {
      name: "Ready",
      I: ReadinessCheckRequest,
      O: ReadinessCheckResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Liveness check (service is alive)
     *
     * @generated from rpc n8nwork.health.v1.HealthService.Live
     */
    live: {
      name: "Live",
      I: LivenessCheckRequest,
      O: LivenessCheckResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

