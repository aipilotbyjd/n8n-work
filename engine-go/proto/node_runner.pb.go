// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: node_runner.proto

package node_runner

import (
	_ "./proto/engine"
	orchestrator "./proto/orchestrator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IsolationLevel int32

const (
	IsolationLevel_ISOLATION_NONE    IsolationLevel = 0
	IsolationLevel_ISOLATION_VM2     IsolationLevel = 1
	IsolationLevel_ISOLATION_PROCESS IsolationLevel = 2
	IsolationLevel_ISOLATION_MICROVM IsolationLevel = 3
	IsolationLevel_ISOLATION_WASM    IsolationLevel = 4
)

// Enum value maps for IsolationLevel.
var (
	IsolationLevel_name = map[int32]string{
		0: "ISOLATION_NONE",
		1: "ISOLATION_VM2",
		2: "ISOLATION_PROCESS",
		3: "ISOLATION_MICROVM",
		4: "ISOLATION_WASM",
	}
	IsolationLevel_value = map[string]int32{
		"ISOLATION_NONE":    0,
		"ISOLATION_VM2":     1,
		"ISOLATION_PROCESS": 2,
		"ISOLATION_MICROVM": 3,
		"ISOLATION_WASM":    4,
	}
)

func (x IsolationLevel) Enum() *IsolationLevel {
	p := new(IsolationLevel)
	*p = x
	return p
}

func (x IsolationLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IsolationLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_node_runner_proto_enumTypes[0].Descriptor()
}

func (IsolationLevel) Type() protoreflect.EnumType {
	return &file_node_runner_proto_enumTypes[0]
}

func (x IsolationLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IsolationLevel.Descriptor instead.
func (IsolationLevel) EnumDescriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{0}
}

type SecurityLevel int32

const (
	SecurityLevel_SECURITY_UNKNOWN     SecurityLevel = 0
	SecurityLevel_SECURITY_SAFE        SecurityLevel = 1
	SecurityLevel_SECURITY_LOW_RISK    SecurityLevel = 2
	SecurityLevel_SECURITY_MEDIUM_RISK SecurityLevel = 3
	SecurityLevel_SECURITY_HIGH_RISK   SecurityLevel = 4
	SecurityLevel_SECURITY_DANGEROUS   SecurityLevel = 5
)

// Enum value maps for SecurityLevel.
var (
	SecurityLevel_name = map[int32]string{
		0: "SECURITY_UNKNOWN",
		1: "SECURITY_SAFE",
		2: "SECURITY_LOW_RISK",
		3: "SECURITY_MEDIUM_RISK",
		4: "SECURITY_HIGH_RISK",
		5: "SECURITY_DANGEROUS",
	}
	SecurityLevel_value = map[string]int32{
		"SECURITY_UNKNOWN":     0,
		"SECURITY_SAFE":        1,
		"SECURITY_LOW_RISK":    2,
		"SECURITY_MEDIUM_RISK": 3,
		"SECURITY_HIGH_RISK":   4,
		"SECURITY_DANGEROUS":   5,
	}
)

func (x SecurityLevel) Enum() *SecurityLevel {
	p := new(SecurityLevel)
	*p = x
	return p
}

func (x SecurityLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_node_runner_proto_enumTypes[1].Descriptor()
}

func (SecurityLevel) Type() protoreflect.EnumType {
	return &file_node_runner_proto_enumTypes[1]
}

func (x SecurityLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityLevel.Descriptor instead.
func (SecurityLevel) EnumDescriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{1}
}

type RunnerState int32

const (
	RunnerState_RUNNER_STATE_UNKNOWN      RunnerState = 0
	RunnerState_RUNNER_STATE_INITIALIZING RunnerState = 1
	RunnerState_RUNNER_STATE_READY        RunnerState = 2
	RunnerState_RUNNER_STATE_BUSY         RunnerState = 3
	RunnerState_RUNNER_STATE_DRAINING     RunnerState = 4
	RunnerState_RUNNER_STATE_ERROR        RunnerState = 5
)

// Enum value maps for RunnerState.
var (
	RunnerState_name = map[int32]string{
		0: "RUNNER_STATE_UNKNOWN",
		1: "RUNNER_STATE_INITIALIZING",
		2: "RUNNER_STATE_READY",
		3: "RUNNER_STATE_BUSY",
		4: "RUNNER_STATE_DRAINING",
		5: "RUNNER_STATE_ERROR",
	}
	RunnerState_value = map[string]int32{
		"RUNNER_STATE_UNKNOWN":      0,
		"RUNNER_STATE_INITIALIZING": 1,
		"RUNNER_STATE_READY":        2,
		"RUNNER_STATE_BUSY":         3,
		"RUNNER_STATE_DRAINING":     4,
		"RUNNER_STATE_ERROR":        5,
	}
)

func (x RunnerState) Enum() *RunnerState {
	p := new(RunnerState)
	*p = x
	return p
}

func (x RunnerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunnerState) Descriptor() protoreflect.EnumDescriptor {
	return file_node_runner_proto_enumTypes[2].Descriptor()
}

func (RunnerState) Type() protoreflect.EnumType {
	return &file_node_runner_proto_enumTypes[2]
}

func (x RunnerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunnerState.Descriptor instead.
func (RunnerState) EnumDescriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{2}
}

type ExecuteNodeRequest struct {
	state           protoimpl.MessageState   `protogen:"open.v1"`
	ExecutionId     string                   `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	StepId          string                   `protobuf:"bytes,2,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	NodeType        string                   `protobuf:"bytes,3,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`
	Parameters      map[string]string        `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	InputData       string                   `protobuf:"bytes,5,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	Policy          *orchestrator.NodePolicy `protobuf:"bytes,6,opt,name=policy,proto3" json:"policy,omitempty"`
	SecurityContext *SecurityContext         `protobuf:"bytes,7,opt,name=security_context,json=securityContext,proto3" json:"security_context,omitempty"`
	RuntimeConfig   *RuntimeConfig           `protobuf:"bytes,8,opt,name=runtime_config,json=runtimeConfig,proto3" json:"runtime_config,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExecuteNodeRequest) Reset() {
	*x = ExecuteNodeRequest{}
	mi := &file_node_runner_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteNodeRequest) ProtoMessage() {}

func (x *ExecuteNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteNodeRequest.ProtoReflect.Descriptor instead.
func (*ExecuteNodeRequest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{0}
}

func (x *ExecuteNodeRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *ExecuteNodeRequest) GetStepId() string {
	if x != nil {
		return x.StepId
	}
	return ""
}

func (x *ExecuteNodeRequest) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

func (x *ExecuteNodeRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ExecuteNodeRequest) GetInputData() string {
	if x != nil {
		return x.InputData
	}
	return ""
}

func (x *ExecuteNodeRequest) GetPolicy() *orchestrator.NodePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *ExecuteNodeRequest) GetSecurityContext() *SecurityContext {
	if x != nil {
		return x.SecurityContext
	}
	return nil
}

func (x *ExecuteNodeRequest) GetRuntimeConfig() *RuntimeConfig {
	if x != nil {
		return x.RuntimeConfig
	}
	return nil
}

type SecurityContext struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TenantId             string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	AllowedDomains       []string               `protobuf:"bytes,2,rep,name=allowed_domains,json=allowedDomains,proto3" json:"allowed_domains,omitempty"`
	EnvironmentVariables map[string]string      `protobuf:"bytes,3,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NetworkPolicy        *NetworkPolicy         `protobuf:"bytes,4,opt,name=network_policy,json=networkPolicy,proto3" json:"network_policy,omitempty"`
	IsolationLevel       IsolationLevel         `protobuf:"varint,5,opt,name=isolation_level,json=isolationLevel,proto3,enum=node_runner.IsolationLevel" json:"isolation_level,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SecurityContext) Reset() {
	*x = SecurityContext{}
	mi := &file_node_runner_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityContext) ProtoMessage() {}

func (x *SecurityContext) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityContext.ProtoReflect.Descriptor instead.
func (*SecurityContext) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{1}
}

func (x *SecurityContext) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *SecurityContext) GetAllowedDomains() []string {
	if x != nil {
		return x.AllowedDomains
	}
	return nil
}

func (x *SecurityContext) GetEnvironmentVariables() map[string]string {
	if x != nil {
		return x.EnvironmentVariables
	}
	return nil
}

func (x *SecurityContext) GetNetworkPolicy() *NetworkPolicy {
	if x != nil {
		return x.NetworkPolicy
	}
	return nil
}

func (x *SecurityContext) GetIsolationLevel() IsolationLevel {
	if x != nil {
		return x.IsolationLevel
	}
	return IsolationLevel_ISOLATION_NONE
}

type NetworkPolicy struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	AllowedHosts         []string               `protobuf:"bytes,1,rep,name=allowed_hosts,json=allowedHosts,proto3" json:"allowed_hosts,omitempty"`
	AllowedPorts         []int32                `protobuf:"varint,2,rep,packed,name=allowed_ports,json=allowedPorts,proto3" json:"allowed_ports,omitempty"`
	AllowPrivateNetworks bool                   `protobuf:"varint,3,opt,name=allow_private_networks,json=allowPrivateNetworks,proto3" json:"allow_private_networks,omitempty"`
	AllowLocalhost       bool                   `protobuf:"varint,4,opt,name=allow_localhost,json=allowLocalhost,proto3" json:"allow_localhost,omitempty"`
	MaxRequestsPerMinute int32                  `protobuf:"varint,5,opt,name=max_requests_per_minute,json=maxRequestsPerMinute,proto3" json:"max_requests_per_minute,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NetworkPolicy) Reset() {
	*x = NetworkPolicy{}
	mi := &file_node_runner_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicy) ProtoMessage() {}

func (x *NetworkPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPolicy.ProtoReflect.Descriptor instead.
func (*NetworkPolicy) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{2}
}

func (x *NetworkPolicy) GetAllowedHosts() []string {
	if x != nil {
		return x.AllowedHosts
	}
	return nil
}

func (x *NetworkPolicy) GetAllowedPorts() []int32 {
	if x != nil {
		return x.AllowedPorts
	}
	return nil
}

func (x *NetworkPolicy) GetAllowPrivateNetworks() bool {
	if x != nil {
		return x.AllowPrivateNetworks
	}
	return false
}

func (x *NetworkPolicy) GetAllowLocalhost() bool {
	if x != nil {
		return x.AllowLocalhost
	}
	return false
}

func (x *NetworkPolicy) GetMaxRequestsPerMinute() int32 {
	if x != nil {
		return x.MaxRequestsPerMinute
	}
	return 0
}

type RuntimeConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TimeoutSeconds   int32                  `protobuf:"varint,1,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	MaxMemoryBytes   int64                  `protobuf:"varint,2,opt,name=max_memory_bytes,json=maxMemoryBytes,proto3" json:"max_memory_bytes,omitempty"`
	MaxCpuMillicores int32                  `protobuf:"varint,3,opt,name=max_cpu_millicores,json=maxCpuMillicores,proto3" json:"max_cpu_millicores,omitempty"`
	EnableDebugging  bool                   `protobuf:"varint,4,opt,name=enable_debugging,json=enableDebugging,proto3" json:"enable_debugging,omitempty"`
	RuntimeOptions   map[string]string      `protobuf:"bytes,5,rep,name=runtime_options,json=runtimeOptions,proto3" json:"runtime_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RuntimeConfig) Reset() {
	*x = RuntimeConfig{}
	mi := &file_node_runner_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeConfig) ProtoMessage() {}

func (x *RuntimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeConfig.ProtoReflect.Descriptor instead.
func (*RuntimeConfig) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{3}
}

func (x *RuntimeConfig) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *RuntimeConfig) GetMaxMemoryBytes() int64 {
	if x != nil {
		return x.MaxMemoryBytes
	}
	return 0
}

func (x *RuntimeConfig) GetMaxCpuMillicores() int32 {
	if x != nil {
		return x.MaxCpuMillicores
	}
	return 0
}

func (x *RuntimeConfig) GetEnableDebugging() bool {
	if x != nil {
		return x.EnableDebugging
	}
	return false
}

func (x *RuntimeConfig) GetRuntimeOptions() map[string]string {
	if x != nil {
		return x.RuntimeOptions
	}
	return nil
}

type ExecuteNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	OutputData    string                 `protobuf:"bytes,2,opt,name=output_data,json=outputData,proto3" json:"output_data,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Metrics       *NodeExecutionMetrics  `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Logs          []string               `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteNodeResponse) Reset() {
	*x = ExecuteNodeResponse{}
	mi := &file_node_runner_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteNodeResponse) ProtoMessage() {}

func (x *ExecuteNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteNodeResponse.ProtoReflect.Descriptor instead.
func (*ExecuteNodeResponse) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{4}
}

func (x *ExecuteNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ExecuteNodeResponse) GetOutputData() string {
	if x != nil {
		return x.OutputData
	}
	return ""
}

func (x *ExecuteNodeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ExecuteNodeResponse) GetMetrics() *NodeExecutionMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *ExecuteNodeResponse) GetLogs() []string {
	if x != nil {
		return x.Logs
	}
	return nil
}

type NodeExecutionMetrics struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ExecutionTimeMs      int64                  `protobuf:"varint,1,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	MemoryUsedBytes      int64                  `protobuf:"varint,2,opt,name=memory_used_bytes,json=memoryUsedBytes,proto3" json:"memory_used_bytes,omitempty"`
	CpuTimeMs            int32                  `protobuf:"varint,3,opt,name=cpu_time_ms,json=cpuTimeMs,proto3" json:"cpu_time_ms,omitempty"`
	NetworkRequests      int32                  `protobuf:"varint,4,opt,name=network_requests,json=networkRequests,proto3" json:"network_requests,omitempty"`
	NetworkBytesSent     int64                  `protobuf:"varint,5,opt,name=network_bytes_sent,json=networkBytesSent,proto3" json:"network_bytes_sent,omitempty"`
	NetworkBytesReceived int64                  `protobuf:"varint,6,opt,name=network_bytes_received,json=networkBytesReceived,proto3" json:"network_bytes_received,omitempty"`
	FileOperations       int32                  `protobuf:"varint,7,opt,name=file_operations,json=fileOperations,proto3" json:"file_operations,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NodeExecutionMetrics) Reset() {
	*x = NodeExecutionMetrics{}
	mi := &file_node_runner_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeExecutionMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeExecutionMetrics) ProtoMessage() {}

func (x *NodeExecutionMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeExecutionMetrics.ProtoReflect.Descriptor instead.
func (*NodeExecutionMetrics) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{5}
}

func (x *NodeExecutionMetrics) GetExecutionTimeMs() int64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

func (x *NodeExecutionMetrics) GetMemoryUsedBytes() int64 {
	if x != nil {
		return x.MemoryUsedBytes
	}
	return 0
}

func (x *NodeExecutionMetrics) GetCpuTimeMs() int32 {
	if x != nil {
		return x.CpuTimeMs
	}
	return 0
}

func (x *NodeExecutionMetrics) GetNetworkRequests() int32 {
	if x != nil {
		return x.NetworkRequests
	}
	return 0
}

func (x *NodeExecutionMetrics) GetNetworkBytesSent() int64 {
	if x != nil {
		return x.NetworkBytesSent
	}
	return 0
}

func (x *NodeExecutionMetrics) GetNetworkBytesReceived() int64 {
	if x != nil {
		return x.NetworkBytesReceived
	}
	return 0
}

func (x *NodeExecutionMetrics) GetFileOperations() int32 {
	if x != nil {
		return x.FileOperations
	}
	return 0
}

type CancelNodeExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	StepId        string                 `protobuf:"bytes,2,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelNodeExecutionRequest) Reset() {
	*x = CancelNodeExecutionRequest{}
	mi := &file_node_runner_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelNodeExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelNodeExecutionRequest) ProtoMessage() {}

func (x *CancelNodeExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelNodeExecutionRequest.ProtoReflect.Descriptor instead.
func (*CancelNodeExecutionRequest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{6}
}

func (x *CancelNodeExecutionRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *CancelNodeExecutionRequest) GetStepId() string {
	if x != nil {
		return x.StepId
	}
	return ""
}

func (x *CancelNodeExecutionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CancelNodeExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelNodeExecutionResponse) Reset() {
	*x = CancelNodeExecutionResponse{}
	mi := &file_node_runner_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelNodeExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelNodeExecutionResponse) ProtoMessage() {}

func (x *CancelNodeExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelNodeExecutionResponse.ProtoReflect.Descriptor instead.
func (*CancelNodeExecutionResponse) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{7}
}

func (x *CancelNodeExecutionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelNodeExecutionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RegisterNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *NodeDefinition        `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	mi := &file_node_runner_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterNodeRequest) GetNode() *NodeDefinition {
	if x != nil {
		return x.Node
	}
	return nil
}

type NodeDefinition struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Name               string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Version            string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Description        string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	InputSchema        *NodeSchema            `protobuf:"bytes,5,opt,name=input_schema,json=inputSchema,proto3" json:"input_schema,omitempty"`
	OutputSchema       *NodeSchema            `protobuf:"bytes,6,opt,name=output_schema,json=outputSchema,proto3" json:"output_schema,omitempty"`
	Capabilities       *NodeCapabilities      `protobuf:"bytes,7,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	ImplementationUrl  string                 `protobuf:"bytes,8,opt,name=implementation_url,json=implementationUrl,proto3" json:"implementation_url,omitempty"`    // for external nodes
	ImplementationCode []byte                 `protobuf:"bytes,9,opt,name=implementation_code,json=implementationCode,proto3" json:"implementation_code,omitempty"` // for inline nodes
	Signature          string                 `protobuf:"bytes,10,opt,name=signature,proto3" json:"signature,omitempty"`                                            // cryptographic signature
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NodeDefinition) Reset() {
	*x = NodeDefinition{}
	mi := &file_node_runner_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDefinition) ProtoMessage() {}

func (x *NodeDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDefinition.ProtoReflect.Descriptor instead.
func (*NodeDefinition) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{9}
}

func (x *NodeDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeDefinition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NodeDefinition) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NodeDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NodeDefinition) GetInputSchema() *NodeSchema {
	if x != nil {
		return x.InputSchema
	}
	return nil
}

func (x *NodeDefinition) GetOutputSchema() *NodeSchema {
	if x != nil {
		return x.OutputSchema
	}
	return nil
}

func (x *NodeDefinition) GetCapabilities() *NodeCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *NodeDefinition) GetImplementationUrl() string {
	if x != nil {
		return x.ImplementationUrl
	}
	return ""
}

func (x *NodeDefinition) GetImplementationCode() []byte {
	if x != nil {
		return x.ImplementationCode
	}
	return nil
}

func (x *NodeDefinition) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type NodeSchema struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	JsonSchema        string                 `protobuf:"bytes,1,opt,name=json_schema,json=jsonSchema,proto3" json:"json_schema,omitempty"`
	RequiredFields    []string               `protobuf:"bytes,2,rep,name=required_fields,json=requiredFields,proto3" json:"required_fields,omitempty"`
	FieldDescriptions map[string]string      `protobuf:"bytes,3,rep,name=field_descriptions,json=fieldDescriptions,proto3" json:"field_descriptions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NodeSchema) Reset() {
	*x = NodeSchema{}
	mi := &file_node_runner_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSchema) ProtoMessage() {}

func (x *NodeSchema) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSchema.ProtoReflect.Descriptor instead.
func (*NodeSchema) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{10}
}

func (x *NodeSchema) GetJsonSchema() string {
	if x != nil {
		return x.JsonSchema
	}
	return ""
}

func (x *NodeSchema) GetRequiredFields() []string {
	if x != nil {
		return x.RequiredFields
	}
	return nil
}

func (x *NodeSchema) GetFieldDescriptions() map[string]string {
	if x != nil {
		return x.FieldDescriptions
	}
	return nil
}

type NodeCapabilities struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	SupportsAsync        bool                   `protobuf:"varint,1,opt,name=supports_async,json=supportsAsync,proto3" json:"supports_async,omitempty"`
	SupportsCancellation bool                   `protobuf:"varint,2,opt,name=supports_cancellation,json=supportsCancellation,proto3" json:"supports_cancellation,omitempty"`
	RequiresCredentials  bool                   `protobuf:"varint,3,opt,name=requires_credentials,json=requiresCredentials,proto3" json:"requires_credentials,omitempty"`
	SupportsBatch        bool                   `protobuf:"varint,4,opt,name=supports_batch,json=supportsBatch,proto3" json:"supports_batch,omitempty"`
	SupportedAuthMethods []string               `protobuf:"bytes,5,rep,name=supported_auth_methods,json=supportedAuthMethods,proto3" json:"supported_auth_methods,omitempty"`
	ResourceRequirements *ResourceRequirements  `protobuf:"bytes,6,opt,name=resource_requirements,json=resourceRequirements,proto3" json:"resource_requirements,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NodeCapabilities) Reset() {
	*x = NodeCapabilities{}
	mi := &file_node_runner_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeCapabilities) ProtoMessage() {}

func (x *NodeCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeCapabilities.ProtoReflect.Descriptor instead.
func (*NodeCapabilities) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{11}
}

func (x *NodeCapabilities) GetSupportsAsync() bool {
	if x != nil {
		return x.SupportsAsync
	}
	return false
}

func (x *NodeCapabilities) GetSupportsCancellation() bool {
	if x != nil {
		return x.SupportsCancellation
	}
	return false
}

func (x *NodeCapabilities) GetRequiresCredentials() bool {
	if x != nil {
		return x.RequiresCredentials
	}
	return false
}

func (x *NodeCapabilities) GetSupportsBatch() bool {
	if x != nil {
		return x.SupportsBatch
	}
	return false
}

func (x *NodeCapabilities) GetSupportedAuthMethods() []string {
	if x != nil {
		return x.SupportedAuthMethods
	}
	return nil
}

func (x *NodeCapabilities) GetResourceRequirements() *ResourceRequirements {
	if x != nil {
		return x.ResourceRequirements
	}
	return nil
}

type ResourceRequirements struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	MinMemoryBytes        int64                  `protobuf:"varint,1,opt,name=min_memory_bytes,json=minMemoryBytes,proto3" json:"min_memory_bytes,omitempty"`
	MaxMemoryBytes        int64                  `protobuf:"varint,2,opt,name=max_memory_bytes,json=maxMemoryBytes,proto3" json:"max_memory_bytes,omitempty"`
	MinCpuMillicores      int32                  `protobuf:"varint,3,opt,name=min_cpu_millicores,json=minCpuMillicores,proto3" json:"min_cpu_millicores,omitempty"`
	MaxCpuMillicores      int32                  `protobuf:"varint,4,opt,name=max_cpu_millicores,json=maxCpuMillicores,proto3" json:"max_cpu_millicores,omitempty"`
	RequiresNetworkAccess bool                   `protobuf:"varint,5,opt,name=requires_network_access,json=requiresNetworkAccess,proto3" json:"requires_network_access,omitempty"`
	RequiresFileSystem    bool                   `protobuf:"varint,6,opt,name=requires_file_system,json=requiresFileSystem,proto3" json:"requires_file_system,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ResourceRequirements) Reset() {
	*x = ResourceRequirements{}
	mi := &file_node_runner_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRequirements) ProtoMessage() {}

func (x *ResourceRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRequirements.ProtoReflect.Descriptor instead.
func (*ResourceRequirements) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{12}
}

func (x *ResourceRequirements) GetMinMemoryBytes() int64 {
	if x != nil {
		return x.MinMemoryBytes
	}
	return 0
}

func (x *ResourceRequirements) GetMaxMemoryBytes() int64 {
	if x != nil {
		return x.MaxMemoryBytes
	}
	return 0
}

func (x *ResourceRequirements) GetMinCpuMillicores() int32 {
	if x != nil {
		return x.MinCpuMillicores
	}
	return 0
}

func (x *ResourceRequirements) GetMaxCpuMillicores() int32 {
	if x != nil {
		return x.MaxCpuMillicores
	}
	return 0
}

func (x *ResourceRequirements) GetRequiresNetworkAccess() bool {
	if x != nil {
		return x.RequiresNetworkAccess
	}
	return false
}

func (x *ResourceRequirements) GetRequiresFileSystem() bool {
	if x != nil {
		return x.RequiresFileSystem
	}
	return false
}

type RegisterNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	NodeId        string                 `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeResponse) Reset() {
	*x = RegisterNodeResponse{}
	mi := &file_node_runner_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeResponse) ProtoMessage() {}

func (x *RegisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{13}
}

func (x *RegisterNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterNodeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *RegisterNodeResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type UnregisterNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterNodeRequest) Reset() {
	*x = UnregisterNodeRequest{}
	mi := &file_node_runner_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterNodeRequest) ProtoMessage() {}

func (x *UnregisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterNodeRequest.ProtoReflect.Descriptor instead.
func (*UnregisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{14}
}

func (x *UnregisterNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type UnregisterNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterNodeResponse) Reset() {
	*x = UnregisterNodeResponse{}
	mi := &file_node_runner_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterNodeResponse) ProtoMessage() {}

func (x *UnregisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterNodeResponse.ProtoReflect.Descriptor instead.
func (*UnregisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{15}
}

func (x *UnregisterNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnregisterNodeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ListNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      string                 `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	SearchQuery   string                 `protobuf:"bytes,2,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesRequest) Reset() {
	*x = ListNodesRequest{}
	mi := &file_node_runner_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesRequest) ProtoMessage() {}

func (x *ListNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesRequest.ProtoReflect.Descriptor instead.
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{16}
}

func (x *ListNodesRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListNodesRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

func (x *ListNodesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListNodesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*NodeDefinition      `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	mi := &file_node_runner_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{17}
}

func (x *ListNodesResponse) GetNodes() []*NodeDefinition {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListNodesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListNodesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListNodesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type GetNodeSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeType      string                 `protobuf:"bytes,1,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeSchemaRequest) Reset() {
	*x = GetNodeSchemaRequest{}
	mi := &file_node_runner_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeSchemaRequest) ProtoMessage() {}

func (x *GetNodeSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetNodeSchemaRequest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{18}
}

func (x *GetNodeSchemaRequest) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

func (x *GetNodeSchemaRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetNodeSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *NodeDefinition        `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeSchemaResponse) Reset() {
	*x = GetNodeSchemaResponse{}
	mi := &file_node_runner_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeSchemaResponse) ProtoMessage() {}

func (x *GetNodeSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetNodeSchemaResponse) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{19}
}

func (x *GetNodeSchemaResponse) GetNode() *NodeDefinition {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *GetNodeSchemaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetNodeSchemaResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type InstallPluginRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Plugin          *Plugin                `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	VerifySignature bool                   `protobuf:"varint,2,opt,name=verify_signature,json=verifySignature,proto3" json:"verify_signature,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InstallPluginRequest) Reset() {
	*x = InstallPluginRequest{}
	mi := &file_node_runner_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallPluginRequest) ProtoMessage() {}

func (x *InstallPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallPluginRequest.ProtoReflect.Descriptor instead.
func (*InstallPluginRequest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{20}
}

func (x *InstallPluginRequest) GetPlugin() *Plugin {
	if x != nil {
		return x.Plugin
	}
	return nil
}

func (x *InstallPluginRequest) GetVerifySignature() bool {
	if x != nil {
		return x.VerifySignature
	}
	return false
}

type Plugin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Author        string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Nodes         []*NodeDefinition      `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Manifest      *PluginManifest        `protobuf:"bytes,6,opt,name=manifest,proto3" json:"manifest,omitempty"`
	PackageData   []byte                 `protobuf:"bytes,7,opt,name=package_data,json=packageData,proto3" json:"package_data,omitempty"`
	Signature     string                 `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Plugin) Reset() {
	*x = Plugin{}
	mi := &file_node_runner_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin) ProtoMessage() {}

func (x *Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin.ProtoReflect.Descriptor instead.
func (*Plugin) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{21}
}

func (x *Plugin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plugin) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Plugin) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Plugin) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Plugin) GetNodes() []*NodeDefinition {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Plugin) GetManifest() *PluginManifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *Plugin) GetPackageData() []byte {
	if x != nil {
		return x.PackageData
	}
	return nil
}

func (x *Plugin) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type PluginManifest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PluginId      string                 `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	ApiVersion    string                 `protobuf:"bytes,4,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Dependencies  []string               `protobuf:"bytes,5,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	Permissions   *PluginPermissions     `protobuf:"bytes,6,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginManifest) Reset() {
	*x = PluginManifest{}
	mi := &file_node_runner_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginManifest) ProtoMessage() {}

func (x *PluginManifest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginManifest.ProtoReflect.Descriptor instead.
func (*PluginManifest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{22}
}

func (x *PluginManifest) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *PluginManifest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginManifest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PluginManifest) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *PluginManifest) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *PluginManifest) GetPermissions() *PluginPermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *PluginManifest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type PluginPermissions struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NetworkAccess     bool                   `protobuf:"varint,1,opt,name=network_access,json=networkAccess,proto3" json:"network_access,omitempty"`
	FileSystemAccess  bool                   `protobuf:"varint,2,opt,name=file_system_access,json=fileSystemAccess,proto3" json:"file_system_access,omitempty"`
	EnvironmentAccess bool                   `protobuf:"varint,3,opt,name=environment_access,json=environmentAccess,proto3" json:"environment_access,omitempty"`
	AllowedDomains    []string               `protobuf:"bytes,4,rep,name=allowed_domains,json=allowedDomains,proto3" json:"allowed_domains,omitempty"`
	RequiredSecrets   []string               `protobuf:"bytes,5,rep,name=required_secrets,json=requiredSecrets,proto3" json:"required_secrets,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PluginPermissions) Reset() {
	*x = PluginPermissions{}
	mi := &file_node_runner_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginPermissions) ProtoMessage() {}

func (x *PluginPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginPermissions.ProtoReflect.Descriptor instead.
func (*PluginPermissions) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{23}
}

func (x *PluginPermissions) GetNetworkAccess() bool {
	if x != nil {
		return x.NetworkAccess
	}
	return false
}

func (x *PluginPermissions) GetFileSystemAccess() bool {
	if x != nil {
		return x.FileSystemAccess
	}
	return false
}

func (x *PluginPermissions) GetEnvironmentAccess() bool {
	if x != nil {
		return x.EnvironmentAccess
	}
	return false
}

func (x *PluginPermissions) GetAllowedDomains() []string {
	if x != nil {
		return x.AllowedDomains
	}
	return nil
}

func (x *PluginPermissions) GetRequiredSecrets() []string {
	if x != nil {
		return x.RequiredSecrets
	}
	return nil
}

type InstallPluginResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage   string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	PluginId       string                 `protobuf:"bytes,3,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	InstalledNodes []string               `protobuf:"bytes,4,rep,name=installed_nodes,json=installedNodes,proto3" json:"installed_nodes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InstallPluginResponse) Reset() {
	*x = InstallPluginResponse{}
	mi := &file_node_runner_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallPluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallPluginResponse) ProtoMessage() {}

func (x *InstallPluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallPluginResponse.ProtoReflect.Descriptor instead.
func (*InstallPluginResponse) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{24}
}

func (x *InstallPluginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InstallPluginResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *InstallPluginResponse) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *InstallPluginResponse) GetInstalledNodes() []string {
	if x != nil {
		return x.InstalledNodes
	}
	return nil
}

type UninstallPluginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PluginId      string                 `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UninstallPluginRequest) Reset() {
	*x = UninstallPluginRequest{}
	mi := &file_node_runner_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UninstallPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallPluginRequest) ProtoMessage() {}

func (x *UninstallPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallPluginRequest.ProtoReflect.Descriptor instead.
func (*UninstallPluginRequest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{25}
}

func (x *UninstallPluginRequest) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

type UninstallPluginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	RemovedNodes  []string               `protobuf:"bytes,3,rep,name=removed_nodes,json=removedNodes,proto3" json:"removed_nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UninstallPluginResponse) Reset() {
	*x = UninstallPluginResponse{}
	mi := &file_node_runner_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UninstallPluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallPluginResponse) ProtoMessage() {}

func (x *UninstallPluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallPluginResponse.ProtoReflect.Descriptor instead.
func (*UninstallPluginResponse) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{26}
}

func (x *UninstallPluginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UninstallPluginResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UninstallPluginResponse) GetRemovedNodes() []string {
	if x != nil {
		return x.RemovedNodes
	}
	return nil
}

type ValidatePluginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plugin        *Plugin                `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidatePluginRequest) Reset() {
	*x = ValidatePluginRequest{}
	mi := &file_node_runner_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatePluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePluginRequest) ProtoMessage() {}

func (x *ValidatePluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePluginRequest.ProtoReflect.Descriptor instead.
func (*ValidatePluginRequest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{27}
}

func (x *ValidatePluginRequest) GetPlugin() *Plugin {
	if x != nil {
		return x.Plugin
	}
	return nil
}

type ValidatePluginResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Valid              bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	ValidationErrors   []string               `protobuf:"bytes,2,rep,name=validation_errors,json=validationErrors,proto3" json:"validation_errors,omitempty"`
	SecurityAssessment *SecurityAssessment    `protobuf:"bytes,3,opt,name=security_assessment,json=securityAssessment,proto3" json:"security_assessment,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ValidatePluginResponse) Reset() {
	*x = ValidatePluginResponse{}
	mi := &file_node_runner_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatePluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePluginResponse) ProtoMessage() {}

func (x *ValidatePluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePluginResponse.ProtoReflect.Descriptor instead.
func (*ValidatePluginResponse) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{28}
}

func (x *ValidatePluginResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidatePluginResponse) GetValidationErrors() []string {
	if x != nil {
		return x.ValidationErrors
	}
	return nil
}

func (x *ValidatePluginResponse) GetSecurityAssessment() *SecurityAssessment {
	if x != nil {
		return x.SecurityAssessment
	}
	return nil
}

type SecurityAssessment struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SecurityLevel       SecurityLevel          `protobuf:"varint,1,opt,name=security_level,json=securityLevel,proto3,enum=node_runner.SecurityLevel" json:"security_level,omitempty"`
	PotentialRisks      []string               `protobuf:"bytes,2,rep,name=potential_risks,json=potentialRisks,proto3" json:"potential_risks,omitempty"`
	RequiredPermissions []string               `protobuf:"bytes,3,rep,name=required_permissions,json=requiredPermissions,proto3" json:"required_permissions,omitempty"`
	SignatureValid      bool                   `protobuf:"varint,4,opt,name=signature_valid,json=signatureValid,proto3" json:"signature_valid,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SecurityAssessment) Reset() {
	*x = SecurityAssessment{}
	mi := &file_node_runner_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityAssessment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityAssessment) ProtoMessage() {}

func (x *SecurityAssessment) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityAssessment.ProtoReflect.Descriptor instead.
func (*SecurityAssessment) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{29}
}

func (x *SecurityAssessment) GetSecurityLevel() SecurityLevel {
	if x != nil {
		return x.SecurityLevel
	}
	return SecurityLevel_SECURITY_UNKNOWN
}

func (x *SecurityAssessment) GetPotentialRisks() []string {
	if x != nil {
		return x.PotentialRisks
	}
	return nil
}

func (x *SecurityAssessment) GetRequiredPermissions() []string {
	if x != nil {
		return x.RequiredPermissions
	}
	return nil
}

func (x *SecurityAssessment) GetSignatureValid() bool {
	if x != nil {
		return x.SignatureValid
	}
	return false
}

type GetRunnerStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunnerId      string                 `protobuf:"bytes,1,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRunnerStatusRequest) Reset() {
	*x = GetRunnerStatusRequest{}
	mi := &file_node_runner_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRunnerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunnerStatusRequest) ProtoMessage() {}

func (x *GetRunnerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunnerStatusRequest.ProtoReflect.Descriptor instead.
func (*GetRunnerStatusRequest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{30}
}

func (x *GetRunnerStatusRequest) GetRunnerId() string {
	if x != nil {
		return x.RunnerId
	}
	return ""
}

type GetRunnerStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *RunnerStatus          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRunnerStatusResponse) Reset() {
	*x = GetRunnerStatusResponse{}
	mi := &file_node_runner_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRunnerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunnerStatusResponse) ProtoMessage() {}

func (x *GetRunnerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunnerStatusResponse.ProtoReflect.Descriptor instead.
func (*GetRunnerStatusResponse) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{31}
}

func (x *GetRunnerStatusResponse) GetStatus() *RunnerStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetRunnerStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetRunnerStatusResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RunnerStatus struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RunnerId         string                 `protobuf:"bytes,1,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
	State            RunnerState            `protobuf:"varint,2,opt,name=state,proto3,enum=node_runner.RunnerState" json:"state,omitempty"`
	ActiveExecutions int32                  `protobuf:"varint,3,opt,name=active_executions,json=activeExecutions,proto3" json:"active_executions,omitempty"`
	QueuedExecutions int32                  `protobuf:"varint,4,opt,name=queued_executions,json=queuedExecutions,proto3" json:"queued_executions,omitempty"`
	ResourceUsage    *ResourceUsage         `protobuf:"bytes,5,opt,name=resource_usage,json=resourceUsage,proto3" json:"resource_usage,omitempty"`
	LoadedPlugins    []string               `protobuf:"bytes,6,rep,name=loaded_plugins,json=loadedPlugins,proto3" json:"loaded_plugins,omitempty"`
	Capabilities     map[string]string      `protobuf:"bytes,7,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LastHeartbeat    string                 `protobuf:"bytes,8,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RunnerStatus) Reset() {
	*x = RunnerStatus{}
	mi := &file_node_runner_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerStatus) ProtoMessage() {}

func (x *RunnerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerStatus.ProtoReflect.Descriptor instead.
func (*RunnerStatus) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{32}
}

func (x *RunnerStatus) GetRunnerId() string {
	if x != nil {
		return x.RunnerId
	}
	return ""
}

func (x *RunnerStatus) GetState() RunnerState {
	if x != nil {
		return x.State
	}
	return RunnerState_RUNNER_STATE_UNKNOWN
}

func (x *RunnerStatus) GetActiveExecutions() int32 {
	if x != nil {
		return x.ActiveExecutions
	}
	return 0
}

func (x *RunnerStatus) GetQueuedExecutions() int32 {
	if x != nil {
		return x.QueuedExecutions
	}
	return 0
}

func (x *RunnerStatus) GetResourceUsage() *ResourceUsage {
	if x != nil {
		return x.ResourceUsage
	}
	return nil
}

func (x *RunnerStatus) GetLoadedPlugins() []string {
	if x != nil {
		return x.LoadedPlugins
	}
	return nil
}

func (x *RunnerStatus) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *RunnerStatus) GetLastHeartbeat() string {
	if x != nil {
		return x.LastHeartbeat
	}
	return ""
}

type ResourceUsage struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	MemoryUsedBytes      int64                  `protobuf:"varint,1,opt,name=memory_used_bytes,json=memoryUsedBytes,proto3" json:"memory_used_bytes,omitempty"`
	CpuUsedMillicores    int32                  `protobuf:"varint,2,opt,name=cpu_used_millicores,json=cpuUsedMillicores,proto3" json:"cpu_used_millicores,omitempty"`
	ActiveProcesses      int32                  `protobuf:"varint,3,opt,name=active_processes,json=activeProcesses,proto3" json:"active_processes,omitempty"`
	OpenFileDescriptors  int32                  `protobuf:"varint,4,opt,name=open_file_descriptors,json=openFileDescriptors,proto3" json:"open_file_descriptors,omitempty"`
	NetworkBytesSent     int64                  `protobuf:"varint,5,opt,name=network_bytes_sent,json=networkBytesSent,proto3" json:"network_bytes_sent,omitempty"`
	NetworkBytesReceived int64                  `protobuf:"varint,6,opt,name=network_bytes_received,json=networkBytesReceived,proto3" json:"network_bytes_received,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ResourceUsage) Reset() {
	*x = ResourceUsage{}
	mi := &file_node_runner_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsage) ProtoMessage() {}

func (x *ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUsage.ProtoReflect.Descriptor instead.
func (*ResourceUsage) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{33}
}

func (x *ResourceUsage) GetMemoryUsedBytes() int64 {
	if x != nil {
		return x.MemoryUsedBytes
	}
	return 0
}

func (x *ResourceUsage) GetCpuUsedMillicores() int32 {
	if x != nil {
		return x.CpuUsedMillicores
	}
	return 0
}

func (x *ResourceUsage) GetActiveProcesses() int32 {
	if x != nil {
		return x.ActiveProcesses
	}
	return 0
}

func (x *ResourceUsage) GetOpenFileDescriptors() int32 {
	if x != nil {
		return x.OpenFileDescriptors
	}
	return 0
}

func (x *ResourceUsage) GetNetworkBytesSent() int64 {
	if x != nil {
		return x.NetworkBytesSent
	}
	return 0
}

func (x *ResourceUsage) GetNetworkBytesReceived() int64 {
	if x != nil {
		return x.NetworkBytesReceived
	}
	return 0
}

type UpdateSecurityPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunnerId      string                 `protobuf:"bytes,1,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
	Policy        *SecurityPolicy        `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSecurityPolicyRequest) Reset() {
	*x = UpdateSecurityPolicyRequest{}
	mi := &file_node_runner_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSecurityPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSecurityPolicyRequest) ProtoMessage() {}

func (x *UpdateSecurityPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSecurityPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateSecurityPolicyRequest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateSecurityPolicyRequest) GetRunnerId() string {
	if x != nil {
		return x.RunnerId
	}
	return ""
}

func (x *UpdateSecurityPolicyRequest) GetPolicy() *SecurityPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type SecurityPolicy struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	DefaultIsolation     IsolationLevel         `protobuf:"varint,1,opt,name=default_isolation,json=defaultIsolation,proto3,enum=node_runner.IsolationLevel" json:"default_isolation,omitempty"`
	DefaultNetworkPolicy *NetworkPolicy         `protobuf:"bytes,2,opt,name=default_network_policy,json=defaultNetworkPolicy,proto3" json:"default_network_policy,omitempty"`
	TrustedDomains       []string               `protobuf:"bytes,3,rep,name=trusted_domains,json=trustedDomains,proto3" json:"trusted_domains,omitempty"`
	BlockedDomains       []string               `protobuf:"bytes,4,rep,name=blocked_domains,json=blockedDomains,proto3" json:"blocked_domains,omitempty"`
	EnvironmentWhitelist map[string]string      `protobuf:"bytes,5,rep,name=environment_whitelist,json=environmentWhitelist,proto3" json:"environment_whitelist,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AllowCodeExecution   bool                   `protobuf:"varint,6,opt,name=allow_code_execution,json=allowCodeExecution,proto3" json:"allow_code_execution,omitempty"`
	AllowNativeModules   bool                   `protobuf:"varint,7,opt,name=allow_native_modules,json=allowNativeModules,proto3" json:"allow_native_modules,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SecurityPolicy) Reset() {
	*x = SecurityPolicy{}
	mi := &file_node_runner_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityPolicy) ProtoMessage() {}

func (x *SecurityPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityPolicy.ProtoReflect.Descriptor instead.
func (*SecurityPolicy) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{35}
}

func (x *SecurityPolicy) GetDefaultIsolation() IsolationLevel {
	if x != nil {
		return x.DefaultIsolation
	}
	return IsolationLevel_ISOLATION_NONE
}

func (x *SecurityPolicy) GetDefaultNetworkPolicy() *NetworkPolicy {
	if x != nil {
		return x.DefaultNetworkPolicy
	}
	return nil
}

func (x *SecurityPolicy) GetTrustedDomains() []string {
	if x != nil {
		return x.TrustedDomains
	}
	return nil
}

func (x *SecurityPolicy) GetBlockedDomains() []string {
	if x != nil {
		return x.BlockedDomains
	}
	return nil
}

func (x *SecurityPolicy) GetEnvironmentWhitelist() map[string]string {
	if x != nil {
		return x.EnvironmentWhitelist
	}
	return nil
}

func (x *SecurityPolicy) GetAllowCodeExecution() bool {
	if x != nil {
		return x.AllowCodeExecution
	}
	return false
}

func (x *SecurityPolicy) GetAllowNativeModules() bool {
	if x != nil {
		return x.AllowNativeModules
	}
	return false
}

type UpdateSecurityPolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSecurityPolicyResponse) Reset() {
	*x = UpdateSecurityPolicyResponse{}
	mi := &file_node_runner_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSecurityPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSecurityPolicyResponse) ProtoMessage() {}

func (x *UpdateSecurityPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSecurityPolicyResponse.ProtoReflect.Descriptor instead.
func (*UpdateSecurityPolicyResponse) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateSecurityPolicyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateSecurityPolicyResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_node_runner_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{37}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Details       map[string]string      `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_node_runner_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_runner_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_node_runner_proto_rawDescGZIP(), []int{38}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_node_runner_proto protoreflect.FileDescriptor

const file_node_runner_proto_rawDesc = "" +
	"\n" +
	"\x11node_runner.proto\x12\vnode_runner\x1a\x12orchestrator.proto\x1a\fengine.proto\"\xda\x03\n" +
	"\x12ExecuteNodeRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12\x17\n" +
	"\astep_id\x18\x02 \x01(\tR\x06stepId\x12\x1b\n" +
	"\tnode_type\x18\x03 \x01(\tR\bnodeType\x12O\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v2/.node_runner.ExecuteNodeRequest.ParametersEntryR\n" +
	"parameters\x12\x1d\n" +
	"\n" +
	"input_data\x18\x05 \x01(\tR\tinputData\x120\n" +
	"\x06policy\x18\x06 \x01(\v2\x18.orchestrator.NodePolicyR\x06policy\x12G\n" +
	"\x10security_context\x18\a \x01(\v2\x1c.node_runner.SecurityContextR\x0fsecurityContext\x12A\n" +
	"\x0eruntime_config\x18\b \x01(\v2\x1a.node_runner.RuntimeConfigR\rruntimeConfig\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x96\x03\n" +
	"\x0fSecurityContext\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12'\n" +
	"\x0fallowed_domains\x18\x02 \x03(\tR\x0eallowedDomains\x12k\n" +
	"\x15environment_variables\x18\x03 \x03(\v26.node_runner.SecurityContext.EnvironmentVariablesEntryR\x14environmentVariables\x12A\n" +
	"\x0enetwork_policy\x18\x04 \x01(\v2\x1a.node_runner.NetworkPolicyR\rnetworkPolicy\x12D\n" +
	"\x0fisolation_level\x18\x05 \x01(\x0e2\x1b.node_runner.IsolationLevelR\x0eisolationLevel\x1aG\n" +
	"\x19EnvironmentVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xef\x01\n" +
	"\rNetworkPolicy\x12#\n" +
	"\rallowed_hosts\x18\x01 \x03(\tR\fallowedHosts\x12#\n" +
	"\rallowed_ports\x18\x02 \x03(\x05R\fallowedPorts\x124\n" +
	"\x16allow_private_networks\x18\x03 \x01(\bR\x14allowPrivateNetworks\x12'\n" +
	"\x0fallow_localhost\x18\x04 \x01(\bR\x0eallowLocalhost\x125\n" +
	"\x17max_requests_per_minute\x18\x05 \x01(\x05R\x14maxRequestsPerMinute\"\xd7\x02\n" +
	"\rRuntimeConfig\x12'\n" +
	"\x0ftimeout_seconds\x18\x01 \x01(\x05R\x0etimeoutSeconds\x12(\n" +
	"\x10max_memory_bytes\x18\x02 \x01(\x03R\x0emaxMemoryBytes\x12,\n" +
	"\x12max_cpu_millicores\x18\x03 \x01(\x05R\x10maxCpuMillicores\x12)\n" +
	"\x10enable_debugging\x18\x04 \x01(\bR\x0fenableDebugging\x12W\n" +
	"\x0fruntime_options\x18\x05 \x03(\v2..node_runner.RuntimeConfig.RuntimeOptionsEntryR\x0eruntimeOptions\x1aA\n" +
	"\x13RuntimeOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc6\x01\n" +
	"\x13ExecuteNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1f\n" +
	"\voutput_data\x18\x02 \x01(\tR\n" +
	"outputData\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12;\n" +
	"\ametrics\x18\x04 \x01(\v2!.node_runner.NodeExecutionMetricsR\ametrics\x12\x12\n" +
	"\x04logs\x18\x05 \x03(\tR\x04logs\"\xc6\x02\n" +
	"\x14NodeExecutionMetrics\x12*\n" +
	"\x11execution_time_ms\x18\x01 \x01(\x03R\x0fexecutionTimeMs\x12*\n" +
	"\x11memory_used_bytes\x18\x02 \x01(\x03R\x0fmemoryUsedBytes\x12\x1e\n" +
	"\vcpu_time_ms\x18\x03 \x01(\x05R\tcpuTimeMs\x12)\n" +
	"\x10network_requests\x18\x04 \x01(\x05R\x0fnetworkRequests\x12,\n" +
	"\x12network_bytes_sent\x18\x05 \x01(\x03R\x10networkBytesSent\x124\n" +
	"\x16network_bytes_received\x18\x06 \x01(\x03R\x14networkBytesReceived\x12'\n" +
	"\x0ffile_operations\x18\a \x01(\x05R\x0efileOperations\"p\n" +
	"\x1aCancelNodeExecutionRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12\x17\n" +
	"\astep_id\x18\x02 \x01(\tR\x06stepId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\\\n" +
	"\x1bCancelNodeExecutionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"F\n" +
	"\x13RegisterNodeRequest\x12/\n" +
	"\x04node\x18\x01 \x01(\v2\x1b.node_runner.NodeDefinitionR\x04node\"\xaf\x03\n" +
	"\x0eNodeDefinition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12:\n" +
	"\finput_schema\x18\x05 \x01(\v2\x17.node_runner.NodeSchemaR\vinputSchema\x12<\n" +
	"\routput_schema\x18\x06 \x01(\v2\x17.node_runner.NodeSchemaR\foutputSchema\x12A\n" +
	"\fcapabilities\x18\a \x01(\v2\x1d.node_runner.NodeCapabilitiesR\fcapabilities\x12-\n" +
	"\x12implementation_url\x18\b \x01(\tR\x11implementationUrl\x12/\n" +
	"\x13implementation_code\x18\t \x01(\fR\x12implementationCode\x12\x1c\n" +
	"\tsignature\x18\n" +
	" \x01(\tR\tsignature\"\xfb\x01\n" +
	"\n" +
	"NodeSchema\x12\x1f\n" +
	"\vjson_schema\x18\x01 \x01(\tR\n" +
	"jsonSchema\x12'\n" +
	"\x0frequired_fields\x18\x02 \x03(\tR\x0erequiredFields\x12]\n" +
	"\x12field_descriptions\x18\x03 \x03(\v2..node_runner.NodeSchema.FieldDescriptionsEntryR\x11fieldDescriptions\x1aD\n" +
	"\x16FieldDescriptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd6\x02\n" +
	"\x10NodeCapabilities\x12%\n" +
	"\x0esupports_async\x18\x01 \x01(\bR\rsupportsAsync\x123\n" +
	"\x15supports_cancellation\x18\x02 \x01(\bR\x14supportsCancellation\x121\n" +
	"\x14requires_credentials\x18\x03 \x01(\bR\x13requiresCredentials\x12%\n" +
	"\x0esupports_batch\x18\x04 \x01(\bR\rsupportsBatch\x124\n" +
	"\x16supported_auth_methods\x18\x05 \x03(\tR\x14supportedAuthMethods\x12V\n" +
	"\x15resource_requirements\x18\x06 \x01(\v2!.node_runner.ResourceRequirementsR\x14resourceRequirements\"\xb0\x02\n" +
	"\x14ResourceRequirements\x12(\n" +
	"\x10min_memory_bytes\x18\x01 \x01(\x03R\x0eminMemoryBytes\x12(\n" +
	"\x10max_memory_bytes\x18\x02 \x01(\x03R\x0emaxMemoryBytes\x12,\n" +
	"\x12min_cpu_millicores\x18\x03 \x01(\x05R\x10minCpuMillicores\x12,\n" +
	"\x12max_cpu_millicores\x18\x04 \x01(\x05R\x10maxCpuMillicores\x126\n" +
	"\x17requires_network_access\x18\x05 \x01(\bR\x15requiresNetworkAccess\x120\n" +
	"\x14requires_file_system\x18\x06 \x01(\bR\x12requiresFileSystem\"n\n" +
	"\x14RegisterNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x17\n" +
	"\anode_id\x18\x03 \x01(\tR\x06nodeId\"0\n" +
	"\x15UnregisterNodeRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\"W\n" +
	"\x16UnregisterNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\x8d\x01\n" +
	"\x10ListNodesRequest\x12\x1a\n" +
	"\bcategory\x18\x01 \x01(\tR\bcategory\x12!\n" +
	"\fsearch_query\x18\x02 \x01(\tR\vsearchQuery\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\"\xad\x01\n" +
	"\x11ListNodesResponse\x121\n" +
	"\x05nodes\x18\x01 \x03(\v2\x1b.node_runner.NodeDefinitionR\x05nodes\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"M\n" +
	"\x14GetNodeSchemaRequest\x12\x1b\n" +
	"\tnode_type\x18\x01 \x01(\tR\bnodeType\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"\x87\x01\n" +
	"\x15GetNodeSchemaResponse\x12/\n" +
	"\x04node\x18\x01 \x01(\v2\x1b.node_runner.NodeDefinitionR\x04node\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"n\n" +
	"\x14InstallPluginRequest\x12+\n" +
	"\x06plugin\x18\x01 \x01(\v2\x13.node_runner.PluginR\x06plugin\x12)\n" +
	"\x10verify_signature\x18\x02 \x01(\bR\x0fverifySignature\"\x9d\x02\n" +
	"\x06Plugin\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x16\n" +
	"\x06author\x18\x03 \x01(\tR\x06author\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x121\n" +
	"\x05nodes\x18\x05 \x03(\v2\x1b.node_runner.NodeDefinitionR\x05nodes\x127\n" +
	"\bmanifest\x18\x06 \x01(\v2\x1b.node_runner.PluginManifestR\bmanifest\x12!\n" +
	"\fpackage_data\x18\a \x01(\fR\vpackageData\x12\x1c\n" +
	"\tsignature\x18\b \x01(\tR\tsignature\"\xe6\x02\n" +
	"\x0ePluginManifest\x12\x1b\n" +
	"\tplugin_id\x18\x01 \x01(\tR\bpluginId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x1f\n" +
	"\vapi_version\x18\x04 \x01(\tR\n" +
	"apiVersion\x12\"\n" +
	"\fdependencies\x18\x05 \x03(\tR\fdependencies\x12@\n" +
	"\vpermissions\x18\x06 \x01(\v2\x1e.node_runner.PluginPermissionsR\vpermissions\x12E\n" +
	"\bmetadata\x18\a \x03(\v2).node_runner.PluginManifest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xeb\x01\n" +
	"\x11PluginPermissions\x12%\n" +
	"\x0enetwork_access\x18\x01 \x01(\bR\rnetworkAccess\x12,\n" +
	"\x12file_system_access\x18\x02 \x01(\bR\x10fileSystemAccess\x12-\n" +
	"\x12environment_access\x18\x03 \x01(\bR\x11environmentAccess\x12'\n" +
	"\x0fallowed_domains\x18\x04 \x03(\tR\x0eallowedDomains\x12)\n" +
	"\x10required_secrets\x18\x05 \x03(\tR\x0frequiredSecrets\"\x9c\x01\n" +
	"\x15InstallPluginResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x1b\n" +
	"\tplugin_id\x18\x03 \x01(\tR\bpluginId\x12'\n" +
	"\x0finstalled_nodes\x18\x04 \x03(\tR\x0einstalledNodes\"5\n" +
	"\x16UninstallPluginRequest\x12\x1b\n" +
	"\tplugin_id\x18\x01 \x01(\tR\bpluginId\"}\n" +
	"\x17UninstallPluginResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12#\n" +
	"\rremoved_nodes\x18\x03 \x03(\tR\fremovedNodes\"D\n" +
	"\x15ValidatePluginRequest\x12+\n" +
	"\x06plugin\x18\x01 \x01(\v2\x13.node_runner.PluginR\x06plugin\"\xad\x01\n" +
	"\x16ValidatePluginResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12+\n" +
	"\x11validation_errors\x18\x02 \x03(\tR\x10validationErrors\x12P\n" +
	"\x13security_assessment\x18\x03 \x01(\v2\x1f.node_runner.SecurityAssessmentR\x12securityAssessment\"\xdc\x01\n" +
	"\x12SecurityAssessment\x12A\n" +
	"\x0esecurity_level\x18\x01 \x01(\x0e2\x1a.node_runner.SecurityLevelR\rsecurityLevel\x12'\n" +
	"\x0fpotential_risks\x18\x02 \x03(\tR\x0epotentialRisks\x121\n" +
	"\x14required_permissions\x18\x03 \x03(\tR\x13requiredPermissions\x12'\n" +
	"\x0fsignature_valid\x18\x04 \x01(\bR\x0esignatureValid\"5\n" +
	"\x16GetRunnerStatusRequest\x12\x1b\n" +
	"\trunner_id\x18\x01 \x01(\tR\brunnerId\"\x8b\x01\n" +
	"\x17GetRunnerStatusResponse\x121\n" +
	"\x06status\x18\x01 \x01(\v2\x19.node_runner.RunnerStatusR\x06status\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"\xd8\x03\n" +
	"\fRunnerStatus\x12\x1b\n" +
	"\trunner_id\x18\x01 \x01(\tR\brunnerId\x12.\n" +
	"\x05state\x18\x02 \x01(\x0e2\x18.node_runner.RunnerStateR\x05state\x12+\n" +
	"\x11active_executions\x18\x03 \x01(\x05R\x10activeExecutions\x12+\n" +
	"\x11queued_executions\x18\x04 \x01(\x05R\x10queuedExecutions\x12A\n" +
	"\x0eresource_usage\x18\x05 \x01(\v2\x1a.node_runner.ResourceUsageR\rresourceUsage\x12%\n" +
	"\x0eloaded_plugins\x18\x06 \x03(\tR\rloadedPlugins\x12O\n" +
	"\fcapabilities\x18\a \x03(\v2+.node_runner.RunnerStatus.CapabilitiesEntryR\fcapabilities\x12%\n" +
	"\x0elast_heartbeat\x18\b \x01(\tR\rlastHeartbeat\x1a?\n" +
	"\x11CapabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xae\x02\n" +
	"\rResourceUsage\x12*\n" +
	"\x11memory_used_bytes\x18\x01 \x01(\x03R\x0fmemoryUsedBytes\x12.\n" +
	"\x13cpu_used_millicores\x18\x02 \x01(\x05R\x11cpuUsedMillicores\x12)\n" +
	"\x10active_processes\x18\x03 \x01(\x05R\x0factiveProcesses\x122\n" +
	"\x15open_file_descriptors\x18\x04 \x01(\x05R\x13openFileDescriptors\x12,\n" +
	"\x12network_bytes_sent\x18\x05 \x01(\x03R\x10networkBytesSent\x124\n" +
	"\x16network_bytes_received\x18\x06 \x01(\x03R\x14networkBytesReceived\"o\n" +
	"\x1bUpdateSecurityPolicyRequest\x12\x1b\n" +
	"\trunner_id\x18\x01 \x01(\tR\brunnerId\x123\n" +
	"\x06policy\x18\x02 \x01(\v2\x1b.node_runner.SecurityPolicyR\x06policy\"\x97\x04\n" +
	"\x0eSecurityPolicy\x12H\n" +
	"\x11default_isolation\x18\x01 \x01(\x0e2\x1b.node_runner.IsolationLevelR\x10defaultIsolation\x12P\n" +
	"\x16default_network_policy\x18\x02 \x01(\v2\x1a.node_runner.NetworkPolicyR\x14defaultNetworkPolicy\x12'\n" +
	"\x0ftrusted_domains\x18\x03 \x03(\tR\x0etrustedDomains\x12'\n" +
	"\x0fblocked_domains\x18\x04 \x03(\tR\x0eblockedDomains\x12j\n" +
	"\x15environment_whitelist\x18\x05 \x03(\v25.node_runner.SecurityPolicy.EnvironmentWhitelistEntryR\x14environmentWhitelist\x120\n" +
	"\x14allow_code_execution\x18\x06 \x01(\bR\x12allowCodeExecution\x120\n" +
	"\x14allow_native_modules\x18\a \x01(\bR\x12allowNativeModules\x1aG\n" +
	"\x19EnvironmentWhitelistEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"]\n" +
	"\x1cUpdateSecurityPolicyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\x0f\n" +
	"\rHealthRequest\"\xa8\x01\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12B\n" +
	"\adetails\x18\x02 \x03(\v2(.node_runner.HealthResponse.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*y\n" +
	"\x0eIsolationLevel\x12\x12\n" +
	"\x0eISOLATION_NONE\x10\x00\x12\x11\n" +
	"\rISOLATION_VM2\x10\x01\x12\x15\n" +
	"\x11ISOLATION_PROCESS\x10\x02\x12\x15\n" +
	"\x11ISOLATION_MICROVM\x10\x03\x12\x12\n" +
	"\x0eISOLATION_WASM\x10\x04*\x99\x01\n" +
	"\rSecurityLevel\x12\x14\n" +
	"\x10SECURITY_UNKNOWN\x10\x00\x12\x11\n" +
	"\rSECURITY_SAFE\x10\x01\x12\x15\n" +
	"\x11SECURITY_LOW_RISK\x10\x02\x12\x18\n" +
	"\x14SECURITY_MEDIUM_RISK\x10\x03\x12\x16\n" +
	"\x12SECURITY_HIGH_RISK\x10\x04\x12\x16\n" +
	"\x12SECURITY_DANGEROUS\x10\x05*\xa8\x01\n" +
	"\vRunnerState\x12\x18\n" +
	"\x14RUNNER_STATE_UNKNOWN\x10\x00\x12\x1d\n" +
	"\x19RUNNER_STATE_INITIALIZING\x10\x01\x12\x16\n" +
	"\x12RUNNER_STATE_READY\x10\x02\x12\x15\n" +
	"\x11RUNNER_STATE_BUSY\x10\x03\x12\x19\n" +
	"\x15RUNNER_STATE_DRAINING\x10\x04\x12\x16\n" +
	"\x12RUNNER_STATE_ERROR\x10\x052\xc2\b\n" +
	"\x11NodeRunnerService\x12P\n" +
	"\vExecuteNode\x12\x1f.node_runner.ExecuteNodeRequest\x1a .node_runner.ExecuteNodeResponse\x12h\n" +
	"\x13CancelNodeExecution\x12'.node_runner.CancelNodeExecutionRequest\x1a(.node_runner.CancelNodeExecutionResponse\x12S\n" +
	"\fRegisterNode\x12 .node_runner.RegisterNodeRequest\x1a!.node_runner.RegisterNodeResponse\x12Y\n" +
	"\x0eUnregisterNode\x12\".node_runner.UnregisterNodeRequest\x1a#.node_runner.UnregisterNodeResponse\x12J\n" +
	"\tListNodes\x12\x1d.node_runner.ListNodesRequest\x1a\x1e.node_runner.ListNodesResponse\x12V\n" +
	"\rGetNodeSchema\x12!.node_runner.GetNodeSchemaRequest\x1a\".node_runner.GetNodeSchemaResponse\x12V\n" +
	"\rInstallPlugin\x12!.node_runner.InstallPluginRequest\x1a\".node_runner.InstallPluginResponse\x12\\\n" +
	"\x0fUninstallPlugin\x12#.node_runner.UninstallPluginRequest\x1a$.node_runner.UninstallPluginResponse\x12Y\n" +
	"\x0eValidatePlugin\x12\".node_runner.ValidatePluginRequest\x1a#.node_runner.ValidatePluginResponse\x12\\\n" +
	"\x0fGetRunnerStatus\x12#.node_runner.GetRunnerStatusRequest\x1a$.node_runner.GetRunnerStatusResponse\x12k\n" +
	"\x14UpdateSecurityPolicy\x12(.node_runner.UpdateSecurityPolicyRequest\x1a).node_runner.UpdateSecurityPolicyResponse\x12A\n" +
	"\x06Health\x12\x1a.node_runner.HealthRequest\x1a\x1b.node_runner.HealthResponseB\x15Z\x13./proto/node_runnerb\x06proto3"

var (
	file_node_runner_proto_rawDescOnce sync.Once
	file_node_runner_proto_rawDescData []byte
)

func file_node_runner_proto_rawDescGZIP() []byte {
	file_node_runner_proto_rawDescOnce.Do(func() {
		file_node_runner_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_node_runner_proto_rawDesc), len(file_node_runner_proto_rawDesc)))
	})
	return file_node_runner_proto_rawDescData
}

var file_node_runner_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_node_runner_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_node_runner_proto_goTypes = []any{
	(IsolationLevel)(0),                  // 0: node_runner.IsolationLevel
	(SecurityLevel)(0),                   // 1: node_runner.SecurityLevel
	(RunnerState)(0),                     // 2: node_runner.RunnerState
	(*ExecuteNodeRequest)(nil),           // 3: node_runner.ExecuteNodeRequest
	(*SecurityContext)(nil),              // 4: node_runner.SecurityContext
	(*NetworkPolicy)(nil),                // 5: node_runner.NetworkPolicy
	(*RuntimeConfig)(nil),                // 6: node_runner.RuntimeConfig
	(*ExecuteNodeResponse)(nil),          // 7: node_runner.ExecuteNodeResponse
	(*NodeExecutionMetrics)(nil),         // 8: node_runner.NodeExecutionMetrics
	(*CancelNodeExecutionRequest)(nil),   // 9: node_runner.CancelNodeExecutionRequest
	(*CancelNodeExecutionResponse)(nil),  // 10: node_runner.CancelNodeExecutionResponse
	(*RegisterNodeRequest)(nil),          // 11: node_runner.RegisterNodeRequest
	(*NodeDefinition)(nil),               // 12: node_runner.NodeDefinition
	(*NodeSchema)(nil),                   // 13: node_runner.NodeSchema
	(*NodeCapabilities)(nil),             // 14: node_runner.NodeCapabilities
	(*ResourceRequirements)(nil),         // 15: node_runner.ResourceRequirements
	(*RegisterNodeResponse)(nil),         // 16: node_runner.RegisterNodeResponse
	(*UnregisterNodeRequest)(nil),        // 17: node_runner.UnregisterNodeRequest
	(*UnregisterNodeResponse)(nil),       // 18: node_runner.UnregisterNodeResponse
	(*ListNodesRequest)(nil),             // 19: node_runner.ListNodesRequest
	(*ListNodesResponse)(nil),            // 20: node_runner.ListNodesResponse
	(*GetNodeSchemaRequest)(nil),         // 21: node_runner.GetNodeSchemaRequest
	(*GetNodeSchemaResponse)(nil),        // 22: node_runner.GetNodeSchemaResponse
	(*InstallPluginRequest)(nil),         // 23: node_runner.InstallPluginRequest
	(*Plugin)(nil),                       // 24: node_runner.Plugin
	(*PluginManifest)(nil),               // 25: node_runner.PluginManifest
	(*PluginPermissions)(nil),            // 26: node_runner.PluginPermissions
	(*InstallPluginResponse)(nil),        // 27: node_runner.InstallPluginResponse
	(*UninstallPluginRequest)(nil),       // 28: node_runner.UninstallPluginRequest
	(*UninstallPluginResponse)(nil),      // 29: node_runner.UninstallPluginResponse
	(*ValidatePluginRequest)(nil),        // 30: node_runner.ValidatePluginRequest
	(*ValidatePluginResponse)(nil),       // 31: node_runner.ValidatePluginResponse
	(*SecurityAssessment)(nil),           // 32: node_runner.SecurityAssessment
	(*GetRunnerStatusRequest)(nil),       // 33: node_runner.GetRunnerStatusRequest
	(*GetRunnerStatusResponse)(nil),      // 34: node_runner.GetRunnerStatusResponse
	(*RunnerStatus)(nil),                 // 35: node_runner.RunnerStatus
	(*ResourceUsage)(nil),                // 36: node_runner.ResourceUsage
	(*UpdateSecurityPolicyRequest)(nil),  // 37: node_runner.UpdateSecurityPolicyRequest
	(*SecurityPolicy)(nil),               // 38: node_runner.SecurityPolicy
	(*UpdateSecurityPolicyResponse)(nil), // 39: node_runner.UpdateSecurityPolicyResponse
	(*HealthRequest)(nil),                // 40: node_runner.HealthRequest
	(*HealthResponse)(nil),               // 41: node_runner.HealthResponse
	nil,                                  // 42: node_runner.ExecuteNodeRequest.ParametersEntry
	nil,                                  // 43: node_runner.SecurityContext.EnvironmentVariablesEntry
	nil,                                  // 44: node_runner.RuntimeConfig.RuntimeOptionsEntry
	nil,                                  // 45: node_runner.NodeSchema.FieldDescriptionsEntry
	nil,                                  // 46: node_runner.PluginManifest.MetadataEntry
	nil,                                  // 47: node_runner.RunnerStatus.CapabilitiesEntry
	nil,                                  // 48: node_runner.SecurityPolicy.EnvironmentWhitelistEntry
	nil,                                  // 49: node_runner.HealthResponse.DetailsEntry
	(*orchestrator.NodePolicy)(nil),      // 50: orchestrator.NodePolicy
}
var file_node_runner_proto_depIdxs = []int32{
	42, // 0: node_runner.ExecuteNodeRequest.parameters:type_name -> node_runner.ExecuteNodeRequest.ParametersEntry
	50, // 1: node_runner.ExecuteNodeRequest.policy:type_name -> orchestrator.NodePolicy
	4,  // 2: node_runner.ExecuteNodeRequest.security_context:type_name -> node_runner.SecurityContext
	6,  // 3: node_runner.ExecuteNodeRequest.runtime_config:type_name -> node_runner.RuntimeConfig
	43, // 4: node_runner.SecurityContext.environment_variables:type_name -> node_runner.SecurityContext.EnvironmentVariablesEntry
	5,  // 5: node_runner.SecurityContext.network_policy:type_name -> node_runner.NetworkPolicy
	0,  // 6: node_runner.SecurityContext.isolation_level:type_name -> node_runner.IsolationLevel
	44, // 7: node_runner.RuntimeConfig.runtime_options:type_name -> node_runner.RuntimeConfig.RuntimeOptionsEntry
	8,  // 8: node_runner.ExecuteNodeResponse.metrics:type_name -> node_runner.NodeExecutionMetrics
	12, // 9: node_runner.RegisterNodeRequest.node:type_name -> node_runner.NodeDefinition
	13, // 10: node_runner.NodeDefinition.input_schema:type_name -> node_runner.NodeSchema
	13, // 11: node_runner.NodeDefinition.output_schema:type_name -> node_runner.NodeSchema
	14, // 12: node_runner.NodeDefinition.capabilities:type_name -> node_runner.NodeCapabilities
	45, // 13: node_runner.NodeSchema.field_descriptions:type_name -> node_runner.NodeSchema.FieldDescriptionsEntry
	15, // 14: node_runner.NodeCapabilities.resource_requirements:type_name -> node_runner.ResourceRequirements
	12, // 15: node_runner.ListNodesResponse.nodes:type_name -> node_runner.NodeDefinition
	12, // 16: node_runner.GetNodeSchemaResponse.node:type_name -> node_runner.NodeDefinition
	24, // 17: node_runner.InstallPluginRequest.plugin:type_name -> node_runner.Plugin
	12, // 18: node_runner.Plugin.nodes:type_name -> node_runner.NodeDefinition
	25, // 19: node_runner.Plugin.manifest:type_name -> node_runner.PluginManifest
	26, // 20: node_runner.PluginManifest.permissions:type_name -> node_runner.PluginPermissions
	46, // 21: node_runner.PluginManifest.metadata:type_name -> node_runner.PluginManifest.MetadataEntry
	24, // 22: node_runner.ValidatePluginRequest.plugin:type_name -> node_runner.Plugin
	32, // 23: node_runner.ValidatePluginResponse.security_assessment:type_name -> node_runner.SecurityAssessment
	1,  // 24: node_runner.SecurityAssessment.security_level:type_name -> node_runner.SecurityLevel
	35, // 25: node_runner.GetRunnerStatusResponse.status:type_name -> node_runner.RunnerStatus
	2,  // 26: node_runner.RunnerStatus.state:type_name -> node_runner.RunnerState
	36, // 27: node_runner.RunnerStatus.resource_usage:type_name -> node_runner.ResourceUsage
	47, // 28: node_runner.RunnerStatus.capabilities:type_name -> node_runner.RunnerStatus.CapabilitiesEntry
	38, // 29: node_runner.UpdateSecurityPolicyRequest.policy:type_name -> node_runner.SecurityPolicy
	0,  // 30: node_runner.SecurityPolicy.default_isolation:type_name -> node_runner.IsolationLevel
	5,  // 31: node_runner.SecurityPolicy.default_network_policy:type_name -> node_runner.NetworkPolicy
	48, // 32: node_runner.SecurityPolicy.environment_whitelist:type_name -> node_runner.SecurityPolicy.EnvironmentWhitelistEntry
	49, // 33: node_runner.HealthResponse.details:type_name -> node_runner.HealthResponse.DetailsEntry
	3,  // 34: node_runner.NodeRunnerService.ExecuteNode:input_type -> node_runner.ExecuteNodeRequest
	9,  // 35: node_runner.NodeRunnerService.CancelNodeExecution:input_type -> node_runner.CancelNodeExecutionRequest
	11, // 36: node_runner.NodeRunnerService.RegisterNode:input_type -> node_runner.RegisterNodeRequest
	17, // 37: node_runner.NodeRunnerService.UnregisterNode:input_type -> node_runner.UnregisterNodeRequest
	19, // 38: node_runner.NodeRunnerService.ListNodes:input_type -> node_runner.ListNodesRequest
	21, // 39: node_runner.NodeRunnerService.GetNodeSchema:input_type -> node_runner.GetNodeSchemaRequest
	23, // 40: node_runner.NodeRunnerService.InstallPlugin:input_type -> node_runner.InstallPluginRequest
	28, // 41: node_runner.NodeRunnerService.UninstallPlugin:input_type -> node_runner.UninstallPluginRequest
	30, // 42: node_runner.NodeRunnerService.ValidatePlugin:input_type -> node_runner.ValidatePluginRequest
	33, // 43: node_runner.NodeRunnerService.GetRunnerStatus:input_type -> node_runner.GetRunnerStatusRequest
	37, // 44: node_runner.NodeRunnerService.UpdateSecurityPolicy:input_type -> node_runner.UpdateSecurityPolicyRequest
	40, // 45: node_runner.NodeRunnerService.Health:input_type -> node_runner.HealthRequest
	7,  // 46: node_runner.NodeRunnerService.ExecuteNode:output_type -> node_runner.ExecuteNodeResponse
	10, // 47: node_runner.NodeRunnerService.CancelNodeExecution:output_type -> node_runner.CancelNodeExecutionResponse
	16, // 48: node_runner.NodeRunnerService.RegisterNode:output_type -> node_runner.RegisterNodeResponse
	18, // 49: node_runner.NodeRunnerService.UnregisterNode:output_type -> node_runner.UnregisterNodeResponse
	20, // 50: node_runner.NodeRunnerService.ListNodes:output_type -> node_runner.ListNodesResponse
	22, // 51: node_runner.NodeRunnerService.GetNodeSchema:output_type -> node_runner.GetNodeSchemaResponse
	27, // 52: node_runner.NodeRunnerService.InstallPlugin:output_type -> node_runner.InstallPluginResponse
	29, // 53: node_runner.NodeRunnerService.UninstallPlugin:output_type -> node_runner.UninstallPluginResponse
	31, // 54: node_runner.NodeRunnerService.ValidatePlugin:output_type -> node_runner.ValidatePluginResponse
	34, // 55: node_runner.NodeRunnerService.GetRunnerStatus:output_type -> node_runner.GetRunnerStatusResponse
	39, // 56: node_runner.NodeRunnerService.UpdateSecurityPolicy:output_type -> node_runner.UpdateSecurityPolicyResponse
	41, // 57: node_runner.NodeRunnerService.Health:output_type -> node_runner.HealthResponse
	46, // [46:58] is the sub-list for method output_type
	34, // [34:46] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_node_runner_proto_init() }
func file_node_runner_proto_init() {
	if File_node_runner_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_node_runner_proto_rawDesc), len(file_node_runner_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_node_runner_proto_goTypes,
		DependencyIndexes: file_node_runner_proto_depIdxs,
		EnumInfos:         file_node_runner_proto_enumTypes,
		MessageInfos:      file_node_runner_proto_msgTypes,
	}.Build()
	File_node_runner_proto = out.File
	file_node_runner_proto_goTypes = nil
	file_node_runner_proto_depIdxs = nil
}
