// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=.js"
// @generated from file engine.proto (package engine, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CancelExecutionRequest, CancelExecutionResponse, GetExecutionStatusRequest, GetExecutionStatusResponse, GetResourceUsageRequest, GetResourceUsageResponse, HealthRequest, HealthResponse, ListActiveExecutionsRequest, ListActiveExecutionsResponse, RunWorkflowRequest, RunWorkflowResponse, StepDoneRequest, StepDoneResponse, StepExecRequest, StepExecResponse, UpdateRateLimitsRequest, UpdateRateLimitsResponse } from "./engine_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Engine service for workflow execution management
 *
 * @generated from service engine.EngineService
 */
export const EngineService = {
  typeName: "engine.EngineService",
  methods: {
    /**
     * Execution Management
     *
     * @generated from rpc engine.EngineService.RunWorkflow
     */
    runWorkflow: {
      name: "RunWorkflow",
      I: RunWorkflowRequest,
      O: RunWorkflowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc engine.EngineService.StepExec
     */
    stepExec: {
      name: "StepExec",
      I: StepExecRequest,
      O: StepExecResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc engine.EngineService.StepDone
     */
    stepDone: {
      name: "StepDone",
      I: StepDoneRequest,
      O: StepDoneResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc engine.EngineService.CancelExecution
     */
    cancelExecution: {
      name: "CancelExecution",
      I: CancelExecutionRequest,
      O: CancelExecutionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Status and Monitoring
     *
     * @generated from rpc engine.EngineService.GetExecutionStatus
     */
    getExecutionStatus: {
      name: "GetExecutionStatus",
      I: GetExecutionStatusRequest,
      O: GetExecutionStatusResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc engine.EngineService.ListActiveExecutions
     */
    listActiveExecutions: {
      name: "ListActiveExecutions",
      I: ListActiveExecutionsRequest,
      O: ListActiveExecutionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Resource Management
     *
     * @generated from rpc engine.EngineService.GetResourceUsage
     */
    getResourceUsage: {
      name: "GetResourceUsage",
      I: GetResourceUsageRequest,
      O: GetResourceUsageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc engine.EngineService.UpdateRateLimits
     */
    updateRateLimits: {
      name: "UpdateRateLimits",
      I: UpdateRateLimitsRequest,
      O: UpdateRateLimitsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Health Check
     *
     * @generated from rpc engine.EngineService.Health
     */
    health: {
      name: "Health",
      I: HealthRequest,
      O: HealthResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

