// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: engine.proto

package engine

import (
	orchestrator "./proto/orchestrator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Workflow      *orchestrator.Workflow `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Context       map[string]string      `protobuf:"bytes,3,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TriggerData   string                 `protobuf:"bytes,4,opt,name=trigger_data,json=triggerData,proto3" json:"trigger_data,omitempty"`
	TenantId      string                 `protobuf:"bytes,5,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Config        *ExecutionConfig       `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunWorkflowRequest) Reset() {
	*x = RunWorkflowRequest{}
	mi := &file_engine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunWorkflowRequest) ProtoMessage() {}

func (x *RunWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunWorkflowRequest.ProtoReflect.Descriptor instead.
func (*RunWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{0}
}

func (x *RunWorkflowRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *RunWorkflowRequest) GetWorkflow() *orchestrator.Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *RunWorkflowRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *RunWorkflowRequest) GetTriggerData() string {
	if x != nil {
		return x.TriggerData
	}
	return ""
}

func (x *RunWorkflowRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *RunWorkflowRequest) GetConfig() *ExecutionConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ExecutionConfig struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	TimeoutSeconds          int32                  `protobuf:"varint,1,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	MaxRetries              int32                  `protobuf:"varint,2,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	EnableParallelExecution bool                   `protobuf:"varint,3,opt,name=enable_parallel_execution,json=enableParallelExecution,proto3" json:"enable_parallel_execution,omitempty"`
	EnvironmentVariables    map[string]string      `protobuf:"bytes,4,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ResourceLimits          *ResourceLimits        `protobuf:"bytes,5,opt,name=resource_limits,json=resourceLimits,proto3" json:"resource_limits,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ExecutionConfig) Reset() {
	*x = ExecutionConfig{}
	mi := &file_engine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionConfig) ProtoMessage() {}

func (x *ExecutionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionConfig.ProtoReflect.Descriptor instead.
func (*ExecutionConfig) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{1}
}

func (x *ExecutionConfig) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *ExecutionConfig) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *ExecutionConfig) GetEnableParallelExecution() bool {
	if x != nil {
		return x.EnableParallelExecution
	}
	return false
}

func (x *ExecutionConfig) GetEnvironmentVariables() map[string]string {
	if x != nil {
		return x.EnvironmentVariables
	}
	return nil
}

func (x *ExecutionConfig) GetResourceLimits() *ResourceLimits {
	if x != nil {
		return x.ResourceLimits
	}
	return nil
}

type ResourceLimits struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	MaxMemoryBytes          int64                  `protobuf:"varint,1,opt,name=max_memory_bytes,json=maxMemoryBytes,proto3" json:"max_memory_bytes,omitempty"`
	MaxCpuMillicores        int32                  `protobuf:"varint,2,opt,name=max_cpu_millicores,json=maxCpuMillicores,proto3" json:"max_cpu_millicores,omitempty"`
	MaxExecutionTimeSeconds int32                  `protobuf:"varint,3,opt,name=max_execution_time_seconds,json=maxExecutionTimeSeconds,proto3" json:"max_execution_time_seconds,omitempty"`
	MaxNetworkRequests      int32                  `protobuf:"varint,4,opt,name=max_network_requests,json=maxNetworkRequests,proto3" json:"max_network_requests,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ResourceLimits) Reset() {
	*x = ResourceLimits{}
	mi := &file_engine_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimits) ProtoMessage() {}

func (x *ResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLimits.ProtoReflect.Descriptor instead.
func (*ResourceLimits) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceLimits) GetMaxMemoryBytes() int64 {
	if x != nil {
		return x.MaxMemoryBytes
	}
	return 0
}

func (x *ResourceLimits) GetMaxCpuMillicores() int32 {
	if x != nil {
		return x.MaxCpuMillicores
	}
	return 0
}

func (x *ResourceLimits) GetMaxExecutionTimeSeconds() int32 {
	if x != nil {
		return x.MaxExecutionTimeSeconds
	}
	return 0
}

func (x *ResourceLimits) GetMaxNetworkRequests() int32 {
	if x != nil {
		return x.MaxNetworkRequests
	}
	return 0
}

type RunWorkflowResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId    string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Success        bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage   string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ScheduledSteps []string               `protobuf:"bytes,4,rep,name=scheduled_steps,json=scheduledSteps,proto3" json:"scheduled_steps,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RunWorkflowResponse) Reset() {
	*x = RunWorkflowResponse{}
	mi := &file_engine_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunWorkflowResponse) ProtoMessage() {}

func (x *RunWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunWorkflowResponse.ProtoReflect.Descriptor instead.
func (*RunWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{3}
}

func (x *RunWorkflowResponse) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *RunWorkflowResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RunWorkflowResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *RunWorkflowResponse) GetScheduledSteps() []string {
	if x != nil {
		return x.ScheduledSteps
	}
	return nil
}

type StepExecRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ExecutionId   string                   `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	StepId        string                   `protobuf:"bytes,2,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	NodeId        string                   `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeType      string                   `protobuf:"bytes,4,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`
	Parameters    map[string]string        `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	InputData     string                   `protobuf:"bytes,6,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	Policy        *orchestrator.NodePolicy `protobuf:"bytes,7,opt,name=policy,proto3" json:"policy,omitempty"`
	TenantId      string                   `protobuf:"bytes,8,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StepExecRequest) Reset() {
	*x = StepExecRequest{}
	mi := &file_engine_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StepExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepExecRequest) ProtoMessage() {}

func (x *StepExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepExecRequest.ProtoReflect.Descriptor instead.
func (*StepExecRequest) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{4}
}

func (x *StepExecRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *StepExecRequest) GetStepId() string {
	if x != nil {
		return x.StepId
	}
	return ""
}

func (x *StepExecRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *StepExecRequest) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

func (x *StepExecRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *StepExecRequest) GetInputData() string {
	if x != nil {
		return x.InputData
	}
	return ""
}

func (x *StepExecRequest) GetPolicy() *orchestrator.NodePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *StepExecRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type StepExecResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage   string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	AssignedRunner string                 `protobuf:"bytes,3,opt,name=assigned_runner,json=assignedRunner,proto3" json:"assigned_runner,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StepExecResponse) Reset() {
	*x = StepExecResponse{}
	mi := &file_engine_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StepExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepExecResponse) ProtoMessage() {}

func (x *StepExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepExecResponse.ProtoReflect.Descriptor instead.
func (*StepExecResponse) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{5}
}

func (x *StepExecResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StepExecResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *StepExecResponse) GetAssignedRunner() string {
	if x != nil {
		return x.AssignedRunner
	}
	return ""
}

type StepDoneRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	ExecutionId   string                  `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	StepId        string                  `protobuf:"bytes,2,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	Status        orchestrator.StepStatus `protobuf:"varint,3,opt,name=status,proto3,enum=orchestrator.StepStatus" json:"status,omitempty"`
	OutputData    string                  `protobuf:"bytes,4,opt,name=output_data,json=outputData,proto3" json:"output_data,omitempty"`
	ErrorMessage  string                  `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	RetryCount    int32                   `protobuf:"varint,6,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	Metrics       *ExecutionMetrics       `protobuf:"bytes,7,opt,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StepDoneRequest) Reset() {
	*x = StepDoneRequest{}
	mi := &file_engine_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StepDoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepDoneRequest) ProtoMessage() {}

func (x *StepDoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepDoneRequest.ProtoReflect.Descriptor instead.
func (*StepDoneRequest) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{6}
}

func (x *StepDoneRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *StepDoneRequest) GetStepId() string {
	if x != nil {
		return x.StepId
	}
	return ""
}

func (x *StepDoneRequest) GetStatus() orchestrator.StepStatus {
	if x != nil {
		return x.Status
	}
	return orchestrator.StepStatus(0)
}

func (x *StepDoneRequest) GetOutputData() string {
	if x != nil {
		return x.OutputData
	}
	return ""
}

func (x *StepDoneRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *StepDoneRequest) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *StepDoneRequest) GetMetrics() *ExecutionMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type ExecutionMetrics struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ExecutionTimeMs      int64                  `protobuf:"varint,1,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	MemoryUsedBytes      int64                  `protobuf:"varint,2,opt,name=memory_used_bytes,json=memoryUsedBytes,proto3" json:"memory_used_bytes,omitempty"`
	NetworkRequestsCount int32                  `protobuf:"varint,3,opt,name=network_requests_count,json=networkRequestsCount,proto3" json:"network_requests_count,omitempty"`
	NetworkBytesSent     int64                  `protobuf:"varint,4,opt,name=network_bytes_sent,json=networkBytesSent,proto3" json:"network_bytes_sent,omitempty"`
	NetworkBytesReceived int64                  `protobuf:"varint,5,opt,name=network_bytes_received,json=networkBytesReceived,proto3" json:"network_bytes_received,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ExecutionMetrics) Reset() {
	*x = ExecutionMetrics{}
	mi := &file_engine_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionMetrics) ProtoMessage() {}

func (x *ExecutionMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionMetrics.ProtoReflect.Descriptor instead.
func (*ExecutionMetrics) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{7}
}

func (x *ExecutionMetrics) GetExecutionTimeMs() int64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

func (x *ExecutionMetrics) GetMemoryUsedBytes() int64 {
	if x != nil {
		return x.MemoryUsedBytes
	}
	return 0
}

func (x *ExecutionMetrics) GetNetworkRequestsCount() int32 {
	if x != nil {
		return x.NetworkRequestsCount
	}
	return 0
}

func (x *ExecutionMetrics) GetNetworkBytesSent() int64 {
	if x != nil {
		return x.NetworkBytesSent
	}
	return 0
}

func (x *ExecutionMetrics) GetNetworkBytesReceived() int64 {
	if x != nil {
		return x.NetworkBytesReceived
	}
	return 0
}

type StepDoneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	NextSteps     []string               `protobuf:"bytes,3,rep,name=next_steps,json=nextSteps,proto3" json:"next_steps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StepDoneResponse) Reset() {
	*x = StepDoneResponse{}
	mi := &file_engine_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StepDoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepDoneResponse) ProtoMessage() {}

func (x *StepDoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepDoneResponse.ProtoReflect.Descriptor instead.
func (*StepDoneResponse) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{8}
}

func (x *StepDoneResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StepDoneResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *StepDoneResponse) GetNextSteps() []string {
	if x != nil {
		return x.NextSteps
	}
	return nil
}

type CancelExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	TenantId      string                 `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelExecutionRequest) Reset() {
	*x = CancelExecutionRequest{}
	mi := &file_engine_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelExecutionRequest) ProtoMessage() {}

func (x *CancelExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelExecutionRequest.ProtoReflect.Descriptor instead.
func (*CancelExecutionRequest) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{9}
}

func (x *CancelExecutionRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *CancelExecutionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CancelExecutionRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type CancelExecutionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage   string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	CancelledSteps []string               `protobuf:"bytes,3,rep,name=cancelled_steps,json=cancelledSteps,proto3" json:"cancelled_steps,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CancelExecutionResponse) Reset() {
	*x = CancelExecutionResponse{}
	mi := &file_engine_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelExecutionResponse) ProtoMessage() {}

func (x *CancelExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelExecutionResponse.ProtoReflect.Descriptor instead.
func (*CancelExecutionResponse) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{10}
}

func (x *CancelExecutionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelExecutionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CancelExecutionResponse) GetCancelledSteps() []string {
	if x != nil {
		return x.CancelledSteps
	}
	return nil
}

type GetExecutionStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExecutionStatusRequest) Reset() {
	*x = GetExecutionStatusRequest{}
	mi := &file_engine_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExecutionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionStatusRequest) ProtoMessage() {}

func (x *GetExecutionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionStatusRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionStatusRequest) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{11}
}

func (x *GetExecutionStatusRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *GetExecutionStatusRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetExecutionStatusResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Status        orchestrator.ExecutionStatus  `protobuf:"varint,1,opt,name=status,proto3,enum=orchestrator.ExecutionStatus" json:"status,omitempty"`
	Steps         []*orchestrator.StepExecution `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
	Progress      *ExecutionProgress            `protobuf:"bytes,3,opt,name=progress,proto3" json:"progress,omitempty"`
	Success       bool                          `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                        `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExecutionStatusResponse) Reset() {
	*x = GetExecutionStatusResponse{}
	mi := &file_engine_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExecutionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionStatusResponse) ProtoMessage() {}

func (x *GetExecutionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionStatusResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionStatusResponse) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{12}
}

func (x *GetExecutionStatusResponse) GetStatus() orchestrator.ExecutionStatus {
	if x != nil {
		return x.Status
	}
	return orchestrator.ExecutionStatus(0)
}

func (x *GetExecutionStatusResponse) GetSteps() []*orchestrator.StepExecution {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *GetExecutionStatusResponse) GetProgress() *ExecutionProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *GetExecutionStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetExecutionStatusResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ExecutionProgress struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TotalSteps           int32                  `protobuf:"varint,1,opt,name=total_steps,json=totalSteps,proto3" json:"total_steps,omitempty"`
	CompletedSteps       int32                  `protobuf:"varint,2,opt,name=completed_steps,json=completedSteps,proto3" json:"completed_steps,omitempty"`
	FailedSteps          int32                  `protobuf:"varint,3,opt,name=failed_steps,json=failedSteps,proto3" json:"failed_steps,omitempty"`
	RunningSteps         int32                  `protobuf:"varint,4,opt,name=running_steps,json=runningSteps,proto3" json:"running_steps,omitempty"`
	PendingSteps         int32                  `protobuf:"varint,5,opt,name=pending_steps,json=pendingSteps,proto3" json:"pending_steps,omitempty"`
	CompletionPercentage float64                `protobuf:"fixed64,6,opt,name=completion_percentage,json=completionPercentage,proto3" json:"completion_percentage,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ExecutionProgress) Reset() {
	*x = ExecutionProgress{}
	mi := &file_engine_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionProgress) ProtoMessage() {}

func (x *ExecutionProgress) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionProgress.ProtoReflect.Descriptor instead.
func (*ExecutionProgress) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{13}
}

func (x *ExecutionProgress) GetTotalSteps() int32 {
	if x != nil {
		return x.TotalSteps
	}
	return 0
}

func (x *ExecutionProgress) GetCompletedSteps() int32 {
	if x != nil {
		return x.CompletedSteps
	}
	return 0
}

func (x *ExecutionProgress) GetFailedSteps() int32 {
	if x != nil {
		return x.FailedSteps
	}
	return 0
}

func (x *ExecutionProgress) GetRunningSteps() int32 {
	if x != nil {
		return x.RunningSteps
	}
	return 0
}

func (x *ExecutionProgress) GetPendingSteps() int32 {
	if x != nil {
		return x.PendingSteps
	}
	return 0
}

func (x *ExecutionProgress) GetCompletionPercentage() float64 {
	if x != nil {
		return x.CompletionPercentage
	}
	return 0
}

type ListActiveExecutionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListActiveExecutionsRequest) Reset() {
	*x = ListActiveExecutionsRequest{}
	mi := &file_engine_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActiveExecutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveExecutionsRequest) ProtoMessage() {}

func (x *ListActiveExecutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveExecutionsRequest.ProtoReflect.Descriptor instead.
func (*ListActiveExecutionsRequest) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{14}
}

func (x *ListActiveExecutionsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListActiveExecutionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListActiveExecutionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListActiveExecutionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Executions    []*ActiveExecution     `protobuf:"bytes,1,rep,name=executions,proto3" json:"executions,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListActiveExecutionsResponse) Reset() {
	*x = ListActiveExecutionsResponse{}
	mi := &file_engine_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActiveExecutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveExecutionsResponse) ProtoMessage() {}

func (x *ListActiveExecutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveExecutionsResponse.ProtoReflect.Descriptor instead.
func (*ListActiveExecutionsResponse) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{15}
}

func (x *ListActiveExecutionsResponse) GetExecutions() []*ActiveExecution {
	if x != nil {
		return x.Executions
	}
	return nil
}

func (x *ListActiveExecutionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListActiveExecutionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListActiveExecutionsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ActiveExecution struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	ExecutionId   string                       `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	WorkflowId    string                       `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Status        orchestrator.ExecutionStatus `protobuf:"varint,3,opt,name=status,proto3,enum=orchestrator.ExecutionStatus" json:"status,omitempty"`
	StartedAt     string                       `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	Progress      *ExecutionProgress           `protobuf:"bytes,5,opt,name=progress,proto3" json:"progress,omitempty"`
	ResourceUsage *ResourceUsage               `protobuf:"bytes,6,opt,name=resource_usage,json=resourceUsage,proto3" json:"resource_usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveExecution) Reset() {
	*x = ActiveExecution{}
	mi := &file_engine_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveExecution) ProtoMessage() {}

func (x *ActiveExecution) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveExecution.ProtoReflect.Descriptor instead.
func (*ActiveExecution) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{16}
}

func (x *ActiveExecution) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *ActiveExecution) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ActiveExecution) GetStatus() orchestrator.ExecutionStatus {
	if x != nil {
		return x.Status
	}
	return orchestrator.ExecutionStatus(0)
}

func (x *ActiveExecution) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *ActiveExecution) GetProgress() *ExecutionProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *ActiveExecution) GetResourceUsage() *ResourceUsage {
	if x != nil {
		return x.ResourceUsage
	}
	return nil
}

type GetResourceUsageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	ExecutionId   string                 `protobuf:"bytes,2,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"` // optional, if empty returns tenant-wide usage
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourceUsageRequest) Reset() {
	*x = GetResourceUsageRequest{}
	mi := &file_engine_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourceUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceUsageRequest) ProtoMessage() {}

func (x *GetResourceUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceUsageRequest.ProtoReflect.Descriptor instead.
func (*GetResourceUsageRequest) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{17}
}

func (x *GetResourceUsageRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetResourceUsageRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

type GetResourceUsageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Usage         *ResourceUsage         `protobuf:"bytes,1,opt,name=usage,proto3" json:"usage,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourceUsageResponse) Reset() {
	*x = GetResourceUsageResponse{}
	mi := &file_engine_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourceUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceUsageResponse) ProtoMessage() {}

func (x *GetResourceUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceUsageResponse.ProtoReflect.Descriptor instead.
func (*GetResourceUsageResponse) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{18}
}

func (x *GetResourceUsageResponse) GetUsage() *ResourceUsage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *GetResourceUsageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetResourceUsageResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ResourceUsage struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	MemoryUsedBytes       int64                  `protobuf:"varint,1,opt,name=memory_used_bytes,json=memoryUsedBytes,proto3" json:"memory_used_bytes,omitempty"`
	CpuUsedMillicores     int32                  `protobuf:"varint,2,opt,name=cpu_used_millicores,json=cpuUsedMillicores,proto3" json:"cpu_used_millicores,omitempty"`
	ActiveExecutions      int32                  `protobuf:"varint,3,opt,name=active_executions,json=activeExecutions,proto3" json:"active_executions,omitempty"`
	QueuedExecutions      int32                  `protobuf:"varint,4,opt,name=queued_executions,json=queuedExecutions,proto3" json:"queued_executions,omitempty"`
	NetworkBytesPerMinute int64                  `protobuf:"varint,5,opt,name=network_bytes_per_minute,json=networkBytesPerMinute,proto3" json:"network_bytes_per_minute,omitempty"`
	RequestsPerMinute     int32                  `protobuf:"varint,6,opt,name=requests_per_minute,json=requestsPerMinute,proto3" json:"requests_per_minute,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ResourceUsage) Reset() {
	*x = ResourceUsage{}
	mi := &file_engine_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsage) ProtoMessage() {}

func (x *ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUsage.ProtoReflect.Descriptor instead.
func (*ResourceUsage) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{19}
}

func (x *ResourceUsage) GetMemoryUsedBytes() int64 {
	if x != nil {
		return x.MemoryUsedBytes
	}
	return 0
}

func (x *ResourceUsage) GetCpuUsedMillicores() int32 {
	if x != nil {
		return x.CpuUsedMillicores
	}
	return 0
}

func (x *ResourceUsage) GetActiveExecutions() int32 {
	if x != nil {
		return x.ActiveExecutions
	}
	return 0
}

func (x *ResourceUsage) GetQueuedExecutions() int32 {
	if x != nil {
		return x.QueuedExecutions
	}
	return 0
}

func (x *ResourceUsage) GetNetworkBytesPerMinute() int64 {
	if x != nil {
		return x.NetworkBytesPerMinute
	}
	return 0
}

func (x *ResourceUsage) GetRequestsPerMinute() int32 {
	if x != nil {
		return x.RequestsPerMinute
	}
	return 0
}

type UpdateRateLimitsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Limits        *RateLimits            `protobuf:"bytes,2,opt,name=limits,proto3" json:"limits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRateLimitsRequest) Reset() {
	*x = UpdateRateLimitsRequest{}
	mi := &file_engine_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRateLimitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRateLimitsRequest) ProtoMessage() {}

func (x *UpdateRateLimitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRateLimitsRequest.ProtoReflect.Descriptor instead.
func (*UpdateRateLimitsRequest) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateRateLimitsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UpdateRateLimitsRequest) GetLimits() *RateLimits {
	if x != nil {
		return x.Limits
	}
	return nil
}

type RateLimits struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	MaxExecutionsPerMinute     int32                  `protobuf:"varint,1,opt,name=max_executions_per_minute,json=maxExecutionsPerMinute,proto3" json:"max_executions_per_minute,omitempty"`
	MaxConcurrentExecutions    int32                  `protobuf:"varint,2,opt,name=max_concurrent_executions,json=maxConcurrentExecutions,proto3" json:"max_concurrent_executions,omitempty"`
	MaxRequestsPerMinute       int32                  `protobuf:"varint,3,opt,name=max_requests_per_minute,json=maxRequestsPerMinute,proto3" json:"max_requests_per_minute,omitempty"`
	MaxBandwidthBytesPerMinute int64                  `protobuf:"varint,4,opt,name=max_bandwidth_bytes_per_minute,json=maxBandwidthBytesPerMinute,proto3" json:"max_bandwidth_bytes_per_minute,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RateLimits) Reset() {
	*x = RateLimits{}
	mi := &file_engine_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimits) ProtoMessage() {}

func (x *RateLimits) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimits.ProtoReflect.Descriptor instead.
func (*RateLimits) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{21}
}

func (x *RateLimits) GetMaxExecutionsPerMinute() int32 {
	if x != nil {
		return x.MaxExecutionsPerMinute
	}
	return 0
}

func (x *RateLimits) GetMaxConcurrentExecutions() int32 {
	if x != nil {
		return x.MaxConcurrentExecutions
	}
	return 0
}

func (x *RateLimits) GetMaxRequestsPerMinute() int32 {
	if x != nil {
		return x.MaxRequestsPerMinute
	}
	return 0
}

func (x *RateLimits) GetMaxBandwidthBytesPerMinute() int64 {
	if x != nil {
		return x.MaxBandwidthBytesPerMinute
	}
	return 0
}

type UpdateRateLimitsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRateLimitsResponse) Reset() {
	*x = UpdateRateLimitsResponse{}
	mi := &file_engine_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRateLimitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRateLimitsResponse) ProtoMessage() {}

func (x *UpdateRateLimitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRateLimitsResponse.ProtoReflect.Descriptor instead.
func (*UpdateRateLimitsResponse) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateRateLimitsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateRateLimitsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_engine_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{23}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Details       map[string]string      `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_engine_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_engine_proto_rawDescGZIP(), []int{24}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_engine_proto protoreflect.FileDescriptor

const file_engine_proto_rawDesc = "" +
	"\n" +
	"\fengine.proto\x12\x06engine\x1a\x12orchestrator.proto\"\xdb\x02\n" +
	"\x12RunWorkflowRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x122\n" +
	"\bworkflow\x18\x02 \x01(\v2\x16.orchestrator.WorkflowR\bworkflow\x12A\n" +
	"\acontext\x18\x03 \x03(\v2'.engine.RunWorkflowRequest.ContextEntryR\acontext\x12!\n" +
	"\ftrigger_data\x18\x04 \x01(\tR\vtriggerData\x12\x1b\n" +
	"\ttenant_id\x18\x05 \x01(\tR\btenantId\x12/\n" +
	"\x06config\x18\x06 \x01(\v2\x17.engine.ExecutionConfigR\x06config\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x89\x03\n" +
	"\x0fExecutionConfig\x12'\n" +
	"\x0ftimeout_seconds\x18\x01 \x01(\x05R\x0etimeoutSeconds\x12\x1f\n" +
	"\vmax_retries\x18\x02 \x01(\x05R\n" +
	"maxRetries\x12:\n" +
	"\x19enable_parallel_execution\x18\x03 \x01(\bR\x17enableParallelExecution\x12f\n" +
	"\x15environment_variables\x18\x04 \x03(\v21.engine.ExecutionConfig.EnvironmentVariablesEntryR\x14environmentVariables\x12?\n" +
	"\x0fresource_limits\x18\x05 \x01(\v2\x16.engine.ResourceLimitsR\x0eresourceLimits\x1aG\n" +
	"\x19EnvironmentVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd7\x01\n" +
	"\x0eResourceLimits\x12(\n" +
	"\x10max_memory_bytes\x18\x01 \x01(\x03R\x0emaxMemoryBytes\x12,\n" +
	"\x12max_cpu_millicores\x18\x02 \x01(\x05R\x10maxCpuMillicores\x12;\n" +
	"\x1amax_execution_time_seconds\x18\x03 \x01(\x05R\x17maxExecutionTimeSeconds\x120\n" +
	"\x14max_network_requests\x18\x04 \x01(\x05R\x12maxNetworkRequests\"\xa0\x01\n" +
	"\x13RunWorkflowResponse\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12'\n" +
	"\x0fscheduled_steps\x18\x04 \x03(\tR\x0escheduledSteps\"\xf9\x02\n" +
	"\x0fStepExecRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12\x17\n" +
	"\astep_id\x18\x02 \x01(\tR\x06stepId\x12\x17\n" +
	"\anode_id\x18\x03 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tnode_type\x18\x04 \x01(\tR\bnodeType\x12G\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v2'.engine.StepExecRequest.ParametersEntryR\n" +
	"parameters\x12\x1d\n" +
	"\n" +
	"input_data\x18\x06 \x01(\tR\tinputData\x120\n" +
	"\x06policy\x18\a \x01(\v2\x18.orchestrator.NodePolicyR\x06policy\x12\x1b\n" +
	"\ttenant_id\x18\b \x01(\tR\btenantId\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"z\n" +
	"\x10StepExecResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12'\n" +
	"\x0fassigned_runner\x18\x03 \x01(\tR\x0eassignedRunner\"\x9a\x02\n" +
	"\x0fStepDoneRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12\x17\n" +
	"\astep_id\x18\x02 \x01(\tR\x06stepId\x120\n" +
	"\x06status\x18\x03 \x01(\x0e2\x18.orchestrator.StepStatusR\x06status\x12\x1f\n" +
	"\voutput_data\x18\x04 \x01(\tR\n" +
	"outputData\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\x12\x1f\n" +
	"\vretry_count\x18\x06 \x01(\x05R\n" +
	"retryCount\x122\n" +
	"\ametrics\x18\a \x01(\v2\x18.engine.ExecutionMetricsR\ametrics\"\x84\x02\n" +
	"\x10ExecutionMetrics\x12*\n" +
	"\x11execution_time_ms\x18\x01 \x01(\x03R\x0fexecutionTimeMs\x12*\n" +
	"\x11memory_used_bytes\x18\x02 \x01(\x03R\x0fmemoryUsedBytes\x124\n" +
	"\x16network_requests_count\x18\x03 \x01(\x05R\x14networkRequestsCount\x12,\n" +
	"\x12network_bytes_sent\x18\x04 \x01(\x03R\x10networkBytesSent\x124\n" +
	"\x16network_bytes_received\x18\x05 \x01(\x03R\x14networkBytesReceived\"p\n" +
	"\x10StepDoneResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x1d\n" +
	"\n" +
	"next_steps\x18\x03 \x03(\tR\tnextSteps\"p\n" +
	"\x16CancelExecutionRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x1b\n" +
	"\ttenant_id\x18\x03 \x01(\tR\btenantId\"\x81\x01\n" +
	"\x17CancelExecutionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12'\n" +
	"\x0fcancelled_steps\x18\x03 \x03(\tR\x0ecancelledSteps\"[\n" +
	"\x19GetExecutionStatusRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\"\xfc\x01\n" +
	"\x1aGetExecutionStatusResponse\x125\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1d.orchestrator.ExecutionStatusR\x06status\x121\n" +
	"\x05steps\x18\x02 \x03(\v2\x1b.orchestrator.StepExecutionR\x05steps\x125\n" +
	"\bprogress\x18\x03 \x01(\v2\x19.engine.ExecutionProgressR\bprogress\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"\xff\x01\n" +
	"\x11ExecutionProgress\x12\x1f\n" +
	"\vtotal_steps\x18\x01 \x01(\x05R\n" +
	"totalSteps\x12'\n" +
	"\x0fcompleted_steps\x18\x02 \x01(\x05R\x0ecompletedSteps\x12!\n" +
	"\ffailed_steps\x18\x03 \x01(\x05R\vfailedSteps\x12#\n" +
	"\rrunning_steps\x18\x04 \x01(\x05R\frunningSteps\x12#\n" +
	"\rpending_steps\x18\x05 \x01(\x05R\fpendingSteps\x123\n" +
	"\x15completion_percentage\x18\x06 \x01(\x01R\x14completionPercentage\"v\n" +
	"\x1bListActiveExecutionsRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\xbe\x01\n" +
	"\x1cListActiveExecutionsResponse\x127\n" +
	"\n" +
	"executions\x18\x01 \x03(\v2\x17.engine.ActiveExecutionR\n" +
	"executions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\xa0\x02\n" +
	"\x0fActiveExecution\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x125\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1d.orchestrator.ExecutionStatusR\x06status\x12\x1d\n" +
	"\n" +
	"started_at\x18\x04 \x01(\tR\tstartedAt\x125\n" +
	"\bprogress\x18\x05 \x01(\v2\x19.engine.ExecutionProgressR\bprogress\x12<\n" +
	"\x0eresource_usage\x18\x06 \x01(\v2\x15.engine.ResourceUsageR\rresourceUsage\"Y\n" +
	"\x17GetResourceUsageRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12!\n" +
	"\fexecution_id\x18\x02 \x01(\tR\vexecutionId\"\x86\x01\n" +
	"\x18GetResourceUsageResponse\x12+\n" +
	"\x05usage\x18\x01 \x01(\v2\x15.engine.ResourceUsageR\x05usage\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"\xae\x02\n" +
	"\rResourceUsage\x12*\n" +
	"\x11memory_used_bytes\x18\x01 \x01(\x03R\x0fmemoryUsedBytes\x12.\n" +
	"\x13cpu_used_millicores\x18\x02 \x01(\x05R\x11cpuUsedMillicores\x12+\n" +
	"\x11active_executions\x18\x03 \x01(\x05R\x10activeExecutions\x12+\n" +
	"\x11queued_executions\x18\x04 \x01(\x05R\x10queuedExecutions\x127\n" +
	"\x18network_bytes_per_minute\x18\x05 \x01(\x03R\x15networkBytesPerMinute\x12.\n" +
	"\x13requests_per_minute\x18\x06 \x01(\x05R\x11requestsPerMinute\"b\n" +
	"\x17UpdateRateLimitsRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12*\n" +
	"\x06limits\x18\x02 \x01(\v2\x12.engine.RateLimitsR\x06limits\"\xfe\x01\n" +
	"\n" +
	"RateLimits\x129\n" +
	"\x19max_executions_per_minute\x18\x01 \x01(\x05R\x16maxExecutionsPerMinute\x12:\n" +
	"\x19max_concurrent_executions\x18\x02 \x01(\x05R\x17maxConcurrentExecutions\x125\n" +
	"\x17max_requests_per_minute\x18\x03 \x01(\x05R\x14maxRequestsPerMinute\x12B\n" +
	"\x1emax_bandwidth_bytes_per_minute\x18\x04 \x01(\x03R\x1amaxBandwidthBytesPerMinute\"Y\n" +
	"\x18UpdateRateLimitsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\x0f\n" +
	"\rHealthRequest\"\xa3\x01\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12=\n" +
	"\adetails\x18\x02 \x03(\v2#.engine.HealthResponse.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xd0\x05\n" +
	"\rEngineService\x12F\n" +
	"\vRunWorkflow\x12\x1a.engine.RunWorkflowRequest\x1a\x1b.engine.RunWorkflowResponse\x12=\n" +
	"\bStepExec\x12\x17.engine.StepExecRequest\x1a\x18.engine.StepExecResponse\x12=\n" +
	"\bStepDone\x12\x17.engine.StepDoneRequest\x1a\x18.engine.StepDoneResponse\x12R\n" +
	"\x0fCancelExecution\x12\x1e.engine.CancelExecutionRequest\x1a\x1f.engine.CancelExecutionResponse\x12[\n" +
	"\x12GetExecutionStatus\x12!.engine.GetExecutionStatusRequest\x1a\".engine.GetExecutionStatusResponse\x12a\n" +
	"\x14ListActiveExecutions\x12#.engine.ListActiveExecutionsRequest\x1a$.engine.ListActiveExecutionsResponse\x12U\n" +
	"\x10GetResourceUsage\x12\x1f.engine.GetResourceUsageRequest\x1a .engine.GetResourceUsageResponse\x12U\n" +
	"\x10UpdateRateLimits\x12\x1f.engine.UpdateRateLimitsRequest\x1a .engine.UpdateRateLimitsResponse\x127\n" +
	"\x06Health\x12\x15.engine.HealthRequest\x1a\x16.engine.HealthResponseB\x10Z\x0e./proto/engineb\x06proto3"

var (
	file_engine_proto_rawDescOnce sync.Once
	file_engine_proto_rawDescData []byte
)

func file_engine_proto_rawDescGZIP() []byte {
	file_engine_proto_rawDescOnce.Do(func() {
		file_engine_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_engine_proto_rawDesc), len(file_engine_proto_rawDesc)))
	})
	return file_engine_proto_rawDescData
}

var file_engine_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_engine_proto_goTypes = []any{
	(*RunWorkflowRequest)(nil),           // 0: engine.RunWorkflowRequest
	(*ExecutionConfig)(nil),              // 1: engine.ExecutionConfig
	(*ResourceLimits)(nil),               // 2: engine.ResourceLimits
	(*RunWorkflowResponse)(nil),          // 3: engine.RunWorkflowResponse
	(*StepExecRequest)(nil),              // 4: engine.StepExecRequest
	(*StepExecResponse)(nil),             // 5: engine.StepExecResponse
	(*StepDoneRequest)(nil),              // 6: engine.StepDoneRequest
	(*ExecutionMetrics)(nil),             // 7: engine.ExecutionMetrics
	(*StepDoneResponse)(nil),             // 8: engine.StepDoneResponse
	(*CancelExecutionRequest)(nil),       // 9: engine.CancelExecutionRequest
	(*CancelExecutionResponse)(nil),      // 10: engine.CancelExecutionResponse
	(*GetExecutionStatusRequest)(nil),    // 11: engine.GetExecutionStatusRequest
	(*GetExecutionStatusResponse)(nil),   // 12: engine.GetExecutionStatusResponse
	(*ExecutionProgress)(nil),            // 13: engine.ExecutionProgress
	(*ListActiveExecutionsRequest)(nil),  // 14: engine.ListActiveExecutionsRequest
	(*ListActiveExecutionsResponse)(nil), // 15: engine.ListActiveExecutionsResponse
	(*ActiveExecution)(nil),              // 16: engine.ActiveExecution
	(*GetResourceUsageRequest)(nil),      // 17: engine.GetResourceUsageRequest
	(*GetResourceUsageResponse)(nil),     // 18: engine.GetResourceUsageResponse
	(*ResourceUsage)(nil),                // 19: engine.ResourceUsage
	(*UpdateRateLimitsRequest)(nil),      // 20: engine.UpdateRateLimitsRequest
	(*RateLimits)(nil),                   // 21: engine.RateLimits
	(*UpdateRateLimitsResponse)(nil),     // 22: engine.UpdateRateLimitsResponse
	(*HealthRequest)(nil),                // 23: engine.HealthRequest
	(*HealthResponse)(nil),               // 24: engine.HealthResponse
	nil,                                  // 25: engine.RunWorkflowRequest.ContextEntry
	nil,                                  // 26: engine.ExecutionConfig.EnvironmentVariablesEntry
	nil,                                  // 27: engine.StepExecRequest.ParametersEntry
	nil,                                  // 28: engine.HealthResponse.DetailsEntry
	(*orchestrator.Workflow)(nil),        // 29: orchestrator.Workflow
	(*orchestrator.NodePolicy)(nil),      // 30: orchestrator.NodePolicy
	(orchestrator.StepStatus)(0),         // 31: orchestrator.StepStatus
	(orchestrator.ExecutionStatus)(0),    // 32: orchestrator.ExecutionStatus
	(*orchestrator.StepExecution)(nil),   // 33: orchestrator.StepExecution
}
var file_engine_proto_depIdxs = []int32{
	29, // 0: engine.RunWorkflowRequest.workflow:type_name -> orchestrator.Workflow
	25, // 1: engine.RunWorkflowRequest.context:type_name -> engine.RunWorkflowRequest.ContextEntry
	1,  // 2: engine.RunWorkflowRequest.config:type_name -> engine.ExecutionConfig
	26, // 3: engine.ExecutionConfig.environment_variables:type_name -> engine.ExecutionConfig.EnvironmentVariablesEntry
	2,  // 4: engine.ExecutionConfig.resource_limits:type_name -> engine.ResourceLimits
	27, // 5: engine.StepExecRequest.parameters:type_name -> engine.StepExecRequest.ParametersEntry
	30, // 6: engine.StepExecRequest.policy:type_name -> orchestrator.NodePolicy
	31, // 7: engine.StepDoneRequest.status:type_name -> orchestrator.StepStatus
	7,  // 8: engine.StepDoneRequest.metrics:type_name -> engine.ExecutionMetrics
	32, // 9: engine.GetExecutionStatusResponse.status:type_name -> orchestrator.ExecutionStatus
	33, // 10: engine.GetExecutionStatusResponse.steps:type_name -> orchestrator.StepExecution
	13, // 11: engine.GetExecutionStatusResponse.progress:type_name -> engine.ExecutionProgress
	16, // 12: engine.ListActiveExecutionsResponse.executions:type_name -> engine.ActiveExecution
	32, // 13: engine.ActiveExecution.status:type_name -> orchestrator.ExecutionStatus
	13, // 14: engine.ActiveExecution.progress:type_name -> engine.ExecutionProgress
	19, // 15: engine.ActiveExecution.resource_usage:type_name -> engine.ResourceUsage
	19, // 16: engine.GetResourceUsageResponse.usage:type_name -> engine.ResourceUsage
	21, // 17: engine.UpdateRateLimitsRequest.limits:type_name -> engine.RateLimits
	28, // 18: engine.HealthResponse.details:type_name -> engine.HealthResponse.DetailsEntry
	0,  // 19: engine.EngineService.RunWorkflow:input_type -> engine.RunWorkflowRequest
	4,  // 20: engine.EngineService.StepExec:input_type -> engine.StepExecRequest
	6,  // 21: engine.EngineService.StepDone:input_type -> engine.StepDoneRequest
	9,  // 22: engine.EngineService.CancelExecution:input_type -> engine.CancelExecutionRequest
	11, // 23: engine.EngineService.GetExecutionStatus:input_type -> engine.GetExecutionStatusRequest
	14, // 24: engine.EngineService.ListActiveExecutions:input_type -> engine.ListActiveExecutionsRequest
	17, // 25: engine.EngineService.GetResourceUsage:input_type -> engine.GetResourceUsageRequest
	20, // 26: engine.EngineService.UpdateRateLimits:input_type -> engine.UpdateRateLimitsRequest
	23, // 27: engine.EngineService.Health:input_type -> engine.HealthRequest
	3,  // 28: engine.EngineService.RunWorkflow:output_type -> engine.RunWorkflowResponse
	5,  // 29: engine.EngineService.StepExec:output_type -> engine.StepExecResponse
	8,  // 30: engine.EngineService.StepDone:output_type -> engine.StepDoneResponse
	10, // 31: engine.EngineService.CancelExecution:output_type -> engine.CancelExecutionResponse
	12, // 32: engine.EngineService.GetExecutionStatus:output_type -> engine.GetExecutionStatusResponse
	15, // 33: engine.EngineService.ListActiveExecutions:output_type -> engine.ListActiveExecutionsResponse
	18, // 34: engine.EngineService.GetResourceUsage:output_type -> engine.GetResourceUsageResponse
	22, // 35: engine.EngineService.UpdateRateLimits:output_type -> engine.UpdateRateLimitsResponse
	24, // 36: engine.EngineService.Health:output_type -> engine.HealthResponse
	28, // [28:37] is the sub-list for method output_type
	19, // [19:28] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_engine_proto_init() }
func file_engine_proto_init() {
	if File_engine_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_engine_proto_rawDesc), len(file_engine_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_engine_proto_goTypes,
		DependencyIndexes: file_engine_proto_depIdxs,
		MessageInfos:      file_engine_proto_msgTypes,
	}.Build()
	File_engine_proto = out.File
	file_engine_proto_goTypes = nil
	file_engine_proto_depIdxs = nil
}
