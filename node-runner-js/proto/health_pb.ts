// @generated by protoc-gen-es v2.7.0 with parameter "target=ts,import_extension=.js"
// @generated from file health.proto (package n8nwork.health.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file health.proto.
 */
export const file_health: GenFile = /*@__PURE__*/
  fileDesc("CgxoZWFsdGgucHJvdG8SEW44bndvcmsuaGVhbHRoLnYxIiUKEkhlYWx0aENoZWNrUmVxdWVzdBIPCgdzZXJ2aWNlGAEgASgJIu8BChNIZWFsdGhDaGVja1Jlc3BvbnNlEjAKBnN0YXR1cxgBIAEoDjIgLm44bndvcmsuaGVhbHRoLnYxLlNlcnZpbmdTdGF0dXMSDwoHbWVzc2FnZRgCIAEoCRItCgl0aW1lc3RhbXAYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjQKDHNlcnZpY2VfaW5mbxgEIAEoCzIeLm44bndvcmsuaGVhbHRoLnYxLlNlcnZpY2VJbmZvEjAKB2RldGFpbHMYBSADKAsyHy5uOG53b3JrLmhlYWx0aC52MS5IZWFsdGhEZXRhaWwi3AEKC1NlcnZpY2VJbmZvEgwKBG5hbWUYASABKAkSDwoHdmVyc2lvbhgCIAEoCRINCgVidWlsZBgDIAEoCRIuCgpzdGFydF90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI+CghtZXRhZGF0YRgFIAMoCzIsLm44bndvcmsuaGVhbHRoLnYxLlNlcnZpY2VJbmZvLk1ldGFkYXRhRW50cnkaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIoMCCgxIZWFsdGhEZXRhaWwSEQoJY29tcG9uZW50GAEgASgJEjAKBnN0YXR1cxgCIAEoDjIgLm44bndvcmsuaGVhbHRoLnYxLlNlcnZpbmdTdGF0dXMSDwoHbWVzc2FnZRgDIAEoCRI9CgdtZXRyaWNzGAQgAygLMiwubjhud29yay5oZWFsdGgudjEuSGVhbHRoRGV0YWlsLk1ldHJpY3NFbnRyeRIuCgpsYXN0X2NoZWNrGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBouCgxNZXRyaWNzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIoChVSZWFkaW5lc3NDaGVja1JlcXVlc3QSDwoHc2VydmljZRgBIAEoCSJzChZSZWFkaW5lc3NDaGVja1Jlc3BvbnNlEg0KBXJlYWR5GAEgASgIEg8KB21lc3NhZ2UYAiABKAkSOQoMZGVwZW5kZW5jaWVzGAMgAygLMiMubjhud29yay5oZWFsdGgudjEuRGVwZW5kZW5jeVN0YXR1cyKaAQoQRGVwZW5kZW5jeVN0YXR1cxIMCgRuYW1lGAEgASgJEgwKBHR5cGUYAiABKAkSDwoHaGVhbHRoeRgDIAEoCBIPCgdtZXNzYWdlGAQgASgJEhgKEHJlc3BvbnNlX3RpbWVfbXMYBSABKAMSLgoKbGFzdF9jaGVjaxgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiJwoUTGl2ZW5lc3NDaGVja1JlcXVlc3QSDwoHc2VydmljZRgBIAEoCSJmChVMaXZlbmVzc0NoZWNrUmVzcG9uc2USDQoFYWxpdmUYASABKAgSDwoHbWVzc2FnZRgCIAEoCRItCgl0aW1lc3RhbXAYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wKk8KDVNlcnZpbmdTdGF0dXMSCwoHVU5LTk9XThAAEgsKB1NFUlZJTkcQARIPCgtOT1RfU0VSVklORxACEhMKD1NFUlZJQ0VfVU5LTk9XThADMvoCCg1IZWFsdGhTZXJ2aWNlElYKBUNoZWNrEiUubjhud29yay5oZWFsdGgudjEuSGVhbHRoQ2hlY2tSZXF1ZXN0GiYubjhud29yay5oZWFsdGgudjEuSGVhbHRoQ2hlY2tSZXNwb25zZRJYCgVXYXRjaBIlLm44bndvcmsuaGVhbHRoLnYxLkhlYWx0aENoZWNrUmVxdWVzdBomLm44bndvcmsuaGVhbHRoLnYxLkhlYWx0aENoZWNrUmVzcG9uc2UwARJcCgVSZWFkeRIoLm44bndvcmsuaGVhbHRoLnYxLlJlYWRpbmVzc0NoZWNrUmVxdWVzdBopLm44bndvcmsuaGVhbHRoLnYxLlJlYWRpbmVzc0NoZWNrUmVzcG9uc2USWQoETGl2ZRInLm44bndvcmsuaGVhbHRoLnYxLkxpdmVuZXNzQ2hlY2tSZXF1ZXN0Gigubjhud29yay5oZWFsdGgudjEuTGl2ZW5lc3NDaGVja1Jlc3BvbnNlQj9aPWdpdGh1Yi5jb20vbjhuLXdvcmsvcHJvdG8tY29udHJhY3RzL2dlbi9nby9oZWFsdGgvdjE7aGVhbHRodjFiBnByb3RvMw", [file_google_protobuf_timestamp]);

/**
 * Health check request
 *
 * @generated from message n8nwork.health.v1.HealthCheckRequest
 */
export type HealthCheckRequest = Message<"n8nwork.health.v1.HealthCheckRequest"> & {
  /**
   * @generated from field: string service = 1;
   */
  service: string;
};

/**
 * Describes the message n8nwork.health.v1.HealthCheckRequest.
 * Use `create(HealthCheckRequestSchema)` to create a new message.
 */
export const HealthCheckRequestSchema: GenMessage<HealthCheckRequest> = /*@__PURE__*/
  messageDesc(file_health, 0);

/**
 * Health check response
 *
 * @generated from message n8nwork.health.v1.HealthCheckResponse
 */
export type HealthCheckResponse = Message<"n8nwork.health.v1.HealthCheckResponse"> & {
  /**
   * @generated from field: n8nwork.health.v1.ServingStatus status = 1;
   */
  status: ServingStatus;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: Timestamp;

  /**
   * Additional service info
   *
   * @generated from field: n8nwork.health.v1.ServiceInfo service_info = 4;
   */
  serviceInfo?: ServiceInfo;

  /**
   * Health details
   *
   * @generated from field: repeated n8nwork.health.v1.HealthDetail details = 5;
   */
  details: HealthDetail[];
};

/**
 * Describes the message n8nwork.health.v1.HealthCheckResponse.
 * Use `create(HealthCheckResponseSchema)` to create a new message.
 */
export const HealthCheckResponseSchema: GenMessage<HealthCheckResponse> = /*@__PURE__*/
  messageDesc(file_health, 1);

/**
 * Service information
 *
 * @generated from message n8nwork.health.v1.ServiceInfo
 */
export type ServiceInfo = Message<"n8nwork.health.v1.ServiceInfo"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: string build = 3;
   */
  build: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 4;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message n8nwork.health.v1.ServiceInfo.
 * Use `create(ServiceInfoSchema)` to create a new message.
 */
export const ServiceInfoSchema: GenMessage<ServiceInfo> = /*@__PURE__*/
  messageDesc(file_health, 2);

/**
 * Individual health check detail
 *
 * @generated from message n8nwork.health.v1.HealthDetail
 */
export type HealthDetail = Message<"n8nwork.health.v1.HealthDetail"> & {
  /**
   * @generated from field: string component = 1;
   */
  component: string;

  /**
   * @generated from field: n8nwork.health.v1.ServingStatus status = 2;
   */
  status: ServingStatus;

  /**
   * @generated from field: string message = 3;
   */
  message: string;

  /**
   * @generated from field: map<string, string> metrics = 4;
   */
  metrics: { [key: string]: string };

  /**
   * @generated from field: google.protobuf.Timestamp last_check = 5;
   */
  lastCheck?: Timestamp;
};

/**
 * Describes the message n8nwork.health.v1.HealthDetail.
 * Use `create(HealthDetailSchema)` to create a new message.
 */
export const HealthDetailSchema: GenMessage<HealthDetail> = /*@__PURE__*/
  messageDesc(file_health, 3);

/**
 * Readiness check request
 *
 * @generated from message n8nwork.health.v1.ReadinessCheckRequest
 */
export type ReadinessCheckRequest = Message<"n8nwork.health.v1.ReadinessCheckRequest"> & {
  /**
   * @generated from field: string service = 1;
   */
  service: string;
};

/**
 * Describes the message n8nwork.health.v1.ReadinessCheckRequest.
 * Use `create(ReadinessCheckRequestSchema)` to create a new message.
 */
export const ReadinessCheckRequestSchema: GenMessage<ReadinessCheckRequest> = /*@__PURE__*/
  messageDesc(file_health, 4);

/**
 * Readiness check response
 *
 * @generated from message n8nwork.health.v1.ReadinessCheckResponse
 */
export type ReadinessCheckResponse = Message<"n8nwork.health.v1.ReadinessCheckResponse"> & {
  /**
   * @generated from field: bool ready = 1;
   */
  ready: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: repeated n8nwork.health.v1.DependencyStatus dependencies = 3;
   */
  dependencies: DependencyStatus[];
};

/**
 * Describes the message n8nwork.health.v1.ReadinessCheckResponse.
 * Use `create(ReadinessCheckResponseSchema)` to create a new message.
 */
export const ReadinessCheckResponseSchema: GenMessage<ReadinessCheckResponse> = /*@__PURE__*/
  messageDesc(file_health, 5);

/**
 * Dependency status
 *
 * @generated from message n8nwork.health.v1.DependencyStatus
 */
export type DependencyStatus = Message<"n8nwork.health.v1.DependencyStatus"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * "database", "message_queue", "cache", "external_api"
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: bool healthy = 3;
   */
  healthy: boolean;

  /**
   * @generated from field: string message = 4;
   */
  message: string;

  /**
   * @generated from field: int64 response_time_ms = 5;
   */
  responseTimeMs: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp last_check = 6;
   */
  lastCheck?: Timestamp;
};

/**
 * Describes the message n8nwork.health.v1.DependencyStatus.
 * Use `create(DependencyStatusSchema)` to create a new message.
 */
export const DependencyStatusSchema: GenMessage<DependencyStatus> = /*@__PURE__*/
  messageDesc(file_health, 6);

/**
 * Liveness check request  
 *
 * @generated from message n8nwork.health.v1.LivenessCheckRequest
 */
export type LivenessCheckRequest = Message<"n8nwork.health.v1.LivenessCheckRequest"> & {
  /**
   * @generated from field: string service = 1;
   */
  service: string;
};

/**
 * Describes the message n8nwork.health.v1.LivenessCheckRequest.
 * Use `create(LivenessCheckRequestSchema)` to create a new message.
 */
export const LivenessCheckRequestSchema: GenMessage<LivenessCheckRequest> = /*@__PURE__*/
  messageDesc(file_health, 7);

/**
 * Liveness check response
 *
 * @generated from message n8nwork.health.v1.LivenessCheckResponse
 */
export type LivenessCheckResponse = Message<"n8nwork.health.v1.LivenessCheckResponse"> & {
  /**
   * @generated from field: bool alive = 1;
   */
  alive: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: Timestamp;
};

/**
 * Describes the message n8nwork.health.v1.LivenessCheckResponse.
 * Use `create(LivenessCheckResponseSchema)` to create a new message.
 */
export const LivenessCheckResponseSchema: GenMessage<LivenessCheckResponse> = /*@__PURE__*/
  messageDesc(file_health, 8);

/**
 * Serving status enum
 *
 * @generated from enum n8nwork.health.v1.ServingStatus
 */
export enum ServingStatus {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: SERVING = 1;
   */
  SERVING = 1,

  /**
   * @generated from enum value: NOT_SERVING = 2;
   */
  NOT_SERVING = 2,

  /**
   * @generated from enum value: SERVICE_UNKNOWN = 3;
   */
  SERVICE_UNKNOWN = 3,
}

/**
 * Describes the enum n8nwork.health.v1.ServingStatus.
 */
export const ServingStatusSchema: GenEnum<ServingStatus> = /*@__PURE__*/
  enumDesc(file_health, 0);

/**
 * Health check service for all components
 *
 * @generated from service n8nwork.health.v1.HealthService
 */
export const HealthService: GenService<{
  /**
   * Standard health check
   *
   * @generated from rpc n8nwork.health.v1.HealthService.Check
   */
  check: {
    methodKind: "unary";
    input: typeof HealthCheckRequestSchema;
    output: typeof HealthCheckResponseSchema;
  },
  /**
   * Streaming health check
   *
   * @generated from rpc n8nwork.health.v1.HealthService.Watch
   */
  watch: {
    methodKind: "server_streaming";
    input: typeof HealthCheckRequestSchema;
    output: typeof HealthCheckResponseSchema;
  },
  /**
   * Readiness check (can serve traffic)
   *
   * @generated from rpc n8nwork.health.v1.HealthService.Ready
   */
  ready: {
    methodKind: "unary";
    input: typeof ReadinessCheckRequestSchema;
    output: typeof ReadinessCheckResponseSchema;
  },
  /**
   * Liveness check (service is alive)
   *
   * @generated from rpc n8nwork.health.v1.HealthService.Live
   */
  live: {
    methodKind: "unary";
    input: typeof LivenessCheckRequestSchema;
    output: typeof LivenessCheckResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_health, 0);

