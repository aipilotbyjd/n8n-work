// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: orchestrator.proto

package orchestrator

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkflowStatus int32

const (
	WorkflowStatus_WORKFLOW_STATUS_UNKNOWN    WorkflowStatus = 0
	WorkflowStatus_WORKFLOW_STATUS_DRAFT      WorkflowStatus = 1
	WorkflowStatus_WORKFLOW_STATUS_ACTIVE     WorkflowStatus = 2
	WorkflowStatus_WORKFLOW_STATUS_INACTIVE   WorkflowStatus = 3
	WorkflowStatus_WORKFLOW_STATUS_DEPRECATED WorkflowStatus = 4
)

// Enum value maps for WorkflowStatus.
var (
	WorkflowStatus_name = map[int32]string{
		0: "WORKFLOW_STATUS_UNKNOWN",
		1: "WORKFLOW_STATUS_DRAFT",
		2: "WORKFLOW_STATUS_ACTIVE",
		3: "WORKFLOW_STATUS_INACTIVE",
		4: "WORKFLOW_STATUS_DEPRECATED",
	}
	WorkflowStatus_value = map[string]int32{
		"WORKFLOW_STATUS_UNKNOWN":    0,
		"WORKFLOW_STATUS_DRAFT":      1,
		"WORKFLOW_STATUS_ACTIVE":     2,
		"WORKFLOW_STATUS_INACTIVE":   3,
		"WORKFLOW_STATUS_DEPRECATED": 4,
	}
)

func (x WorkflowStatus) Enum() *WorkflowStatus {
	p := new(WorkflowStatus)
	*p = x
	return p
}

func (x WorkflowStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_orchestrator_proto_enumTypes[0].Descriptor()
}

func (WorkflowStatus) Type() protoreflect.EnumType {
	return &file_orchestrator_proto_enumTypes[0]
}

func (x WorkflowStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowStatus.Descriptor instead.
func (WorkflowStatus) EnumDescriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{0}
}

type ExecutionStatus int32

const (
	ExecutionStatus_EXECUTION_STATUS_UNKNOWN   ExecutionStatus = 0
	ExecutionStatus_EXECUTION_STATUS_PENDING   ExecutionStatus = 1
	ExecutionStatus_EXECUTION_STATUS_RUNNING   ExecutionStatus = 2
	ExecutionStatus_EXECUTION_STATUS_SUCCESS   ExecutionStatus = 3
	ExecutionStatus_EXECUTION_STATUS_FAILED    ExecutionStatus = 4
	ExecutionStatus_EXECUTION_STATUS_CANCELLED ExecutionStatus = 5
	ExecutionStatus_EXECUTION_STATUS_TIMEOUT   ExecutionStatus = 6
)

// Enum value maps for ExecutionStatus.
var (
	ExecutionStatus_name = map[int32]string{
		0: "EXECUTION_STATUS_UNKNOWN",
		1: "EXECUTION_STATUS_PENDING",
		2: "EXECUTION_STATUS_RUNNING",
		3: "EXECUTION_STATUS_SUCCESS",
		4: "EXECUTION_STATUS_FAILED",
		5: "EXECUTION_STATUS_CANCELLED",
		6: "EXECUTION_STATUS_TIMEOUT",
	}
	ExecutionStatus_value = map[string]int32{
		"EXECUTION_STATUS_UNKNOWN":   0,
		"EXECUTION_STATUS_PENDING":   1,
		"EXECUTION_STATUS_RUNNING":   2,
		"EXECUTION_STATUS_SUCCESS":   3,
		"EXECUTION_STATUS_FAILED":    4,
		"EXECUTION_STATUS_CANCELLED": 5,
		"EXECUTION_STATUS_TIMEOUT":   6,
	}
)

func (x ExecutionStatus) Enum() *ExecutionStatus {
	p := new(ExecutionStatus)
	*p = x
	return p
}

func (x ExecutionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_orchestrator_proto_enumTypes[1].Descriptor()
}

func (ExecutionStatus) Type() protoreflect.EnumType {
	return &file_orchestrator_proto_enumTypes[1]
}

func (x ExecutionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionStatus.Descriptor instead.
func (ExecutionStatus) EnumDescriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{1}
}

type StepStatus int32

const (
	StepStatus_STEP_STATUS_UNKNOWN   StepStatus = 0
	StepStatus_STEP_STATUS_PENDING   StepStatus = 1
	StepStatus_STEP_STATUS_RUNNING   StepStatus = 2
	StepStatus_STEP_STATUS_SUCCESS   StepStatus = 3
	StepStatus_STEP_STATUS_FAILED    StepStatus = 4
	StepStatus_STEP_STATUS_SKIPPED   StepStatus = 5
	StepStatus_STEP_STATUS_CANCELLED StepStatus = 6
)

// Enum value maps for StepStatus.
var (
	StepStatus_name = map[int32]string{
		0: "STEP_STATUS_UNKNOWN",
		1: "STEP_STATUS_PENDING",
		2: "STEP_STATUS_RUNNING",
		3: "STEP_STATUS_SUCCESS",
		4: "STEP_STATUS_FAILED",
		5: "STEP_STATUS_SKIPPED",
		6: "STEP_STATUS_CANCELLED",
	}
	StepStatus_value = map[string]int32{
		"STEP_STATUS_UNKNOWN":   0,
		"STEP_STATUS_PENDING":   1,
		"STEP_STATUS_RUNNING":   2,
		"STEP_STATUS_SUCCESS":   3,
		"STEP_STATUS_FAILED":    4,
		"STEP_STATUS_SKIPPED":   5,
		"STEP_STATUS_CANCELLED": 6,
	}
)

func (x StepStatus) Enum() *StepStatus {
	p := new(StepStatus)
	*p = x
	return p
}

func (x StepStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StepStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_orchestrator_proto_enumTypes[2].Descriptor()
}

func (StepStatus) Type() protoreflect.EnumType {
	return &file_orchestrator_proto_enumTypes[2]
}

func (x StepStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StepStatus.Descriptor instead.
func (StepStatus) EnumDescriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{2}
}

// Common types
type Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Labels        map[string]string      `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Annotations   map[string]string      `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     string                 `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId      string                 `protobuf:"bytes,5,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserId        string                 `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_orchestrator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Metadata) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Metadata) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Metadata) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Metadata) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *Metadata) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type WorkflowNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Dependencies  []string               `protobuf:"bytes,5,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	Position      *NodePosition          `protobuf:"bytes,6,opt,name=position,proto3" json:"position,omitempty"`
	Policy        *NodePolicy            `protobuf:"bytes,7,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowNode) Reset() {
	*x = WorkflowNode{}
	mi := &file_orchestrator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowNode) ProtoMessage() {}

func (x *WorkflowNode) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowNode.ProtoReflect.Descriptor instead.
func (*WorkflowNode) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{1}
}

func (x *WorkflowNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowNode) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WorkflowNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowNode) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *WorkflowNode) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *WorkflowNode) GetPosition() *NodePosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *WorkflowNode) GetPolicy() *NodePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type NodePosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodePosition) Reset() {
	*x = NodePosition{}
	mi := &file_orchestrator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePosition) ProtoMessage() {}

func (x *NodePosition) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePosition.ProtoReflect.Descriptor instead.
func (*NodePosition) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{2}
}

func (x *NodePosition) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *NodePosition) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type NodePolicy struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TimeoutSeconds int32                  `protobuf:"varint,1,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	RetryCount     int32                  `protobuf:"varint,2,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	RetryStrategy  string                 `protobuf:"bytes,3,opt,name=retry_strategy,json=retryStrategy,proto3" json:"retry_strategy,omitempty"`
	AllowedDomains []string               `protobuf:"bytes,4,rep,name=allowed_domains,json=allowedDomains,proto3" json:"allowed_domains,omitempty"`
	ResourceLimits map[string]string      `protobuf:"bytes,5,rep,name=resource_limits,json=resourceLimits,proto3" json:"resource_limits,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NodePolicy) Reset() {
	*x = NodePolicy{}
	mi := &file_orchestrator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePolicy) ProtoMessage() {}

func (x *NodePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePolicy.ProtoReflect.Descriptor instead.
func (*NodePolicy) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{3}
}

func (x *NodePolicy) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *NodePolicy) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *NodePolicy) GetRetryStrategy() string {
	if x != nil {
		return x.RetryStrategy
	}
	return ""
}

func (x *NodePolicy) GetAllowedDomains() []string {
	if x != nil {
		return x.AllowedDomains
	}
	return nil
}

func (x *NodePolicy) GetResourceLimits() map[string]string {
	if x != nil {
		return x.ResourceLimits
	}
	return nil
}

type Workflow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Nodes         []*WorkflowNode        `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges         []*WorkflowEdge        `protobuf:"bytes,5,rep,name=edges,proto3" json:"edges,omitempty"`
	Metadata      *Metadata              `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Status        WorkflowStatus         `protobuf:"varint,7,opt,name=status,proto3,enum=orchestrator.WorkflowStatus" json:"status,omitempty"`
	Version       string                 `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	mi := &file_orchestrator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{4}
}

func (x *Workflow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Workflow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workflow) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Workflow) GetNodes() []*WorkflowNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Workflow) GetEdges() []*WorkflowEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *Workflow) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Workflow) GetStatus() WorkflowStatus {
	if x != nil {
		return x.Status
	}
	return WorkflowStatus_WORKFLOW_STATUS_UNKNOWN
}

func (x *Workflow) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type WorkflowEdge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromNode      string                 `protobuf:"bytes,1,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"`
	ToNode        string                 `protobuf:"bytes,2,opt,name=to_node,json=toNode,proto3" json:"to_node,omitempty"`
	Condition     string                 `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowEdge) Reset() {
	*x = WorkflowEdge{}
	mi := &file_orchestrator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowEdge) ProtoMessage() {}

func (x *WorkflowEdge) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowEdge.ProtoReflect.Descriptor instead.
func (*WorkflowEdge) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{5}
}

func (x *WorkflowEdge) GetFromNode() string {
	if x != nil {
		return x.FromNode
	}
	return ""
}

func (x *WorkflowEdge) GetToNode() string {
	if x != nil {
		return x.ToNode
	}
	return ""
}

func (x *WorkflowEdge) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type Execution struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Status        ExecutionStatus        `protobuf:"varint,3,opt,name=status,proto3,enum=orchestrator.ExecutionStatus" json:"status,omitempty"`
	StartedAt     string                 `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt   string                 `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	Context       map[string]string      `protobuf:"bytes,6,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Steps         []*StepExecution       `protobuf:"bytes,7,rep,name=steps,proto3" json:"steps,omitempty"`
	Metadata      *Metadata              `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	TriggerData   string                 `protobuf:"bytes,9,opt,name=trigger_data,json=triggerData,proto3" json:"trigger_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Execution) Reset() {
	*x = Execution{}
	mi := &file_orchestrator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Execution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execution) ProtoMessage() {}

func (x *Execution) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execution.ProtoReflect.Descriptor instead.
func (*Execution) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{6}
}

func (x *Execution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Execution) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *Execution) GetStatus() ExecutionStatus {
	if x != nil {
		return x.Status
	}
	return ExecutionStatus_EXECUTION_STATUS_UNKNOWN
}

func (x *Execution) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *Execution) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

func (x *Execution) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Execution) GetSteps() []*StepExecution {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *Execution) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Execution) GetTriggerData() string {
	if x != nil {
		return x.TriggerData
	}
	return ""
}

type StepExecution struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StepId        string                 `protobuf:"bytes,1,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Status        StepStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=orchestrator.StepStatus" json:"status,omitempty"`
	StartedAt     string                 `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt   string                 `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	InputData     string                 `protobuf:"bytes,6,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	OutputData    string                 `protobuf:"bytes,7,opt,name=output_data,json=outputData,proto3" json:"output_data,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,8,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	RetryCount    int32                  `protobuf:"varint,9,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StepExecution) Reset() {
	*x = StepExecution{}
	mi := &file_orchestrator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StepExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepExecution) ProtoMessage() {}

func (x *StepExecution) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepExecution.ProtoReflect.Descriptor instead.
func (*StepExecution) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{7}
}

func (x *StepExecution) GetStepId() string {
	if x != nil {
		return x.StepId
	}
	return ""
}

func (x *StepExecution) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *StepExecution) GetStatus() StepStatus {
	if x != nil {
		return x.Status
	}
	return StepStatus_STEP_STATUS_UNKNOWN
}

func (x *StepExecution) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *StepExecution) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

func (x *StepExecution) GetInputData() string {
	if x != nil {
		return x.InputData
	}
	return ""
}

func (x *StepExecution) GetOutputData() string {
	if x != nil {
		return x.OutputData
	}
	return ""
}

func (x *StepExecution) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *StepExecution) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

// Request/Response messages
type CreateWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflow      *Workflow              `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWorkflowRequest) Reset() {
	*x = CreateWorkflowRequest{}
	mi := &file_orchestrator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowRequest) ProtoMessage() {}

func (x *CreateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{8}
}

func (x *CreateWorkflowRequest) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

type CreateWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflow      *Workflow              `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWorkflowResponse) Reset() {
	*x = CreateWorkflowResponse{}
	mi := &file_orchestrator_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowResponse) ProtoMessage() {}

func (x *CreateWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowResponse.ProtoReflect.Descriptor instead.
func (*CreateWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{9}
}

func (x *CreateWorkflowResponse) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *CreateWorkflowResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateWorkflowResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type GetWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowRequest) Reset() {
	*x = GetWorkflowRequest{}
	mi := &file_orchestrator_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowRequest) ProtoMessage() {}

func (x *GetWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{10}
}

func (x *GetWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *GetWorkflowRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflow      *Workflow              `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowResponse) Reset() {
	*x = GetWorkflowResponse{}
	mi := &file_orchestrator_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowResponse) ProtoMessage() {}

func (x *GetWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{11}
}

func (x *GetWorkflowResponse) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *GetWorkflowResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetWorkflowResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type UpdateWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflow      *Workflow              `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkflowRequest) Reset() {
	*x = UpdateWorkflowRequest{}
	mi := &file_orchestrator_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowRequest) ProtoMessage() {}

func (x *UpdateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateWorkflowRequest) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

type UpdateWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflow      *Workflow              `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkflowResponse) Reset() {
	*x = UpdateWorkflowResponse{}
	mi := &file_orchestrator_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowResponse) ProtoMessage() {}

func (x *UpdateWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowResponse.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateWorkflowResponse) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *UpdateWorkflowResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateWorkflowResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type DeleteWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWorkflowRequest) Reset() {
	*x = DeleteWorkflowRequest{}
	mi := &file_orchestrator_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkflowRequest) ProtoMessage() {}

func (x *DeleteWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkflowRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *DeleteWorkflowRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type DeleteWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWorkflowResponse) Reset() {
	*x = DeleteWorkflowResponse{}
	mi := &file_orchestrator_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkflowResponse) ProtoMessage() {}

func (x *DeleteWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkflowResponse.ProtoReflect.Descriptor instead.
func (*DeleteWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteWorkflowResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteWorkflowResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ListWorkflowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter        string                 `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowsRequest) Reset() {
	*x = ListWorkflowsRequest{}
	mi := &file_orchestrator_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsRequest) ProtoMessage() {}

func (x *ListWorkflowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowsRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{16}
}

func (x *ListWorkflowsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListWorkflowsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWorkflowsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListWorkflowsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListWorkflowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflows     []*Workflow            `protobuf:"bytes,1,rep,name=workflows,proto3" json:"workflows,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowsResponse) Reset() {
	*x = ListWorkflowsResponse{}
	mi := &file_orchestrator_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsResponse) ProtoMessage() {}

func (x *ListWorkflowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowsResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{17}
}

func (x *ListWorkflowsResponse) GetWorkflows() []*Workflow {
	if x != nil {
		return x.Workflows
	}
	return nil
}

func (x *ListWorkflowsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListWorkflowsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListWorkflowsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type StartExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Context       map[string]string      `protobuf:"bytes,3,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TriggerData   string                 `protobuf:"bytes,4,opt,name=trigger_data,json=triggerData,proto3" json:"trigger_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartExecutionRequest) Reset() {
	*x = StartExecutionRequest{}
	mi := &file_orchestrator_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartExecutionRequest) ProtoMessage() {}

func (x *StartExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartExecutionRequest.ProtoReflect.Descriptor instead.
func (*StartExecutionRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{18}
}

func (x *StartExecutionRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *StartExecutionRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *StartExecutionRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *StartExecutionRequest) GetTriggerData() string {
	if x != nil {
		return x.TriggerData
	}
	return ""
}

type StartExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Execution     *Execution             `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartExecutionResponse) Reset() {
	*x = StartExecutionResponse{}
	mi := &file_orchestrator_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartExecutionResponse) ProtoMessage() {}

func (x *StartExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartExecutionResponse.ProtoReflect.Descriptor instead.
func (*StartExecutionResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{19}
}

func (x *StartExecutionResponse) GetExecution() *Execution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *StartExecutionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartExecutionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type GetExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExecutionRequest) Reset() {
	*x = GetExecutionRequest{}
	mi := &file_orchestrator_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionRequest) ProtoMessage() {}

func (x *GetExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{20}
}

func (x *GetExecutionRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *GetExecutionRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Execution     *Execution             `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExecutionResponse) Reset() {
	*x = GetExecutionResponse{}
	mi := &file_orchestrator_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionResponse) ProtoMessage() {}

func (x *GetExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{21}
}

func (x *GetExecutionResponse) GetExecution() *Execution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *GetExecutionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetExecutionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type StopExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopExecutionRequest) Reset() {
	*x = StopExecutionRequest{}
	mi := &file_orchestrator_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopExecutionRequest) ProtoMessage() {}

func (x *StopExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopExecutionRequest.ProtoReflect.Descriptor instead.
func (*StopExecutionRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{22}
}

func (x *StopExecutionRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *StopExecutionRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *StopExecutionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type StopExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopExecutionResponse) Reset() {
	*x = StopExecutionResponse{}
	mi := &file_orchestrator_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopExecutionResponse) ProtoMessage() {}

func (x *StopExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopExecutionResponse.ProtoReflect.Descriptor instead.
func (*StopExecutionResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{23}
}

func (x *StopExecutionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopExecutionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ListExecutionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter        string                 `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExecutionsRequest) Reset() {
	*x = ListExecutionsRequest{}
	mi := &file_orchestrator_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExecutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExecutionsRequest) ProtoMessage() {}

func (x *ListExecutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExecutionsRequest.ProtoReflect.Descriptor instead.
func (*ListExecutionsRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{24}
}

func (x *ListExecutionsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListExecutionsRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ListExecutionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListExecutionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListExecutionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListExecutionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Executions    []*Execution           `protobuf:"bytes,1,rep,name=executions,proto3" json:"executions,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExecutionsResponse) Reset() {
	*x = ListExecutionsResponse{}
	mi := &file_orchestrator_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExecutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExecutionsResponse) ProtoMessage() {}

func (x *ListExecutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExecutionsResponse.ProtoReflect.Descriptor instead.
func (*ListExecutionsResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{25}
}

func (x *ListExecutionsResponse) GetExecutions() []*Execution {
	if x != nil {
		return x.Executions
	}
	return nil
}

func (x *ListExecutionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListExecutionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListExecutionsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type AuthenticateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to AuthMethod:
	//
	//	*AuthenticateRequest_ApiKey
	//	*AuthenticateRequest_Oauth
	//	*AuthenticateRequest_Sso
	AuthMethod    isAuthenticateRequest_AuthMethod `protobuf_oneof:"auth_method"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	mi := &file_orchestrator_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{26}
}

func (x *AuthenticateRequest) GetAuthMethod() isAuthenticateRequest_AuthMethod {
	if x != nil {
		return x.AuthMethod
	}
	return nil
}

func (x *AuthenticateRequest) GetApiKey() *ApiKeyAuth {
	if x != nil {
		if x, ok := x.AuthMethod.(*AuthenticateRequest_ApiKey); ok {
			return x.ApiKey
		}
	}
	return nil
}

func (x *AuthenticateRequest) GetOauth() *OAuthAuth {
	if x != nil {
		if x, ok := x.AuthMethod.(*AuthenticateRequest_Oauth); ok {
			return x.Oauth
		}
	}
	return nil
}

func (x *AuthenticateRequest) GetSso() *SSOAuth {
	if x != nil {
		if x, ok := x.AuthMethod.(*AuthenticateRequest_Sso); ok {
			return x.Sso
		}
	}
	return nil
}

type isAuthenticateRequest_AuthMethod interface {
	isAuthenticateRequest_AuthMethod()
}

type AuthenticateRequest_ApiKey struct {
	ApiKey *ApiKeyAuth `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3,oneof"`
}

type AuthenticateRequest_Oauth struct {
	Oauth *OAuthAuth `protobuf:"bytes,2,opt,name=oauth,proto3,oneof"`
}

type AuthenticateRequest_Sso struct {
	Sso *SSOAuth `protobuf:"bytes,3,opt,name=sso,proto3,oneof"`
}

func (*AuthenticateRequest_ApiKey) isAuthenticateRequest_AuthMethod() {}

func (*AuthenticateRequest_Oauth) isAuthenticateRequest_AuthMethod() {}

func (*AuthenticateRequest_Sso) isAuthenticateRequest_AuthMethod() {}

type ApiKeyAuth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKey        string                 `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiKeyAuth) Reset() {
	*x = ApiKeyAuth{}
	mi := &file_orchestrator_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiKeyAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeyAuth) ProtoMessage() {}

func (x *ApiKeyAuth) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeyAuth.ProtoReflect.Descriptor instead.
func (*ApiKeyAuth) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{27}
}

func (x *ApiKeyAuth) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type OAuthAuth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OAuthAuth) Reset() {
	*x = OAuthAuth{}
	mi := &file_orchestrator_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAuthAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuthAuth) ProtoMessage() {}

func (x *OAuthAuth) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuthAuth.ProtoReflect.Descriptor instead.
func (*OAuthAuth) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{28}
}

func (x *OAuthAuth) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type SSOAuth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IdToken       string                 `protobuf:"bytes,1,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	Provider      string                 `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SSOAuth) Reset() {
	*x = SSOAuth{}
	mi := &file_orchestrator_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSOAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSOAuth) ProtoMessage() {}

func (x *SSOAuth) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSOAuth.ProtoReflect.Descriptor instead.
func (*SSOAuth) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{29}
}

func (x *SSOAuth) GetIdToken() string {
	if x != nil {
		return x.IdToken
	}
	return ""
}

func (x *SSOAuth) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type AuthenticateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresIn     int64                  `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	UserInfo      *UserInfo              `protobuf:"bytes,4,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	Success       bool                   `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	mi := &file_orchestrator_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{30}
}

func (x *AuthenticateResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AuthenticateResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *AuthenticateResponse) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *AuthenticateResponse) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *AuthenticateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthenticateResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Roles         []string               `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	Permissions   map[string]string      `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_orchestrator_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{31}
}

func (x *UserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInfo) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserInfo) GetPermissions() map[string]string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type ValidateTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateTokenRequest) Reset() {
	*x = ValidateTokenRequest{}
	mi := &file_orchestrator_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTokenRequest) ProtoMessage() {}

func (x *ValidateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTokenRequest.ProtoReflect.Descriptor instead.
func (*ValidateTokenRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{32}
}

func (x *ValidateTokenRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type ValidateTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	UserInfo      *UserInfo              `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateTokenResponse) Reset() {
	*x = ValidateTokenResponse{}
	mi := &file_orchestrator_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTokenResponse) ProtoMessage() {}

func (x *ValidateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTokenResponse.ProtoReflect.Descriptor instead.
func (*ValidateTokenResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{33}
}

func (x *ValidateTokenResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateTokenResponse) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *ValidateTokenResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type GetTenantQuotasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTenantQuotasRequest) Reset() {
	*x = GetTenantQuotasRequest{}
	mi := &file_orchestrator_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTenantQuotasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantQuotasRequest) ProtoMessage() {}

func (x *GetTenantQuotasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantQuotasRequest.ProtoReflect.Descriptor instead.
func (*GetTenantQuotasRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{34}
}

func (x *GetTenantQuotasRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetTenantQuotasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quotas        *TenantQuotas          `protobuf:"bytes,1,opt,name=quotas,proto3" json:"quotas,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTenantQuotasResponse) Reset() {
	*x = GetTenantQuotasResponse{}
	mi := &file_orchestrator_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTenantQuotasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantQuotasResponse) ProtoMessage() {}

func (x *GetTenantQuotasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantQuotasResponse.ProtoReflect.Descriptor instead.
func (*GetTenantQuotasResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{35}
}

func (x *GetTenantQuotasResponse) GetQuotas() *TenantQuotas {
	if x != nil {
		return x.Quotas
	}
	return nil
}

func (x *GetTenantQuotasResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetTenantQuotasResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type TenantQuotas struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	MaxWorkflows             int32                  `protobuf:"varint,1,opt,name=max_workflows,json=maxWorkflows,proto3" json:"max_workflows,omitempty"`
	MaxExecutionsPerMinute   int32                  `protobuf:"varint,2,opt,name=max_executions_per_minute,json=maxExecutionsPerMinute,proto3" json:"max_executions_per_minute,omitempty"`
	MaxConcurrentExecutions  int32                  `protobuf:"varint,3,opt,name=max_concurrent_executions,json=maxConcurrentExecutions,proto3" json:"max_concurrent_executions,omitempty"`
	MaxStorageBytes          int64                  `protobuf:"varint,4,opt,name=max_storage_bytes,json=maxStorageBytes,proto3" json:"max_storage_bytes,omitempty"`
	MaxWebhookCallsPerMinute int32                  `protobuf:"varint,5,opt,name=max_webhook_calls_per_minute,json=maxWebhookCallsPerMinute,proto3" json:"max_webhook_calls_per_minute,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *TenantQuotas) Reset() {
	*x = TenantQuotas{}
	mi := &file_orchestrator_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TenantQuotas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantQuotas) ProtoMessage() {}

func (x *TenantQuotas) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantQuotas.ProtoReflect.Descriptor instead.
func (*TenantQuotas) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{36}
}

func (x *TenantQuotas) GetMaxWorkflows() int32 {
	if x != nil {
		return x.MaxWorkflows
	}
	return 0
}

func (x *TenantQuotas) GetMaxExecutionsPerMinute() int32 {
	if x != nil {
		return x.MaxExecutionsPerMinute
	}
	return 0
}

func (x *TenantQuotas) GetMaxConcurrentExecutions() int32 {
	if x != nil {
		return x.MaxConcurrentExecutions
	}
	return 0
}

func (x *TenantQuotas) GetMaxStorageBytes() int64 {
	if x != nil {
		return x.MaxStorageBytes
	}
	return 0
}

func (x *TenantQuotas) GetMaxWebhookCallsPerMinute() int32 {
	if x != nil {
		return x.MaxWebhookCallsPerMinute
	}
	return 0
}

type UpdateTenantQuotasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Quotas        *TenantQuotas          `protobuf:"bytes,2,opt,name=quotas,proto3" json:"quotas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTenantQuotasRequest) Reset() {
	*x = UpdateTenantQuotasRequest{}
	mi := &file_orchestrator_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTenantQuotasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTenantQuotasRequest) ProtoMessage() {}

func (x *UpdateTenantQuotasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTenantQuotasRequest.ProtoReflect.Descriptor instead.
func (*UpdateTenantQuotasRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateTenantQuotasRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UpdateTenantQuotasRequest) GetQuotas() *TenantQuotas {
	if x != nil {
		return x.Quotas
	}
	return nil
}

type UpdateTenantQuotasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTenantQuotasResponse) Reset() {
	*x = UpdateTenantQuotasResponse{}
	mi := &file_orchestrator_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTenantQuotasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTenantQuotasResponse) ProtoMessage() {}

func (x *UpdateTenantQuotasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTenantQuotasResponse.ProtoReflect.Descriptor instead.
func (*UpdateTenantQuotasResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateTenantQuotasResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateTenantQuotasResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RegisterWebhookRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	WebhookUrl    string                 `protobuf:"bytes,3,opt,name=webhook_url,json=webhookUrl,proto3" json:"webhook_url,omitempty"`
	Events        []string               `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWebhookRequest) Reset() {
	*x = RegisterWebhookRequest{}
	mi := &file_orchestrator_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWebhookRequest) ProtoMessage() {}

func (x *RegisterWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWebhookRequest.ProtoReflect.Descriptor instead.
func (*RegisterWebhookRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{39}
}

func (x *RegisterWebhookRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *RegisterWebhookRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *RegisterWebhookRequest) GetWebhookUrl() string {
	if x != nil {
		return x.WebhookUrl
	}
	return ""
}

func (x *RegisterWebhookRequest) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *RegisterWebhookRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type RegisterWebhookResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WebhookId     string                 `protobuf:"bytes,1,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWebhookResponse) Reset() {
	*x = RegisterWebhookResponse{}
	mi := &file_orchestrator_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWebhookResponse) ProtoMessage() {}

func (x *RegisterWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWebhookResponse.ProtoReflect.Descriptor instead.
func (*RegisterWebhookResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{40}
}

func (x *RegisterWebhookResponse) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *RegisterWebhookResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterWebhookResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type UnregisterWebhookRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WebhookId     string                 `protobuf:"bytes,1,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterWebhookRequest) Reset() {
	*x = UnregisterWebhookRequest{}
	mi := &file_orchestrator_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterWebhookRequest) ProtoMessage() {}

func (x *UnregisterWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterWebhookRequest.ProtoReflect.Descriptor instead.
func (*UnregisterWebhookRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{41}
}

func (x *UnregisterWebhookRequest) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *UnregisterWebhookRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type UnregisterWebhookResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterWebhookResponse) Reset() {
	*x = UnregisterWebhookResponse{}
	mi := &file_orchestrator_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterWebhookResponse) ProtoMessage() {}

func (x *UnregisterWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterWebhookResponse.ProtoReflect.Descriptor instead.
func (*UnregisterWebhookResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{42}
}

func (x *UnregisterWebhookResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnregisterWebhookResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_orchestrator_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{43}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Details       map[string]string      `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_orchestrator_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{44}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_orchestrator_proto protoreflect.FileDescriptor

const file_orchestrator_proto_rawDesc = "" +
	"\n" +
	"\x12orchestrator.proto\x12\forchestrator\"\x80\x03\n" +
	"\bMetadata\x12:\n" +
	"\x06labels\x18\x01 \x03(\v2\".orchestrator.Metadata.LabelsEntryR\x06labels\x12I\n" +
	"\vannotations\x18\x02 \x03(\v2'.orchestrator.Metadata.AnnotationsEntryR\vannotations\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\tR\tupdatedAt\x12\x1b\n" +
	"\ttenant_id\x18\x05 \x01(\tR\btenantId\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\tR\x06userId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdf\x02\n" +
	"\fWorkflowNode\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12J\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v2*.orchestrator.WorkflowNode.ParametersEntryR\n" +
	"parameters\x12\"\n" +
	"\fdependencies\x18\x05 \x03(\tR\fdependencies\x126\n" +
	"\bposition\x18\x06 \x01(\v2\x1a.orchestrator.NodePositionR\bposition\x120\n" +
	"\x06policy\x18\a \x01(\v2\x18.orchestrator.NodePolicyR\x06policy\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"*\n" +
	"\fNodePosition\x12\f\n" +
	"\x01x\x18\x01 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x05R\x01y\"\xc0\x02\n" +
	"\n" +
	"NodePolicy\x12'\n" +
	"\x0ftimeout_seconds\x18\x01 \x01(\x05R\x0etimeoutSeconds\x12\x1f\n" +
	"\vretry_count\x18\x02 \x01(\x05R\n" +
	"retryCount\x12%\n" +
	"\x0eretry_strategy\x18\x03 \x01(\tR\rretryStrategy\x12'\n" +
	"\x0fallowed_domains\x18\x04 \x03(\tR\x0eallowedDomains\x12U\n" +
	"\x0fresource_limits\x18\x05 \x03(\v2,.orchestrator.NodePolicy.ResourceLimitsEntryR\x0eresourceLimits\x1aA\n" +
	"\x13ResourceLimitsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb8\x02\n" +
	"\bWorkflow\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x120\n" +
	"\x05nodes\x18\x04 \x03(\v2\x1a.orchestrator.WorkflowNodeR\x05nodes\x120\n" +
	"\x05edges\x18\x05 \x03(\v2\x1a.orchestrator.WorkflowEdgeR\x05edges\x122\n" +
	"\bmetadata\x18\x06 \x01(\v2\x16.orchestrator.MetadataR\bmetadata\x124\n" +
	"\x06status\x18\a \x01(\x0e2\x1c.orchestrator.WorkflowStatusR\x06status\x12\x18\n" +
	"\aversion\x18\b \x01(\tR\aversion\"b\n" +
	"\fWorkflowEdge\x12\x1b\n" +
	"\tfrom_node\x18\x01 \x01(\tR\bfromNode\x12\x17\n" +
	"\ato_node\x18\x02 \x01(\tR\x06toNode\x12\x1c\n" +
	"\tcondition\x18\x03 \x01(\tR\tcondition\"\xbb\x03\n" +
	"\tExecution\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x125\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1d.orchestrator.ExecutionStatusR\x06status\x12\x1d\n" +
	"\n" +
	"started_at\x18\x04 \x01(\tR\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\x05 \x01(\tR\vcompletedAt\x12>\n" +
	"\acontext\x18\x06 \x03(\v2$.orchestrator.Execution.ContextEntryR\acontext\x121\n" +
	"\x05steps\x18\a \x03(\v2\x1b.orchestrator.StepExecutionR\x05steps\x122\n" +
	"\bmetadata\x18\b \x01(\v2\x16.orchestrator.MetadataR\bmetadata\x12!\n" +
	"\ftrigger_data\x18\t \x01(\tR\vtriggerData\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbb\x02\n" +
	"\rStepExecution\x12\x17\n" +
	"\astep_id\x18\x01 \x01(\tR\x06stepId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x120\n" +
	"\x06status\x18\x03 \x01(\x0e2\x18.orchestrator.StepStatusR\x06status\x12\x1d\n" +
	"\n" +
	"started_at\x18\x04 \x01(\tR\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\x05 \x01(\tR\vcompletedAt\x12\x1d\n" +
	"\n" +
	"input_data\x18\x06 \x01(\tR\tinputData\x12\x1f\n" +
	"\voutput_data\x18\a \x01(\tR\n" +
	"outputData\x12#\n" +
	"\rerror_message\x18\b \x01(\tR\ferrorMessage\x12\x1f\n" +
	"\vretry_count\x18\t \x01(\x05R\n" +
	"retryCount\"K\n" +
	"\x15CreateWorkflowRequest\x122\n" +
	"\bworkflow\x18\x01 \x01(\v2\x16.orchestrator.WorkflowR\bworkflow\"\x8b\x01\n" +
	"\x16CreateWorkflowResponse\x122\n" +
	"\bworkflow\x18\x01 \x01(\v2\x16.orchestrator.WorkflowR\bworkflow\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"R\n" +
	"\x12GetWorkflowRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\"\x88\x01\n" +
	"\x13GetWorkflowResponse\x122\n" +
	"\bworkflow\x18\x01 \x01(\v2\x16.orchestrator.WorkflowR\bworkflow\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"K\n" +
	"\x15UpdateWorkflowRequest\x122\n" +
	"\bworkflow\x18\x01 \x01(\v2\x16.orchestrator.WorkflowR\bworkflow\"\x8b\x01\n" +
	"\x16UpdateWorkflowResponse\x122\n" +
	"\bworkflow\x18\x01 \x01(\v2\x16.orchestrator.WorkflowR\bworkflow\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"U\n" +
	"\x15DeleteWorkflowRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\"W\n" +
	"\x16DeleteWorkflowResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\x87\x01\n" +
	"\x14ListWorkflowsRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x04 \x01(\tR\x06filter\"\xb4\x01\n" +
	"\x15ListWorkflowsResponse\x124\n" +
	"\tworkflows\x18\x01 \x03(\v2\x16.orchestrator.WorkflowR\tworkflows\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\x80\x02\n" +
	"\x15StartExecutionRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12J\n" +
	"\acontext\x18\x03 \x03(\v20.orchestrator.StartExecutionRequest.ContextEntryR\acontext\x12!\n" +
	"\ftrigger_data\x18\x04 \x01(\tR\vtriggerData\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8e\x01\n" +
	"\x16StartExecutionResponse\x125\n" +
	"\texecution\x18\x01 \x01(\v2\x17.orchestrator.ExecutionR\texecution\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"U\n" +
	"\x13GetExecutionRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\"\x8c\x01\n" +
	"\x14GetExecutionResponse\x125\n" +
	"\texecution\x18\x01 \x01(\v2\x17.orchestrator.ExecutionR\texecution\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"n\n" +
	"\x14StopExecutionRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"V\n" +
	"\x15StopExecutionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\xa9\x01\n" +
	"\x15ListExecutionsRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x05 \x01(\tR\x06filter\"\xb8\x01\n" +
	"\x16ListExecutionsResponse\x127\n" +
	"\n" +
	"executions\x18\x01 \x03(\v2\x17.orchestrator.ExecutionR\n" +
	"executions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\xb5\x01\n" +
	"\x13AuthenticateRequest\x123\n" +
	"\aapi_key\x18\x01 \x01(\v2\x18.orchestrator.ApiKeyAuthH\x00R\x06apiKey\x12/\n" +
	"\x05oauth\x18\x02 \x01(\v2\x17.orchestrator.OAuthAuthH\x00R\x05oauth\x12)\n" +
	"\x03sso\x18\x03 \x01(\v2\x15.orchestrator.SSOAuthH\x00R\x03ssoB\r\n" +
	"\vauth_method\"%\n" +
	"\n" +
	"ApiKeyAuth\x12\x17\n" +
	"\aapi_key\x18\x01 \x01(\tR\x06apiKey\".\n" +
	"\tOAuthAuth\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\"@\n" +
	"\aSSOAuth\x12\x19\n" +
	"\bid_token\x18\x01 \x01(\tR\aidToken\x12\x1a\n" +
	"\bprovider\x18\x02 \x01(\tR\bprovider\"\xf1\x01\n" +
	"\x14AuthenticateResponse\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12#\n" +
	"\rrefresh_token\x18\x02 \x01(\tR\frefreshToken\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x03 \x01(\x03R\texpiresIn\x123\n" +
	"\tuser_info\x18\x04 \x01(\v2\x16.orchestrator.UserInfoR\buserInfo\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\"\xf7\x01\n" +
	"\bUserInfo\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x14\n" +
	"\x05roles\x18\x04 \x03(\tR\x05roles\x12I\n" +
	"\vpermissions\x18\x05 \x03(\v2'.orchestrator.UserInfo.PermissionsEntryR\vpermissions\x1a>\n" +
	"\x10PermissionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"9\n" +
	"\x14ValidateTokenRequest\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\"\x87\x01\n" +
	"\x15ValidateTokenResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x123\n" +
	"\tuser_info\x18\x02 \x01(\v2\x16.orchestrator.UserInfoR\buserInfo\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"5\n" +
	"\x16GetTenantQuotasRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\"\x8c\x01\n" +
	"\x17GetTenantQuotasResponse\x122\n" +
	"\x06quotas\x18\x01 \x01(\v2\x1a.orchestrator.TenantQuotasR\x06quotas\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"\x96\x02\n" +
	"\fTenantQuotas\x12#\n" +
	"\rmax_workflows\x18\x01 \x01(\x05R\fmaxWorkflows\x129\n" +
	"\x19max_executions_per_minute\x18\x02 \x01(\x05R\x16maxExecutionsPerMinute\x12:\n" +
	"\x19max_concurrent_executions\x18\x03 \x01(\x05R\x17maxConcurrentExecutions\x12*\n" +
	"\x11max_storage_bytes\x18\x04 \x01(\x03R\x0fmaxStorageBytes\x12>\n" +
	"\x1cmax_webhook_calls_per_minute\x18\x05 \x01(\x05R\x18maxWebhookCallsPerMinute\"l\n" +
	"\x19UpdateTenantQuotasRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x122\n" +
	"\x06quotas\x18\x02 \x01(\v2\x1a.orchestrator.TenantQuotasR\x06quotas\"[\n" +
	"\x1aUpdateTenantQuotasResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\x98\x02\n" +
	"\x16RegisterWebhookRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x1f\n" +
	"\vwebhook_url\x18\x03 \x01(\tR\n" +
	"webhookUrl\x12\x16\n" +
	"\x06events\x18\x04 \x03(\tR\x06events\x12K\n" +
	"\aheaders\x18\x05 \x03(\v21.orchestrator.RegisterWebhookRequest.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"w\n" +
	"\x17RegisterWebhookResponse\x12\x1d\n" +
	"\n" +
	"webhook_id\x18\x01 \x01(\tR\twebhookId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"V\n" +
	"\x18UnregisterWebhookRequest\x12\x1d\n" +
	"\n" +
	"webhook_id\x18\x01 \x01(\tR\twebhookId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\"Z\n" +
	"\x19UnregisterWebhookResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\x0f\n" +
	"\rHealthRequest\"\xa9\x01\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12C\n" +
	"\adetails\x18\x02 \x03(\v2).orchestrator.HealthResponse.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xa2\x01\n" +
	"\x0eWorkflowStatus\x12\x1b\n" +
	"\x17WORKFLOW_STATUS_UNKNOWN\x10\x00\x12\x19\n" +
	"\x15WORKFLOW_STATUS_DRAFT\x10\x01\x12\x1a\n" +
	"\x16WORKFLOW_STATUS_ACTIVE\x10\x02\x12\x1c\n" +
	"\x18WORKFLOW_STATUS_INACTIVE\x10\x03\x12\x1e\n" +
	"\x1aWORKFLOW_STATUS_DEPRECATED\x10\x04*\xe4\x01\n" +
	"\x0fExecutionStatus\x12\x1c\n" +
	"\x18EXECUTION_STATUS_UNKNOWN\x10\x00\x12\x1c\n" +
	"\x18EXECUTION_STATUS_PENDING\x10\x01\x12\x1c\n" +
	"\x18EXECUTION_STATUS_RUNNING\x10\x02\x12\x1c\n" +
	"\x18EXECUTION_STATUS_SUCCESS\x10\x03\x12\x1b\n" +
	"\x17EXECUTION_STATUS_FAILED\x10\x04\x12\x1e\n" +
	"\x1aEXECUTION_STATUS_CANCELLED\x10\x05\x12\x1c\n" +
	"\x18EXECUTION_STATUS_TIMEOUT\x10\x06*\xbc\x01\n" +
	"\n" +
	"StepStatus\x12\x17\n" +
	"\x13STEP_STATUS_UNKNOWN\x10\x00\x12\x17\n" +
	"\x13STEP_STATUS_PENDING\x10\x01\x12\x17\n" +
	"\x13STEP_STATUS_RUNNING\x10\x02\x12\x17\n" +
	"\x13STEP_STATUS_SUCCESS\x10\x03\x12\x16\n" +
	"\x12STEP_STATUS_FAILED\x10\x04\x12\x17\n" +
	"\x13STEP_STATUS_SKIPPED\x10\x05\x12\x19\n" +
	"\x15STEP_STATUS_CANCELLED\x10\x062\xca\v\n" +
	"\x13OrchestratorService\x12[\n" +
	"\x0eCreateWorkflow\x12#.orchestrator.CreateWorkflowRequest\x1a$.orchestrator.CreateWorkflowResponse\x12R\n" +
	"\vGetWorkflow\x12 .orchestrator.GetWorkflowRequest\x1a!.orchestrator.GetWorkflowResponse\x12[\n" +
	"\x0eUpdateWorkflow\x12#.orchestrator.UpdateWorkflowRequest\x1a$.orchestrator.UpdateWorkflowResponse\x12[\n" +
	"\x0eDeleteWorkflow\x12#.orchestrator.DeleteWorkflowRequest\x1a$.orchestrator.DeleteWorkflowResponse\x12X\n" +
	"\rListWorkflows\x12\".orchestrator.ListWorkflowsRequest\x1a#.orchestrator.ListWorkflowsResponse\x12[\n" +
	"\x0eStartExecution\x12#.orchestrator.StartExecutionRequest\x1a$.orchestrator.StartExecutionResponse\x12U\n" +
	"\fGetExecution\x12!.orchestrator.GetExecutionRequest\x1a\".orchestrator.GetExecutionResponse\x12X\n" +
	"\rStopExecution\x12\".orchestrator.StopExecutionRequest\x1a#.orchestrator.StopExecutionResponse\x12[\n" +
	"\x0eListExecutions\x12#.orchestrator.ListExecutionsRequest\x1a$.orchestrator.ListExecutionsResponse\x12U\n" +
	"\fAuthenticate\x12!.orchestrator.AuthenticateRequest\x1a\".orchestrator.AuthenticateResponse\x12X\n" +
	"\rValidateToken\x12\".orchestrator.ValidateTokenRequest\x1a#.orchestrator.ValidateTokenResponse\x12^\n" +
	"\x0fGetTenantQuotas\x12$.orchestrator.GetTenantQuotasRequest\x1a%.orchestrator.GetTenantQuotasResponse\x12g\n" +
	"\x12UpdateTenantQuotas\x12'.orchestrator.UpdateTenantQuotasRequest\x1a(.orchestrator.UpdateTenantQuotasResponse\x12^\n" +
	"\x0fRegisterWebhook\x12$.orchestrator.RegisterWebhookRequest\x1a%.orchestrator.RegisterWebhookResponse\x12d\n" +
	"\x11UnregisterWebhook\x12&.orchestrator.UnregisterWebhookRequest\x1a'.orchestrator.UnregisterWebhookResponse\x12C\n" +
	"\x06Health\x12\x1b.orchestrator.HealthRequest\x1a\x1c.orchestrator.HealthResponseB\x16Z\x14./proto/orchestratorb\x06proto3"

var (
	file_orchestrator_proto_rawDescOnce sync.Once
	file_orchestrator_proto_rawDescData []byte
)

func file_orchestrator_proto_rawDescGZIP() []byte {
	file_orchestrator_proto_rawDescOnce.Do(func() {
		file_orchestrator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_orchestrator_proto_rawDesc), len(file_orchestrator_proto_rawDesc)))
	})
	return file_orchestrator_proto_rawDescData
}

var file_orchestrator_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_orchestrator_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_orchestrator_proto_goTypes = []any{
	(WorkflowStatus)(0),                // 0: orchestrator.WorkflowStatus
	(ExecutionStatus)(0),               // 1: orchestrator.ExecutionStatus
	(StepStatus)(0),                    // 2: orchestrator.StepStatus
	(*Metadata)(nil),                   // 3: orchestrator.Metadata
	(*WorkflowNode)(nil),               // 4: orchestrator.WorkflowNode
	(*NodePosition)(nil),               // 5: orchestrator.NodePosition
	(*NodePolicy)(nil),                 // 6: orchestrator.NodePolicy
	(*Workflow)(nil),                   // 7: orchestrator.Workflow
	(*WorkflowEdge)(nil),               // 8: orchestrator.WorkflowEdge
	(*Execution)(nil),                  // 9: orchestrator.Execution
	(*StepExecution)(nil),              // 10: orchestrator.StepExecution
	(*CreateWorkflowRequest)(nil),      // 11: orchestrator.CreateWorkflowRequest
	(*CreateWorkflowResponse)(nil),     // 12: orchestrator.CreateWorkflowResponse
	(*GetWorkflowRequest)(nil),         // 13: orchestrator.GetWorkflowRequest
	(*GetWorkflowResponse)(nil),        // 14: orchestrator.GetWorkflowResponse
	(*UpdateWorkflowRequest)(nil),      // 15: orchestrator.UpdateWorkflowRequest
	(*UpdateWorkflowResponse)(nil),     // 16: orchestrator.UpdateWorkflowResponse
	(*DeleteWorkflowRequest)(nil),      // 17: orchestrator.DeleteWorkflowRequest
	(*DeleteWorkflowResponse)(nil),     // 18: orchestrator.DeleteWorkflowResponse
	(*ListWorkflowsRequest)(nil),       // 19: orchestrator.ListWorkflowsRequest
	(*ListWorkflowsResponse)(nil),      // 20: orchestrator.ListWorkflowsResponse
	(*StartExecutionRequest)(nil),      // 21: orchestrator.StartExecutionRequest
	(*StartExecutionResponse)(nil),     // 22: orchestrator.StartExecutionResponse
	(*GetExecutionRequest)(nil),        // 23: orchestrator.GetExecutionRequest
	(*GetExecutionResponse)(nil),       // 24: orchestrator.GetExecutionResponse
	(*StopExecutionRequest)(nil),       // 25: orchestrator.StopExecutionRequest
	(*StopExecutionResponse)(nil),      // 26: orchestrator.StopExecutionResponse
	(*ListExecutionsRequest)(nil),      // 27: orchestrator.ListExecutionsRequest
	(*ListExecutionsResponse)(nil),     // 28: orchestrator.ListExecutionsResponse
	(*AuthenticateRequest)(nil),        // 29: orchestrator.AuthenticateRequest
	(*ApiKeyAuth)(nil),                 // 30: orchestrator.ApiKeyAuth
	(*OAuthAuth)(nil),                  // 31: orchestrator.OAuthAuth
	(*SSOAuth)(nil),                    // 32: orchestrator.SSOAuth
	(*AuthenticateResponse)(nil),       // 33: orchestrator.AuthenticateResponse
	(*UserInfo)(nil),                   // 34: orchestrator.UserInfo
	(*ValidateTokenRequest)(nil),       // 35: orchestrator.ValidateTokenRequest
	(*ValidateTokenResponse)(nil),      // 36: orchestrator.ValidateTokenResponse
	(*GetTenantQuotasRequest)(nil),     // 37: orchestrator.GetTenantQuotasRequest
	(*GetTenantQuotasResponse)(nil),    // 38: orchestrator.GetTenantQuotasResponse
	(*TenantQuotas)(nil),               // 39: orchestrator.TenantQuotas
	(*UpdateTenantQuotasRequest)(nil),  // 40: orchestrator.UpdateTenantQuotasRequest
	(*UpdateTenantQuotasResponse)(nil), // 41: orchestrator.UpdateTenantQuotasResponse
	(*RegisterWebhookRequest)(nil),     // 42: orchestrator.RegisterWebhookRequest
	(*RegisterWebhookResponse)(nil),    // 43: orchestrator.RegisterWebhookResponse
	(*UnregisterWebhookRequest)(nil),   // 44: orchestrator.UnregisterWebhookRequest
	(*UnregisterWebhookResponse)(nil),  // 45: orchestrator.UnregisterWebhookResponse
	(*HealthRequest)(nil),              // 46: orchestrator.HealthRequest
	(*HealthResponse)(nil),             // 47: orchestrator.HealthResponse
	nil,                                // 48: orchestrator.Metadata.LabelsEntry
	nil,                                // 49: orchestrator.Metadata.AnnotationsEntry
	nil,                                // 50: orchestrator.WorkflowNode.ParametersEntry
	nil,                                // 51: orchestrator.NodePolicy.ResourceLimitsEntry
	nil,                                // 52: orchestrator.Execution.ContextEntry
	nil,                                // 53: orchestrator.StartExecutionRequest.ContextEntry
	nil,                                // 54: orchestrator.UserInfo.PermissionsEntry
	nil,                                // 55: orchestrator.RegisterWebhookRequest.HeadersEntry
	nil,                                // 56: orchestrator.HealthResponse.DetailsEntry
}
var file_orchestrator_proto_depIdxs = []int32{
	48, // 0: orchestrator.Metadata.labels:type_name -> orchestrator.Metadata.LabelsEntry
	49, // 1: orchestrator.Metadata.annotations:type_name -> orchestrator.Metadata.AnnotationsEntry
	50, // 2: orchestrator.WorkflowNode.parameters:type_name -> orchestrator.WorkflowNode.ParametersEntry
	5,  // 3: orchestrator.WorkflowNode.position:type_name -> orchestrator.NodePosition
	6,  // 4: orchestrator.WorkflowNode.policy:type_name -> orchestrator.NodePolicy
	51, // 5: orchestrator.NodePolicy.resource_limits:type_name -> orchestrator.NodePolicy.ResourceLimitsEntry
	4,  // 6: orchestrator.Workflow.nodes:type_name -> orchestrator.WorkflowNode
	8,  // 7: orchestrator.Workflow.edges:type_name -> orchestrator.WorkflowEdge
	3,  // 8: orchestrator.Workflow.metadata:type_name -> orchestrator.Metadata
	0,  // 9: orchestrator.Workflow.status:type_name -> orchestrator.WorkflowStatus
	1,  // 10: orchestrator.Execution.status:type_name -> orchestrator.ExecutionStatus
	52, // 11: orchestrator.Execution.context:type_name -> orchestrator.Execution.ContextEntry
	10, // 12: orchestrator.Execution.steps:type_name -> orchestrator.StepExecution
	3,  // 13: orchestrator.Execution.metadata:type_name -> orchestrator.Metadata
	2,  // 14: orchestrator.StepExecution.status:type_name -> orchestrator.StepStatus
	7,  // 15: orchestrator.CreateWorkflowRequest.workflow:type_name -> orchestrator.Workflow
	7,  // 16: orchestrator.CreateWorkflowResponse.workflow:type_name -> orchestrator.Workflow
	7,  // 17: orchestrator.GetWorkflowResponse.workflow:type_name -> orchestrator.Workflow
	7,  // 18: orchestrator.UpdateWorkflowRequest.workflow:type_name -> orchestrator.Workflow
	7,  // 19: orchestrator.UpdateWorkflowResponse.workflow:type_name -> orchestrator.Workflow
	7,  // 20: orchestrator.ListWorkflowsResponse.workflows:type_name -> orchestrator.Workflow
	53, // 21: orchestrator.StartExecutionRequest.context:type_name -> orchestrator.StartExecutionRequest.ContextEntry
	9,  // 22: orchestrator.StartExecutionResponse.execution:type_name -> orchestrator.Execution
	9,  // 23: orchestrator.GetExecutionResponse.execution:type_name -> orchestrator.Execution
	9,  // 24: orchestrator.ListExecutionsResponse.executions:type_name -> orchestrator.Execution
	30, // 25: orchestrator.AuthenticateRequest.api_key:type_name -> orchestrator.ApiKeyAuth
	31, // 26: orchestrator.AuthenticateRequest.oauth:type_name -> orchestrator.OAuthAuth
	32, // 27: orchestrator.AuthenticateRequest.sso:type_name -> orchestrator.SSOAuth
	34, // 28: orchestrator.AuthenticateResponse.user_info:type_name -> orchestrator.UserInfo
	54, // 29: orchestrator.UserInfo.permissions:type_name -> orchestrator.UserInfo.PermissionsEntry
	34, // 30: orchestrator.ValidateTokenResponse.user_info:type_name -> orchestrator.UserInfo
	39, // 31: orchestrator.GetTenantQuotasResponse.quotas:type_name -> orchestrator.TenantQuotas
	39, // 32: orchestrator.UpdateTenantQuotasRequest.quotas:type_name -> orchestrator.TenantQuotas
	55, // 33: orchestrator.RegisterWebhookRequest.headers:type_name -> orchestrator.RegisterWebhookRequest.HeadersEntry
	56, // 34: orchestrator.HealthResponse.details:type_name -> orchestrator.HealthResponse.DetailsEntry
	11, // 35: orchestrator.OrchestratorService.CreateWorkflow:input_type -> orchestrator.CreateWorkflowRequest
	13, // 36: orchestrator.OrchestratorService.GetWorkflow:input_type -> orchestrator.GetWorkflowRequest
	15, // 37: orchestrator.OrchestratorService.UpdateWorkflow:input_type -> orchestrator.UpdateWorkflowRequest
	17, // 38: orchestrator.OrchestratorService.DeleteWorkflow:input_type -> orchestrator.DeleteWorkflowRequest
	19, // 39: orchestrator.OrchestratorService.ListWorkflows:input_type -> orchestrator.ListWorkflowsRequest
	21, // 40: orchestrator.OrchestratorService.StartExecution:input_type -> orchestrator.StartExecutionRequest
	23, // 41: orchestrator.OrchestratorService.GetExecution:input_type -> orchestrator.GetExecutionRequest
	25, // 42: orchestrator.OrchestratorService.StopExecution:input_type -> orchestrator.StopExecutionRequest
	27, // 43: orchestrator.OrchestratorService.ListExecutions:input_type -> orchestrator.ListExecutionsRequest
	29, // 44: orchestrator.OrchestratorService.Authenticate:input_type -> orchestrator.AuthenticateRequest
	35, // 45: orchestrator.OrchestratorService.ValidateToken:input_type -> orchestrator.ValidateTokenRequest
	37, // 46: orchestrator.OrchestratorService.GetTenantQuotas:input_type -> orchestrator.GetTenantQuotasRequest
	40, // 47: orchestrator.OrchestratorService.UpdateTenantQuotas:input_type -> orchestrator.UpdateTenantQuotasRequest
	42, // 48: orchestrator.OrchestratorService.RegisterWebhook:input_type -> orchestrator.RegisterWebhookRequest
	44, // 49: orchestrator.OrchestratorService.UnregisterWebhook:input_type -> orchestrator.UnregisterWebhookRequest
	46, // 50: orchestrator.OrchestratorService.Health:input_type -> orchestrator.HealthRequest
	12, // 51: orchestrator.OrchestratorService.CreateWorkflow:output_type -> orchestrator.CreateWorkflowResponse
	14, // 52: orchestrator.OrchestratorService.GetWorkflow:output_type -> orchestrator.GetWorkflowResponse
	16, // 53: orchestrator.OrchestratorService.UpdateWorkflow:output_type -> orchestrator.UpdateWorkflowResponse
	18, // 54: orchestrator.OrchestratorService.DeleteWorkflow:output_type -> orchestrator.DeleteWorkflowResponse
	20, // 55: orchestrator.OrchestratorService.ListWorkflows:output_type -> orchestrator.ListWorkflowsResponse
	22, // 56: orchestrator.OrchestratorService.StartExecution:output_type -> orchestrator.StartExecutionResponse
	24, // 57: orchestrator.OrchestratorService.GetExecution:output_type -> orchestrator.GetExecutionResponse
	26, // 58: orchestrator.OrchestratorService.StopExecution:output_type -> orchestrator.StopExecutionResponse
	28, // 59: orchestrator.OrchestratorService.ListExecutions:output_type -> orchestrator.ListExecutionsResponse
	33, // 60: orchestrator.OrchestratorService.Authenticate:output_type -> orchestrator.AuthenticateResponse
	36, // 61: orchestrator.OrchestratorService.ValidateToken:output_type -> orchestrator.ValidateTokenResponse
	38, // 62: orchestrator.OrchestratorService.GetTenantQuotas:output_type -> orchestrator.GetTenantQuotasResponse
	41, // 63: orchestrator.OrchestratorService.UpdateTenantQuotas:output_type -> orchestrator.UpdateTenantQuotasResponse
	43, // 64: orchestrator.OrchestratorService.RegisterWebhook:output_type -> orchestrator.RegisterWebhookResponse
	45, // 65: orchestrator.OrchestratorService.UnregisterWebhook:output_type -> orchestrator.UnregisterWebhookResponse
	47, // 66: orchestrator.OrchestratorService.Health:output_type -> orchestrator.HealthResponse
	51, // [51:67] is the sub-list for method output_type
	35, // [35:51] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_orchestrator_proto_init() }
func file_orchestrator_proto_init() {
	if File_orchestrator_proto != nil {
		return
	}
	file_orchestrator_proto_msgTypes[26].OneofWrappers = []any{
		(*AuthenticateRequest_ApiKey)(nil),
		(*AuthenticateRequest_Oauth)(nil),
		(*AuthenticateRequest_Sso)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_orchestrator_proto_rawDesc), len(file_orchestrator_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orchestrator_proto_goTypes,
		DependencyIndexes: file_orchestrator_proto_depIdxs,
		EnumInfos:         file_orchestrator_proto_enumTypes,
		MessageInfos:      file_orchestrator_proto_msgTypes,
	}.Build()
	File_orchestrator_proto = out.File
	file_orchestrator_proto_goTypes = nil
	file_orchestrator_proto_depIdxs = nil
}
