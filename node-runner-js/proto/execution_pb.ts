// @generated by protoc-gen-es v2.7.0 with parameter "target=ts,import_extension=.js"
// @generated from file execution.proto (package n8nwork.execution.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file execution.proto.
 */
export const file_execution: GenFile = /*@__PURE__*/
  fileDesc("Cg9leGVjdXRpb24ucHJvdG8SFG44bndvcmsuZXhlY3V0aW9uLnYxInkKC1JldHJ5UG9saWN5EhQKDG1heF9hdHRlbXB0cxgBIAEoBRIQCghzdHJhdGVneRgCIAEoCRIVCg1iYXNlX2RlbGF5X21zGAMgASgDEhUKDWppdHRlcl9mYWN0b3IYBCABKAESFAoMbWF4X2RlbGF5X21zGAUgASgDIvABCgpTdGVwUG9saWN5EhIKCnRpbWVvdXRfbXMYASABKAMSNwoMcmV0cnlfcG9saWN5GAIgASgLMiEubjhud29yay5leGVjdXRpb24udjEuUmV0cnlQb2xpY3kSGQoRY29udGludWVfb25fZXJyb3IYAyABKAgSRgoLZW52aXJvbm1lbnQYBCADKAsyMS5uOG53b3JrLmV4ZWN1dGlvbi52MS5TdGVwUG9saWN5LkVudmlyb25tZW50RW50cnkaMgoQRW52aXJvbm1lbnRFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIu0BCghBcnRpZmFjdBIMCgRuYW1lGAEgASgJEgsKA3VybBgCIAEoCRIzCgpkYXRhX2NsYXNzGAMgASgOMh8ubjhud29yay5leGVjdXRpb24udjEuRGF0YUNsYXNzEg0KBWJ5dGVzGAQgASgDEhEKCW1pbWVfdHlwZRgFIAEoCRI+CghtZXRhZGF0YRgGIAMoCzIsLm44bndvcmsuZXhlY3V0aW9uLnYxLkFydGlmYWN0Lk1ldGFkYXRhRW50cnkaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIsIBCgdMb2dMaW5lEi0KCXRpbWVzdGFtcBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDQoFbGV2ZWwYAiABKAkSDwoHbWVzc2FnZRgDIAEoCRI5CgZmaWVsZHMYBCADKAsyKS5uOG53b3JrLmV4ZWN1dGlvbi52MS5Mb2dMaW5lLkZpZWxkc0VudHJ5Gi0KC0ZpZWxkc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEioAIKDENhcGFiaWxpdGllcxIcChRzdXBwb3J0c19hc3luY19ub2RlcxgBIAEoCBIVCg1zdXBwb3J0c193YXNtGAIgASgIEhgKEHN1cHBvcnRzX21pY3Jvdm0YAyABKAgSHgoWYWxsb3dlZF9lZ3Jlc3NfZG9tYWlucxgEIAMoCRIiChpzdXBwb3J0ZWRfaXNvbGF0aW9uX2xldmVscxgFIAMoCRJJCgxydW50aW1lX2luZm8YBiADKAsyMy5uOG53b3JrLmV4ZWN1dGlvbi52MS5DYXBhYmlsaXRpZXMuUnVudGltZUluZm9FbnRyeRoyChBSdW50aW1lSW5mb0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEilQQKD1N0ZXBFeGVjUmVxdWVzdBIRCgl0ZW5hbnRfaWQYASABKAkSDgoGcnVuX2lkGAIgASgJEg8KB3N0ZXBfaWQYAyABKAkSEQoJbm9kZV90eXBlGAQgASgJEhIKCmlucHV0X2pzb24YBSABKAwSGAoQY3JlZGVudGlhbHNfanNvbhgGIAEoDBIwCgZwb2xpY3kYByABKAsyIC5uOG53b3JrLmV4ZWN1dGlvbi52MS5TdGVwUG9saWN5EhcKD2lkZW1wb3RlbmN5X2tleRgIIAEoCRI3Cg9pbnB1dF9hcnRpZmFjdHMYCSADKAsyHi5uOG53b3JrLmV4ZWN1dGlvbi52MS5BcnRpZmFjdBI9CgR0YWdzGAogAygLMi8ubjhud29yay5leGVjdXRpb24udjEuU3RlcEV4ZWNSZXF1ZXN0LlRhZ3NFbnRyeRIYChBub2RlX2NvbmZpZ19qc29uGAsgASgMEk4KDXRyYWNlX2NvbnRleHQYDCADKAsyNy5uOG53b3JrLmV4ZWN1dGlvbi52MS5TdGVwRXhlY1JlcXVlc3QuVHJhY2VDb250ZXh0RW50cnkaKwoJVGFnc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaMwoRVHJhY2VDb250ZXh0RW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKhBAoQU3RlcEV4ZWNSZXNwb25zZRIRCgl0ZW5hbnRfaWQYASABKAkSDgoGcnVuX2lkGAIgASgJEg8KB3N0ZXBfaWQYAyABKAkSDwoHc3VjY2VzcxgEIAEoCBITCgtvdXRwdXRfanNvbhgFIAEoDBISCgplcnJvcl9qc29uGAYgASgMEjMKCmVycm9yX2NvZGUYByABKA4yHy5uOG53b3JrLmV4ZWN1dGlvbi52MS5FcnJvckNvZGUSRAoHbWV0cmljcxgIIAMoCzIzLm44bndvcmsuZXhlY3V0aW9uLnYxLlN0ZXBFeGVjUmVzcG9uc2UuTWV0cmljc0VudHJ5EjgKEG91dHB1dF9hcnRpZmFjdHMYCSADKAsyHi5uOG53b3JrLmV4ZWN1dGlvbi52MS5BcnRpZmFjdBIrCgRsb2dzGAogAygLMh0ubjhud29yay5leGVjdXRpb24udjEuTG9nTGluZRITCgtkaWFnbm9zdGljcxgLIAEoCRIWCg5yZXRyeV9hZnRlcl9tcxgMIAEoAxIuCgpzdGFydGVkX2F0GA0gASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIwCgxjb21wbGV0ZWRfYXQYDiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGi4KDE1ldHJpY3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAE6AjgBIk8KGUdldEV4ZWN1dGlvblN0YXR1c1JlcXVlc3QSEQoJdGVuYW50X2lkGAEgASgJEg4KBnJ1bl9pZBgCIAEoCRIPCgdzdGVwX2lkGAMgASgJIvsDChpHZXRFeGVjdXRpb25TdGF0dXNSZXNwb25zZRIRCgl0ZW5hbnRfaWQYASABKAkSDgoGcnVuX2lkGAIgASgJEg8KB3N0ZXBfaWQYAyABKAkSRwoGc3RhdHVzGAQgASgOMjcubjhud29yay5leGVjdXRpb24udjEuR2V0RXhlY3V0aW9uU3RhdHVzUmVzcG9uc2UuU3RhdHVzEi4KCnVwZGF0ZWRfYXQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg8KB21lc3NhZ2UYBiABKAkSUAoIbWV0YWRhdGEYByADKAsyPi5uOG53b3JrLmV4ZWN1dGlvbi52MS5HZXRFeGVjdXRpb25TdGF0dXNSZXNwb25zZS5NZXRhZGF0YUVudHJ5Gi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKbAQoGU3RhdHVzEhYKElNUQVRVU19VTlNQRUNJRklFRBAAEhIKDlNUQVRVU19QRU5ESU5HEAESEgoOU1RBVFVTX1JVTk5JTkcQAhIUChBTVEFUVVNfQ09NUExFVEVEEAMSEQoNU1RBVFVTX0ZBSUxFRBAEEhQKEFNUQVRVU19DQU5DRUxMRUQQBRISCg5TVEFUVVNfVElNRU9VVBAGIlwKFkNhbmNlbEV4ZWN1dGlvblJlcXVlc3QSEQoJdGVuYW50X2lkGAEgASgJEg4KBnJ1bl9pZBgCIAEoCRIPCgdzdGVwX2lkGAMgASgJEg4KBnJlYXNvbhgEIAEoCSI9ChdDYW5jZWxFeGVjdXRpb25SZXNwb25zZRIRCgljYW5jZWxsZWQYASABKAgSDwoHbWVzc2FnZRgCIAEoCSIgCg1IZWFsdGhSZXF1ZXN0Eg8KB3NlcnZpY2UYASABKAkiggIKDkhlYWx0aFJlc3BvbnNlEjsKBnN0YXR1cxgBIAEoDjIrLm44bndvcmsuZXhlY3V0aW9uLnYxLkhlYWx0aFJlc3BvbnNlLlN0YXR1cxIPCgdtZXNzYWdlGAIgASgJEjgKDGNhcGFiaWxpdGllcxgDIAEoCzIiLm44bndvcmsuZXhlY3V0aW9uLnYxLkNhcGFiaWxpdGllcyJoCgZTdGF0dXMSFgoSU1RBVFVTX1VOU1BFQ0lGSUVEEAASEgoOU1RBVFVTX1NFUlZJTkcQARIWChJTVEFUVVNfTk9UX1NFUlZJTkcQAhIaChZTVEFUVVNfU0VSVklDRV9VTktOT1dOEAMq9QEKCUVycm9yQ29kZRIaChZFUlJPUl9DT0RFX1VOU1BFQ0lGSUVEEAASEwoPRVJST1JfQ09ERV9OT05FEAESGAoURVJST1JfQ09ERV9UUkFOU0lFTlQQAhIUChBFUlJPUl9DT0RFX0ZBVEFMEAMSFgoSRVJST1JfQ09ERV9USU1FT1VUEAQSGAoURVJST1JfQ09ERV9DQU5DRUxMRUQQBRIZChVFUlJPUl9DT0RFX1JBVEVfTElNSVQQBhIcChhFUlJPUl9DT0RFX0FVVEhPUklaQVRJT04QBxIcChhFUlJPUl9DT0RFX0lOVkFMSURfSU5QVVQQCCqYAQoJRGF0YUNsYXNzEhoKFkRBVEFfQ0xBU1NfVU5TUEVDSUZJRUQQABIWChJEQVRBX0NMQVNTX0dFTkVSSUMQARISCg5EQVRBX0NMQVNTX1BJSRACEhIKDkRBVEFfQ0xBU1NfUEhJEAMSFQoRREFUQV9DTEFTU19TRUNSRVQQBBIYChREQVRBX0NMQVNTX0ZJTkFOQ0lBTBAFMq4DChBFeGVjdXRpb25TZXJ2aWNlElwKC0V4ZWN1dGVTdGVwEiUubjhud29yay5leGVjdXRpb24udjEuU3RlcEV4ZWNSZXF1ZXN0GiYubjhud29yay5leGVjdXRpb24udjEuU3RlcEV4ZWNSZXNwb25zZRJ3ChJHZXRFeGVjdXRpb25TdGF0dXMSLy5uOG53b3JrLmV4ZWN1dGlvbi52MS5HZXRFeGVjdXRpb25TdGF0dXNSZXF1ZXN0GjAubjhud29yay5leGVjdXRpb24udjEuR2V0RXhlY3V0aW9uU3RhdHVzUmVzcG9uc2USbgoPQ2FuY2VsRXhlY3V0aW9uEiwubjhud29yay5leGVjdXRpb24udjEuQ2FuY2VsRXhlY3V0aW9uUmVxdWVzdBotLm44bndvcmsuZXhlY3V0aW9uLnYxLkNhbmNlbEV4ZWN1dGlvblJlc3BvbnNlElMKBkhlYWx0aBIjLm44bndvcmsuZXhlY3V0aW9uLnYxLkhlYWx0aFJlcXVlc3QaJC5uOG53b3JrLmV4ZWN1dGlvbi52MS5IZWFsdGhSZXNwb25zZUJFWkNnaXRodWIuY29tL244bi13b3JrL3Byb3RvLWNvbnRyYWN0cy9nZW4vZ28vZXhlY3V0aW9uL3YxO2V4ZWN1dGlvbnYxYgZwcm90bzM", [file_google_protobuf_timestamp, file_google_protobuf_any]);

/**
 * Retry policy configuration
 *
 * @generated from message n8nwork.execution.v1.RetryPolicy
 */
export type RetryPolicy = Message<"n8nwork.execution.v1.RetryPolicy"> & {
  /**
   * @generated from field: int32 max_attempts = 1;
   */
  maxAttempts: number;

  /**
   * "exponential", "linear", "fixed"
   *
   * @generated from field: string strategy = 2;
   */
  strategy: string;

  /**
   * @generated from field: int64 base_delay_ms = 3;
   */
  baseDelayMs: bigint;

  /**
   * @generated from field: double jitter_factor = 4;
   */
  jitterFactor: number;

  /**
   * @generated from field: int64 max_delay_ms = 5;
   */
  maxDelayMs: bigint;
};

/**
 * Describes the message n8nwork.execution.v1.RetryPolicy.
 * Use `create(RetryPolicySchema)` to create a new message.
 */
export const RetryPolicySchema: GenMessage<RetryPolicy> = /*@__PURE__*/
  messageDesc(file_execution, 0);

/**
 * Step execution policy
 *
 * @generated from message n8nwork.execution.v1.StepPolicy
 */
export type StepPolicy = Message<"n8nwork.execution.v1.StepPolicy"> & {
  /**
   * @generated from field: int64 timeout_ms = 1;
   */
  timeoutMs: bigint;

  /**
   * @generated from field: n8nwork.execution.v1.RetryPolicy retry_policy = 2;
   */
  retryPolicy?: RetryPolicy;

  /**
   * @generated from field: bool continue_on_error = 3;
   */
  continueOnError: boolean;

  /**
   * @generated from field: map<string, string> environment = 4;
   */
  environment: { [key: string]: string };
};

/**
 * Describes the message n8nwork.execution.v1.StepPolicy.
 * Use `create(StepPolicySchema)` to create a new message.
 */
export const StepPolicySchema: GenMessage<StepPolicy> = /*@__PURE__*/
  messageDesc(file_execution, 1);

/**
 * File artifact reference
 *
 * @generated from message n8nwork.execution.v1.Artifact
 */
export type Artifact = Message<"n8nwork.execution.v1.Artifact"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * @generated from field: n8nwork.execution.v1.DataClass data_class = 3;
   */
  dataClass: DataClass;

  /**
   * @generated from field: int64 bytes = 4;
   */
  bytes: bigint;

  /**
   * @generated from field: string mime_type = 5;
   */
  mimeType: string;

  /**
   * @generated from field: map<string, string> metadata = 6;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message n8nwork.execution.v1.Artifact.
 * Use `create(ArtifactSchema)` to create a new message.
 */
export const ArtifactSchema: GenMessage<Artifact> = /*@__PURE__*/
  messageDesc(file_execution, 2);

/**
 * Log line from step execution
 *
 * @generated from message n8nwork.execution.v1.LogLine
 */
export type LogLine = Message<"n8nwork.execution.v1.LogLine"> & {
  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 1;
   */
  timestamp?: Timestamp;

  /**
   * "debug", "info", "warn", "error"
   *
   * @generated from field: string level = 2;
   */
  level: string;

  /**
   * @generated from field: string message = 3;
   */
  message: string;

  /**
   * @generated from field: map<string, string> fields = 4;
   */
  fields: { [key: string]: string };
};

/**
 * Describes the message n8nwork.execution.v1.LogLine.
 * Use `create(LogLineSchema)` to create a new message.
 */
export const LogLineSchema: GenMessage<LogLine> = /*@__PURE__*/
  messageDesc(file_execution, 3);

/**
 * Runtime capabilities reported by node runner
 *
 * @generated from message n8nwork.execution.v1.Capabilities
 */
export type Capabilities = Message<"n8nwork.execution.v1.Capabilities"> & {
  /**
   * @generated from field: bool supports_async_nodes = 1;
   */
  supportsAsyncNodes: boolean;

  /**
   * @generated from field: bool supports_wasm = 2;
   */
  supportsWasm: boolean;

  /**
   * @generated from field: bool supports_microvm = 3;
   */
  supportsMicrovm: boolean;

  /**
   * @generated from field: repeated string allowed_egress_domains = 4;
   */
  allowedEgressDomains: string[];

  /**
   * @generated from field: repeated string supported_isolation_levels = 5;
   */
  supportedIsolationLevels: string[];

  /**
   * @generated from field: map<string, string> runtime_info = 6;
   */
  runtimeInfo: { [key: string]: string };
};

/**
 * Describes the message n8nwork.execution.v1.Capabilities.
 * Use `create(CapabilitiesSchema)` to create a new message.
 */
export const CapabilitiesSchema: GenMessage<Capabilities> = /*@__PURE__*/
  messageDesc(file_execution, 4);

/**
 * Step execution request
 *
 * @generated from message n8nwork.execution.v1.StepExecRequest
 */
export type StepExecRequest = Message<"n8nwork.execution.v1.StepExecRequest"> & {
  /**
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  /**
   * @generated from field: string run_id = 2;
   */
  runId: string;

  /**
   * @generated from field: string step_id = 3;
   */
  stepId: string;

  /**
   * @generated from field: string node_type = 4;
   */
  nodeType: string;

  /**
   * Input data as JSON
   *
   * @generated from field: bytes input_json = 5;
   */
  inputJson: Uint8Array;

  /**
   * Credentials as encrypted JSON
   *
   * @generated from field: bytes credentials_json = 6;
   */
  credentialsJson: Uint8Array;

  /**
   * Execution policy
   *
   * @generated from field: n8nwork.execution.v1.StepPolicy policy = 7;
   */
  policy?: StepPolicy;

  /**
   * Idempotency key for retries
   *
   * @generated from field: string idempotency_key = 8;
   */
  idempotencyKey: string;

  /**
   * Input artifacts
   *
   * @generated from field: repeated n8nwork.execution.v1.Artifact input_artifacts = 9;
   */
  inputArtifacts: Artifact[];

  /**
   * Additional context tags
   *
   * @generated from field: map<string, string> tags = 10;
   */
  tags: { [key: string]: string };

  /**
   * Node configuration
   *
   * @generated from field: bytes node_config_json = 11;
   */
  nodeConfigJson: Uint8Array;

  /**
   * Parent trace context
   *
   * @generated from field: map<string, string> trace_context = 12;
   */
  traceContext: { [key: string]: string };
};

/**
 * Describes the message n8nwork.execution.v1.StepExecRequest.
 * Use `create(StepExecRequestSchema)` to create a new message.
 */
export const StepExecRequestSchema: GenMessage<StepExecRequest> = /*@__PURE__*/
  messageDesc(file_execution, 5);

/**
 * Step execution response
 *
 * @generated from message n8nwork.execution.v1.StepExecResponse
 */
export type StepExecResponse = Message<"n8nwork.execution.v1.StepExecResponse"> & {
  /**
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  /**
   * @generated from field: string run_id = 2;
   */
  runId: string;

  /**
   * @generated from field: string step_id = 3;
   */
  stepId: string;

  /**
   * @generated from field: bool success = 4;
   */
  success: boolean;

  /**
   * Output data as JSON
   *
   * @generated from field: bytes output_json = 5;
   */
  outputJson: Uint8Array;

  /**
   * Error details as JSON
   *
   * @generated from field: bytes error_json = 6;
   */
  errorJson: Uint8Array;

  /**
   * Error classification
   *
   * @generated from field: n8nwork.execution.v1.ErrorCode error_code = 7;
   */
  errorCode: ErrorCode;

  /**
   * Performance metrics
   *
   * @generated from field: map<string, double> metrics = 8;
   */
  metrics: { [key: string]: number };

  /**
   * Output artifacts
   *
   * @generated from field: repeated n8nwork.execution.v1.Artifact output_artifacts = 9;
   */
  outputArtifacts: Artifact[];

  /**
   * Execution logs
   *
   * @generated from field: repeated n8nwork.execution.v1.LogLine logs = 10;
   */
  logs: LogLine[];

  /**
   * Additional diagnostic information
   *
   * @generated from field: string diagnostics = 11;
   */
  diagnostics: string;

  /**
   * Suggested retry delay for transient errors
   *
   * @generated from field: int64 retry_after_ms = 12;
   */
  retryAfterMs: bigint;

  /**
   * Execution timestamps
   *
   * @generated from field: google.protobuf.Timestamp started_at = 13;
   */
  startedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp completed_at = 14;
   */
  completedAt?: Timestamp;
};

/**
 * Describes the message n8nwork.execution.v1.StepExecResponse.
 * Use `create(StepExecResponseSchema)` to create a new message.
 */
export const StepExecResponseSchema: GenMessage<StepExecResponse> = /*@__PURE__*/
  messageDesc(file_execution, 6);

/**
 * Execution status request
 *
 * @generated from message n8nwork.execution.v1.GetExecutionStatusRequest
 */
export type GetExecutionStatusRequest = Message<"n8nwork.execution.v1.GetExecutionStatusRequest"> & {
  /**
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  /**
   * @generated from field: string run_id = 2;
   */
  runId: string;

  /**
   * @generated from field: string step_id = 3;
   */
  stepId: string;
};

/**
 * Describes the message n8nwork.execution.v1.GetExecutionStatusRequest.
 * Use `create(GetExecutionStatusRequestSchema)` to create a new message.
 */
export const GetExecutionStatusRequestSchema: GenMessage<GetExecutionStatusRequest> = /*@__PURE__*/
  messageDesc(file_execution, 7);

/**
 * Execution status response
 *
 * @generated from message n8nwork.execution.v1.GetExecutionStatusResponse
 */
export type GetExecutionStatusResponse = Message<"n8nwork.execution.v1.GetExecutionStatusResponse"> & {
  /**
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  /**
   * @generated from field: string run_id = 2;
   */
  runId: string;

  /**
   * @generated from field: string step_id = 3;
   */
  stepId: string;

  /**
   * @generated from field: n8nwork.execution.v1.GetExecutionStatusResponse.Status status = 4;
   */
  status: GetExecutionStatusResponse_Status;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 5;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string message = 6;
   */
  message: string;

  /**
   * @generated from field: map<string, string> metadata = 7;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message n8nwork.execution.v1.GetExecutionStatusResponse.
 * Use `create(GetExecutionStatusResponseSchema)` to create a new message.
 */
export const GetExecutionStatusResponseSchema: GenMessage<GetExecutionStatusResponse> = /*@__PURE__*/
  messageDesc(file_execution, 8);

/**
 * @generated from enum n8nwork.execution.v1.GetExecutionStatusResponse.Status
 */
export enum GetExecutionStatusResponse_Status {
  /**
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * @generated from enum value: STATUS_RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: STATUS_COMPLETED = 3;
   */
  COMPLETED = 3,

  /**
   * @generated from enum value: STATUS_FAILED = 4;
   */
  FAILED = 4,

  /**
   * @generated from enum value: STATUS_CANCELLED = 5;
   */
  CANCELLED = 5,

  /**
   * @generated from enum value: STATUS_TIMEOUT = 6;
   */
  TIMEOUT = 6,
}

/**
 * Describes the enum n8nwork.execution.v1.GetExecutionStatusResponse.Status.
 */
export const GetExecutionStatusResponse_StatusSchema: GenEnum<GetExecutionStatusResponse_Status> = /*@__PURE__*/
  enumDesc(file_execution, 8, 0);

/**
 * Cancel execution request
 *
 * @generated from message n8nwork.execution.v1.CancelExecutionRequest
 */
export type CancelExecutionRequest = Message<"n8nwork.execution.v1.CancelExecutionRequest"> & {
  /**
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  /**
   * @generated from field: string run_id = 2;
   */
  runId: string;

  /**
   * @generated from field: string step_id = 3;
   */
  stepId: string;

  /**
   * @generated from field: string reason = 4;
   */
  reason: string;
};

/**
 * Describes the message n8nwork.execution.v1.CancelExecutionRequest.
 * Use `create(CancelExecutionRequestSchema)` to create a new message.
 */
export const CancelExecutionRequestSchema: GenMessage<CancelExecutionRequest> = /*@__PURE__*/
  messageDesc(file_execution, 9);

/**
 * Cancel execution response
 *
 * @generated from message n8nwork.execution.v1.CancelExecutionResponse
 */
export type CancelExecutionResponse = Message<"n8nwork.execution.v1.CancelExecutionResponse"> & {
  /**
   * @generated from field: bool cancelled = 1;
   */
  cancelled: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message n8nwork.execution.v1.CancelExecutionResponse.
 * Use `create(CancelExecutionResponseSchema)` to create a new message.
 */
export const CancelExecutionResponseSchema: GenMessage<CancelExecutionResponse> = /*@__PURE__*/
  messageDesc(file_execution, 10);

/**
 * Health check request
 *
 * @generated from message n8nwork.execution.v1.HealthRequest
 */
export type HealthRequest = Message<"n8nwork.execution.v1.HealthRequest"> & {
  /**
   * @generated from field: string service = 1;
   */
  service: string;
};

/**
 * Describes the message n8nwork.execution.v1.HealthRequest.
 * Use `create(HealthRequestSchema)` to create a new message.
 */
export const HealthRequestSchema: GenMessage<HealthRequest> = /*@__PURE__*/
  messageDesc(file_execution, 11);

/**
 * Health check response
 *
 * @generated from message n8nwork.execution.v1.HealthResponse
 */
export type HealthResponse = Message<"n8nwork.execution.v1.HealthResponse"> & {
  /**
   * @generated from field: n8nwork.execution.v1.HealthResponse.Status status = 1;
   */
  status: HealthResponse_Status;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: n8nwork.execution.v1.Capabilities capabilities = 3;
   */
  capabilities?: Capabilities;
};

/**
 * Describes the message n8nwork.execution.v1.HealthResponse.
 * Use `create(HealthResponseSchema)` to create a new message.
 */
export const HealthResponseSchema: GenMessage<HealthResponse> = /*@__PURE__*/
  messageDesc(file_execution, 12);

/**
 * @generated from enum n8nwork.execution.v1.HealthResponse.Status
 */
export enum HealthResponse_Status {
  /**
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STATUS_SERVING = 1;
   */
  SERVING = 1,

  /**
   * @generated from enum value: STATUS_NOT_SERVING = 2;
   */
  NOT_SERVING = 2,

  /**
   * @generated from enum value: STATUS_SERVICE_UNKNOWN = 3;
   */
  SERVICE_UNKNOWN = 3,
}

/**
 * Describes the enum n8nwork.execution.v1.HealthResponse.Status.
 */
export const HealthResponse_StatusSchema: GenEnum<HealthResponse_Status> = /*@__PURE__*/
  enumDesc(file_execution, 12, 0);

/**
 * Error classification for handling
 *
 * @generated from enum n8nwork.execution.v1.ErrorCode
 */
export enum ErrorCode {
  /**
   * @generated from enum value: ERROR_CODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ERROR_CODE_NONE = 1;
   */
  NONE = 1,

  /**
   * @generated from enum value: ERROR_CODE_TRANSIENT = 2;
   */
  TRANSIENT = 2,

  /**
   * @generated from enum value: ERROR_CODE_FATAL = 3;
   */
  FATAL = 3,

  /**
   * @generated from enum value: ERROR_CODE_TIMEOUT = 4;
   */
  TIMEOUT = 4,

  /**
   * @generated from enum value: ERROR_CODE_CANCELLED = 5;
   */
  CANCELLED = 5,

  /**
   * @generated from enum value: ERROR_CODE_RATE_LIMIT = 6;
   */
  RATE_LIMIT = 6,

  /**
   * @generated from enum value: ERROR_CODE_AUTHORIZATION = 7;
   */
  AUTHORIZATION = 7,

  /**
   * @generated from enum value: ERROR_CODE_INVALID_INPUT = 8;
   */
  INVALID_INPUT = 8,
}

/**
 * Describes the enum n8nwork.execution.v1.ErrorCode.
 */
export const ErrorCodeSchema: GenEnum<ErrorCode> = /*@__PURE__*/
  enumDesc(file_execution, 0);

/**
 * Data classification for compliance
 *
 * @generated from enum n8nwork.execution.v1.DataClass
 */
export enum DataClass {
  /**
   * @generated from enum value: DATA_CLASS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DATA_CLASS_GENERIC = 1;
   */
  GENERIC = 1,

  /**
   * @generated from enum value: DATA_CLASS_PII = 2;
   */
  PII = 2,

  /**
   * @generated from enum value: DATA_CLASS_PHI = 3;
   */
  PHI = 3,

  /**
   * @generated from enum value: DATA_CLASS_SECRET = 4;
   */
  SECRET = 4,

  /**
   * @generated from enum value: DATA_CLASS_FINANCIAL = 5;
   */
  FINANCIAL = 5,
}

/**
 * Describes the enum n8nwork.execution.v1.DataClass.
 */
export const DataClassSchema: GenEnum<DataClass> = /*@__PURE__*/
  enumDesc(file_execution, 1);

/**
 * Core execution service for workflow steps
 *
 * @generated from service n8nwork.execution.v1.ExecutionService
 */
export const ExecutionService: GenService<{
  /**
   * Execute a single workflow step
   *
   * @generated from rpc n8nwork.execution.v1.ExecutionService.ExecuteStep
   */
  executeStep: {
    methodKind: "unary";
    input: typeof StepExecRequestSchema;
    output: typeof StepExecResponseSchema;
  },
  /**
   * Get execution status
   *
   * @generated from rpc n8nwork.execution.v1.ExecutionService.GetExecutionStatus
   */
  getExecutionStatus: {
    methodKind: "unary";
    input: typeof GetExecutionStatusRequestSchema;
    output: typeof GetExecutionStatusResponseSchema;
  },
  /**
   * Cancel execution
   *
   * @generated from rpc n8nwork.execution.v1.ExecutionService.CancelExecution
   */
  cancelExecution: {
    methodKind: "unary";
    input: typeof CancelExecutionRequestSchema;
    output: typeof CancelExecutionResponseSchema;
  },
  /**
   * Health check
   *
   * @generated from rpc n8nwork.execution.v1.ExecutionService.Health
   */
  health: {
    methodKind: "unary";
    input: typeof HealthRequestSchema;
    output: typeof HealthResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_execution, 0);

